<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Output\Objects\nl1000_a0_app_m3.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Output\Objects\nl1000_a0_app_m3.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060183: Last Updated: Thu May 10 11:30:18 2018
<BR><P>
<H3>Maximum Stack Usage =        920 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
wpa_supplicant_process_3_of_4_patch &rArr; add_auto_connect_list &rArr; write_auto_connect_ap_num_to_flash &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1ea]">qsort</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1ea]">qsort</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[0]">BleAppTaskHandler</a> from ble_client_app.o(i.BleAppTaskHandler) referenced from ble_client_app.o(i.BleAppInit)
 <LI><a href="#[43]">Boot_PreInitWarm_patch</a> from sys_init_patch.o(i.Boot_PreInitWarm_patch) referenced from sys_init_patch.o(i.SysInit_EntryPoint)
 <LI><a href="#[66]">CmdProcess_Patch</a> from diag_task_patch.o(i.CmdProcess_Patch) referenced from diag_task_patch.o(i.diag_task_patch_func_init)
 <LI><a href="#[c7]">CtrlWifi_PsStateForce_impl</a> from controller_wifi_patch.o(i.CtrlWifi_PsStateForce_impl) referenced from controller_wifi_patch.o(i.wifi_ctrl_patch_init)
 <LI><a href="#[64]">CtrlWifi_PsTout</a> from controller_wifi_patch.o(i.CtrlWifi_PsTout) referenced from controller_wifi_patch.o(i.controller_wifi_init_patch)
 <LI><a href="#[74]">GPIO_IRQHandler_Patch_patch</a> from nl1000_it_patch.o(i.GPIO_IRQHandler_Patch_patch) referenced from nl1000_it_patch.o(i.isr_patch_init)
 <LI><a href="#[87]">Hal_DbgUart_BaudRateSet_patch</a> from hal_dbg_uart_patch.o(i.Hal_DbgUart_BaudRateSet_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[88]">Hal_DbgUart_RxIntEn_patch</a> from hal_dbg_uart_patch.o(i.Hal_DbgUart_RxIntEn_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[8c]">Hal_Flash_4KSectorAddrErase_patch</a> from hal_flash_patch.o(i.Hal_Flash_4KSectorAddrErase_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[8d]">Hal_Flash_4KSectorIdxErase_patch</a> from hal_flash_patch.o(i.Hal_Flash_4KSectorIdxErase_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[8b]">Hal_Flash_Init_patch</a> from hal_flash_patch.o(i.Hal_Flash_Init_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[8e]">Hal_Flash_PageAddrProgram_patch</a> from hal_flash_patch.o(i.Hal_Flash_PageAddrProgram_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[90]">Hal_Flash_PageAddrRead_patch</a> from hal_flash_patch.o(i.Hal_Flash_PageAddrRead_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[8f]">Hal_Flash_PageIdxProgram_patch</a> from hal_flash_patch.o(i.Hal_Flash_PageIdxProgram_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[91]">Hal_Flash_Reset_patch</a> from hal_flash_patch.o(i.Hal_Flash_Reset_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[92]">Hal_I2c_MasterInit_patch</a> from hal_i2c_patch.o(i.Hal_I2c_MasterInit_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[85]">Hal_SysPinMuxAppInit_patch</a> from hal_system_patch.o(i.Hal_SysPinMuxAppInit_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[86]">Hal_Sys_ApsClkChangeApply_patch</a> from hal_system_patch.o(i.Hal_Sys_ApsClkChangeApply_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[82]">Hal_Sys_ApsModuleRst_patch</a> from hal_system_patch.o(i.Hal_Sys_ApsModuleRst_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[83]">Hal_Sys_MsqModuleRst_patch</a> from hal_system_patch.o(i.Hal_Sys_MsqModuleRst_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[84]">Hal_Sys_PwmSrcSelect_patch</a> from hal_system_patch.o(i.Hal_Sys_PwmSrcSelect_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[81]">Hal_Sys_SleepTimerGet_patch</a> from hal_system_patch.o(i.Hal_Sys_SleepTimerGet_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[93]">Hal_Tmr_Init_patch</a> from hal_tmr_patch.o(i.Hal_Tmr_Init_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[95]">Hal_Tmr_ReadCurrValue_patch</a> from hal_tmr_patch.o(i.Hal_Tmr_ReadCurrValue_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[94]">Hal_Tmr_Start_patch</a> from hal_tmr_patch.o(i.Hal_Tmr_Start_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[8a]">Hal_Uart_BaudRateSet_patch</a> from hal_uart_patch.o(i.Hal_Uart_BaudRateSet_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[89]">Hal_Uart_Init_patch</a> from hal_uart_patch.o(i.Hal_Uart_Init_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[9b]">Hal_Wdt_Clear_patch</a> from hal_wdt_patch.o(i.Hal_Wdt_Clear_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[9a]">Hal_Wdt_Feed_patch</a> from hal_wdt_patch.o(i.Hal_Wdt_Feed_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[97]">Hal_Wdt_InitForInt_patch</a> from hal_wdt_patch.o(i.Hal_Wdt_InitForInt_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[96]">Hal_Wdt_Init_patch</a> from hal_wdt_patch.o(i.Hal_Wdt_Init_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[98]">Hal_Wdt_Start_patch</a> from hal_wdt_patch.o(i.Hal_Wdt_Start_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[99]">Hal_Wdt_Stop_patch</a> from hal_wdt_patch.o(i.Hal_Wdt_Stop_patch) referenced from peri_patch_init.o(i.peripheral_patch_init)
 <LI><a href="#[16]">LeAppFreePeerGattDb</a> from ble_cmd_app.o(i.LeAppFreePeerGattDb) referenced from ble_cmd_app.o(i.LeCmdAppFuncAssign)
 <LI><a href="#[15]">LeAppGetPeerByHdl</a> from ble_cmd_app.o(i.LeAppGetPeerByHdl) referenced from ble_cmd_app.o(i.LeCmdAppFuncAssign)
 <LI><a href="#[1]">LeAttHandleOtherOp_Patch</a> from ble_att_common_patch.o(i.LeAttHandleOtherOp_Patch) referenced from ble_att_common_patch.o(i.LeAttCommonPatch_Init)
 <LI><a href="#[4]">LeCmAddPeerDev_Impl</a> from ble_cm_conn_patch.o(i.LeCmAddPeerDev_Impl) referenced from ble_cm_conn_patch.o(i.LeCmConnPatch_Init)
 <LI><a href="#[5]">LeCmDeletePeerDev_Impl</a> from ble_cm_conn_patch.o(i.LeCmDeletePeerDev_Impl) referenced from ble_cm_conn_patch.o(i.LeCmConnPatch_Init)
 <LI><a href="#[2]">LeCmGetPeerCount_Impl</a> from ble_cm_conn_patch.o(i.LeCmGetPeerCount_Impl) referenced from ble_cm_conn_patch.o(i.LeCmConnPatch_Init)
 <LI><a href="#[8]">LeCmHandleConnectionUpdateComplete_Patch</a> from ble_cm_handler_patch.o(i.LeCmHandleConnectionUpdateComplete_Patch) referenced from ble_cm_handler_patch.o(i.LeCmHandlerPatch_Init)
 <LI><a href="#[6]">LeCmHnadleHciExceptionCmdRsp_Patch</a> from ble_cm_handler_patch.o(i.LeCmHnadleHciExceptionCmdRsp_Patch) referenced from ble_cm_handler_patch.o(i.LeCmHandlerPatch_Init)
 <LI><a href="#[7]">LeCmHnadleHciExceptionEventInd_Patch</a> from ble_cm_handler_patch.o(i.LeCmHnadleHciExceptionEventInd_Patch) referenced from ble_cm_handler_patch.o(i.LeCmHandlerPatch_Init)
 <LI><a href="#[3]">LeCmPeerDevExist_Impl</a> from ble_cm_conn_patch.o(i.LeCmPeerDevExist_Impl) referenced from ble_cm_conn_patch.o(i.LeCmConnPatch_Init)
 <LI><a href="#[17]">LeCmdAppBuildGattTable</a> from ble_cmd_app_gatt.o(i.LeCmdAppBuildGattTable) referenced from ble_cmd_app_gatt.o(i.LeCmdAppGattFuncAssign)
 <LI><a href="#[13]">LeCmdAppClearSendFlag</a> from ble_cmd_app_cmd.o(i.LeCmdAppClearSendFlag) referenced from ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
 <LI><a href="#[19]">LeCmdAppProcessCliCmd</a> from ble_cmd_app_cmd.o(i.LeCmdAppProcessCliCmd) referenced from ble_cmd_app_cmd.o(i.LeCmdAppProcessAtCmd)
 <LI><a href="#[19]">LeCmdAppProcessCliCmd</a> from ble_cmd_app_cmd.o(i.LeCmdAppProcessCliCmd) referenced from ble_host_test_cmd.o(i.LeHostTestCmdHandler)
 <LI><a href="#[a]">LeCmdAppSendAtCmdAck</a> from ble_cmd_app_cmd.o(i.LeCmdAppSendAtCmdAck) referenced from ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
 <LI><a href="#[9]">LeCmdAppSendAtCmdRsp</a> from ble_cmd_app_cmd.o(i.LeCmdAppSendAtCmdRsp) referenced from ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
 <LI><a href="#[b]">LeCmdAppSendBleDisconnRsp</a> from ble_cmd_app_cmd.o(i.LeCmdAppSendBleDisconnRsp) referenced from ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
 <LI><a href="#[10]">LeCmdAppSendBleGattcCharInfoRsp</a> from ble_cmd_app_cmd.o(i.LeCmdAppSendBleGattcCharInfoRsp) referenced from ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
 <LI><a href="#[12]">LeCmdAppSendBleGattcCharReadRsp</a> from ble_cmd_app_cmd.o(i.LeCmdAppSendBleGattcCharReadRsp) referenced from ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
 <LI><a href="#[11]">LeCmdAppSendBleGattcDescInfoRsp</a> from ble_cmd_app_cmd.o(i.LeCmdAppSendBleGattcDescInfoRsp) referenced from ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
 <LI><a href="#[f]">LeCmdAppSendBleGattcInclSrvRsp</a> from ble_cmd_app_cmd.o(i.LeCmdAppSendBleGattcInclSrvRsp) referenced from ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
 <LI><a href="#[e]">LeCmdAppSendBleGattcNoPrimSrvRsp</a> from ble_cmd_app_cmd.o(i.LeCmdAppSendBleGattcNoPrimSrvRsp) referenced from ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
 <LI><a href="#[d]">LeCmdAppSendBleGattcPrimSrvRsp</a> from ble_cmd_app_cmd.o(i.LeCmdAppSendBleGattcPrimSrvRsp) referenced from ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
 <LI><a href="#[c]">LeCmdAppShowStateConnected</a> from ble_cmd_app_cmd.o(i.LeCmdAppShowStateConnected) referenced from ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
 <LI><a href="#[18]">LeCmdAppTaskHandler</a> from ble_cmd_app.o(i.LeCmdAppTaskHandler) referenced from ble_cmd_app.o(i.LeCmdAppInit)
 <LI><a href="#[1a]">LeGapConnUpdateRequest_Patch</a> from ble_gap_if_patch.o(i.LeGapConnUpdateRequest_Patch) referenced from ble_gap_if_patch.o(i.LeGapIfPatch_Init)
 <LI><a href="#[20]">LeGattAccessReadRsp_Patch</a> from ble_gatt_patch.o(i.LeGattAccessReadRsp_Patch) referenced from ble_gatt_patch.o(i.LeGattPatch_Init)
 <LI><a href="#[1f]">LeGattAccessWriteRsp_Patch</a> from ble_gatt_patch.o(i.LeGattAccessWriteRsp_Patch) referenced from ble_gatt_patch.o(i.LeGattPatch_Init)
 <LI><a href="#[29]">LeGattBuildReadMultiReq_Patch</a> from ble_gatt_server_patch.o(i.LeGattBuildReadMultiReq_Patch) referenced from ble_gatt_server_patch.o(i.LeGattServerPatchInit)
 <LI><a href="#[30]">LeGattCheckPrepareData_Patch</a> from ble_gatt_server_patch.o(i.LeGattCheckPrepareData_Patch) referenced from ble_gatt_server_patch.o(i.LeGattServerPatchInit)
 <LI><a href="#[2a]">LeGattCheckReadByTypeAction_Patch</a> from ble_gatt_server_patch.o(i.LeGattCheckReadByTypeAction_Patch) referenced from ble_gatt_server_patch.o(i.LeGattServerPatchInit)
 <LI><a href="#[1c]">LeGattFindStartService_Patch</a> from ble_gatt_common_patch.o(i.LeGattFindStartService_Patch) referenced from ble_gatt_common_patch.o(i.LeGattCommonPatch_Init)
 <LI><a href="#[1b]">LeGattHandleErrorRsp_Patch</a> from ble_gatt_client_patch.o(i.LeGattHandleErrorRsp_Patch) referenced from ble_gatt_client_patch.o(i.LeGattClientPatch_Init)
 <LI><a href="#[2f]">LeGattHandlePrepareWriteReq_Patch</a> from ble_gatt_server_patch.o(i.LeGattHandlePrepareWriteReq_Patch) referenced from ble_gatt_server_patch.o(i.LeGattServerPatchInit)
 <LI><a href="#[2d]">LeGattHandleReadBlobReq_Patch</a> from ble_gatt_server_patch.o(i.LeGattHandleReadBlobReq_Patch) referenced from ble_gatt_server_patch.o(i.LeGattServerPatchInit)
 <LI><a href="#[2b]">LeGattHandleReadByTypeReq_Patch</a> from ble_gatt_server_patch.o(i.LeGattHandleReadByTypeReq_Patch) referenced from ble_gatt_server_patch.o(i.LeGattServerPatchInit)
 <LI><a href="#[2c]">LeGattHandleReadReq_Patch</a> from ble_gatt_server_patch.o(i.LeGattHandleReadReq_Patch) referenced from ble_gatt_server_patch.o(i.LeGattServerPatchInit)
 <LI><a href="#[2e]">LeGattHandleWriteReq_Patch</a> from ble_gatt_server_patch.o(i.LeGattHandleWriteReq_Patch) referenced from ble_gatt_server_patch.o(i.LeGattServerPatchInit)
 <LI><a href="#[21]">LeGattModifyAttrVal_Patch</a> from ble_gatt_patch.o(i.LeGattModifyAttrVal_Patch) referenced from ble_gatt_patch.o(i.LeGattPatch_Init)
 <LI><a href="#[1e]">LeGattPrepareWriteCharValReliable_Patch</a> from ble_gatt_patch.o(i.LeGattPrepareWriteCharValReliable_Patch) referenced from ble_gatt_patch.o(i.LeGattPatch_Init)
 <LI><a href="#[26]">LeGattProcedureFindAllCharDescriptor_Patch</a> from ble_gatt_procedure_patch.o(i.LeGattProcedureFindAllCharDescriptor_Patch) referenced from ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init)
 <LI><a href="#[22]">LeGattProcedureFindAllPrimaryService_Patch</a> from ble_gatt_procedure_patch.o(i.LeGattProcedureFindAllPrimaryService_Patch) referenced from ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init)
 <LI><a href="#[25]">LeGattProcedureFindCharacteristic_Patch</a> from ble_gatt_procedure_patch.o(i.LeGattProcedureFindCharacteristic_Patch) referenced from ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init)
 <LI><a href="#[24]">LeGattProcedureFindIncludedService_Patch</a> from ble_gatt_procedure_patch.o(i.LeGattProcedureFindIncludedService_Patch) referenced from ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init)
 <LI><a href="#[23]">LeGattProcedureFindPrimaryServiceByUuid_Patch</a> from ble_gatt_procedure_patch.o(i.LeGattProcedureFindPrimaryServiceByUuid_Patch) referenced from ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init)
 <LI><a href="#[28]">LeGattProcedurePrepareWriteCharValReliable_Patch</a> from ble_gatt_procedure_patch.o(i.LeGattProcedurePrepareWriteCharValReliable_Patch) referenced from ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init)
 <LI><a href="#[27]">LeGattProcedureReadCharValByUuid_Patch</a> from ble_gatt_procedure_patch.o(i.LeGattProcedureReadCharValByUuid_Patch) referenced from ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init)
 <LI><a href="#[1d]">LeGattWriteLongCharVal_Patch</a> from ble_gatt_patch.o(i.LeGattWriteLongCharVal_Patch) referenced from ble_gatt_patch.o(i.LeGattPatch_Init)
 <LI><a href="#[31]">LeHciLeSetEventMask_Patch</a> from ble_hci_cmd_handler_patch.o(i.LeHciLeSetEventMask_Patch) referenced from ble_hci_cmd_handler_patch.o(i.LeHciCmdHandler_Init)
 <LI><a href="#[33]">LeHostPreInit_Patch</a> from ble_rtos_task_patch.o(i.LeHostPreInit_Patch) referenced from ble_rtos_task_patch.o(i.LeRtosTaskPatch_Init)
 <LI><a href="#[34]">LeSmpConfigInit_Patch</a> from ble_smp_common_patch.o(i.LeSmpConfigInit_Patch) referenced from ble_smp_common_patch.o(i.LeSmpCommonPatch_Init)
 <LI><a href="#[36]">LeSmpGetPublicKey_Patch</a> from ble_smp_secure_conn_patch.o(i.LeSmpGetPublicKey_Patch) referenced from ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init)
 <LI><a href="#[3b]">LeSmpHandlePairingPublicKey_Patch</a> from ble_smp_secure_conn_patch.o(i.LeSmpHandlePairingPublicKey_Patch) referenced from ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init)
 <LI><a href="#[39]">LeSmpHandleScPairRandom_Patch</a> from ble_smp_secure_conn_patch.o(i.LeSmpHandleScPairRandom_Patch) referenced from ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init)
 <LI><a href="#[3d]">LeSmpRemoveBondInfo_Patch</a> from ble_smp_store_patch.o(i.LeSmpRemoveBondInfo_Patch) referenced from ble_smp_store_patch.o(i.LeSmpStorePatch_Init)
 <LI><a href="#[37]">LeSmpScConfirmExecute_Patch</a> from ble_smp_secure_conn_patch.o(i.LeSmpScConfirmExecute_Patch) referenced from ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init)
 <LI><a href="#[35]">LeSmpScEnsureKeysGenerated_Patch</a> from ble_smp_secure_conn_patch.o(i.LeSmpScEnsureKeysGenerated_Patch) referenced from ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init)
 <LI><a href="#[38]">LeSmpScGenNumcmp_Patch</a> from ble_smp_secure_conn_patch.o(i.LeSmpScGenNumcmp_Patch) referenced from ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init)
 <LI><a href="#[3a]">LeSmpScPublicKeyExecute_Patch</a> from ble_smp_secure_conn_patch.o(i.LeSmpScPublicKeyExecute_Patch) referenced from ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init)
 <LI><a href="#[3c]">LeSmpUpdateBondinfo_Patch</a> from ble_smp_store_patch.o(i.LeSmpUpdateBondinfo_Patch) referenced from ble_smp_store_patch.o(i.LeSmpStorePatch_Init)
 <LI><a href="#[3e]">LeSmpUtilEncrypt_Patch</a> from ble_smp_util_patch.o(i.LeSmpUtilEncrypt_Patch) referenced from ble_smp_util_patch.o(i.LeSmpUtilPatch_Init)
 <LI><a href="#[3f]">LeSmpUtilGenDhkey_Patch</a> from ble_smp_util_patch.o(i.LeSmpUtilGenDhkey_Patch) referenced from ble_smp_util_patch.o(i.LeSmpUtilPatch_Init)
 <LI><a href="#[40]">LeSmpUtilGetErIr_Patch</a> from ble_smp_util_patch.o(i.LeSmpUtilGetErIr_Patch) referenced from ble_smp_util_patch.o(i.LeSmpUtilPatch_Init)
 <LI><a href="#[14]">LeUtilAlignment</a> from ble_cmd_app_db.o(i.LeUtilAlignment) referenced from ble_cmd_app_db.o(i.LeCmdAppDbFuncAssign)
 <LI><a href="#[4d]">Main_AppInit_patch</a> from main_patch.o(i.Main_AppInit_patch) referenced from main_patch.o(.ARM.__at_0x00420000)
 <LI><a href="#[46]">Main_ClockSetup_patch</a> from sys_init_patch.o(i.Main_ClockSetup_patch) referenced from sys_init_patch.o(i.SysInit_EntryPoint)
 <LI><a href="#[44]">Main_DriverInit_patch</a> from sys_init_patch.o(i.Main_DriverInit_patch) referenced from sys_init_patch.o(i.SysInit_EntryPoint)
 <LI><a href="#[48]">Main_IdleHook_patch</a> from sys_init_patch.o(i.Main_IdleHook_patch) referenced from sys_init_patch.o(i.SysInit_EntryPoint)
 <LI><a href="#[45]">Main_PowerSetup_patch</a> from sys_init_patch.o(i.Main_PowerSetup_patch) referenced from sys_init_patch.o(i.SysInit_EntryPoint)
 <LI><a href="#[47]">Main_ServiceInit_patch</a> from sys_init_patch.o(i.Main_ServiceInit_patch) referenced from sys_init_patch.o(i.SysInit_EntryPoint)
 <LI><a href="#[32]">ParseLeCmdTestCommand</a> from ble_cmd_app_cmd.o(i.ParseLeCmdTestCommand) referenced from ble_host_test_cmd.o(i.LeHostTestCmdHandler)
 <LI><a href="#[67]">ParsePINGCommand_patch</a> from diag_task_patch.o(i.ParsePINGCommand_patch) referenced from diag_task_patch.o(i.diag_task_patch_func_init)
 <LI><a href="#[77]">TIM0_IRQHandler_Patch_patch</a> from nl1000_it_patch.o(i.TIM0_IRQHandler_Patch_patch) referenced from nl1000_it_patch.o(i.isr_patch_init)
 <LI><a href="#[78]">TIM1_IRQHandler_Patch_patch</a> from nl1000_it_patch.o(i.TIM1_IRQHandler_Patch_patch) referenced from nl1000_it_patch.o(i.isr_patch_init)
 <LI><a href="#[75]">UART0_IRQHandler_Patch_patch</a> from nl1000_it_patch.o(i.UART0_IRQHandler_Patch_patch) referenced from nl1000_it_patch.o(i.isr_patch_init)
 <LI><a href="#[76]">UART1_IRQHandler_Patch_patch</a> from nl1000_it_patch.o(i.UART1_IRQHandler_Patch_patch) referenced from nl1000_it_patch.o(i.isr_patch_init)
 <LI><a href="#[42]">__Test_ForSwPatch</a> from sys_init_patch.o(i.__Test_ForSwPatch) referenced from sys_init_patch.o(i.SysInit_EntryPoint)
 <LI><a href="#[ff]">_at_cmd_ble_addr</a> from at_cmd_ble_patch.o(i._at_cmd_ble_addr) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[103]">_at_cmd_ble_advdata</a> from at_cmd_ble_patch.o(i._at_cmd_ble_advdata) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[102]">_at_cmd_ble_advparam</a> from at_cmd_ble_patch.o(i._at_cmd_ble_advparam) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[108]">_at_cmd_ble_advstart</a> from at_cmd_ble_patch.o(i._at_cmd_ble_advstart) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[109]">_at_cmd_ble_advstop</a> from at_cmd_ble_patch.o(i._at_cmd_ble_advstop) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[105]">_at_cmd_ble_cfgmtu</a> from at_cmd_ble_patch.o(i._at_cmd_ble_cfgmtu) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[10a]">_at_cmd_ble_conn</a> from at_cmd_ble_patch.o(i._at_cmd_ble_conn) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[123]">_at_cmd_ble_connect</a> from at_cmd_ble_patch.o(i._at_cmd_ble_connect) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[124]">_at_cmd_ble_connect_info</a> from at_cmd_ble_patch.o(i._at_cmd_ble_connect_info) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[104]">_at_cmd_ble_datalen</a> from at_cmd_ble_patch.o(i._at_cmd_ble_datalen) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[117]">_at_cmd_ble_dbg</a> from at_cmd_ble_patch.o(i._at_cmd_ble_dbg) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[115]">_at_cmd_ble_disconn</a> from at_cmd_ble_patch.o(i._at_cmd_ble_disconn) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[129]">_at_cmd_ble_disconnect</a> from at_cmd_ble_patch.o(i._at_cmd_ble_disconnect) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[12a]">_at_cmd_ble_down</a> from at_cmd_ble_patch.o(i._at_cmd_ble_down) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[119]">_at_cmd_ble_end</a> from at_cmd_ble_patch.o(i._at_cmd_ble_end) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[112]">_at_cmd_ble_gattcchar</a> from at_cmd_ble_patch.o(i._at_cmd_ble_gattcchar) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[111]">_at_cmd_ble_gattcinclsrv</a> from at_cmd_ble_patch.o(i._at_cmd_ble_gattcinclsrv) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[110]">_at_cmd_ble_gattcprimsrv</a> from at_cmd_ble_patch.o(i._at_cmd_ble_gattcprimsrv) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[113]">_at_cmd_ble_gattcrd</a> from at_cmd_ble_patch.o(i._at_cmd_ble_gattcrd) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[114]">_at_cmd_ble_gattcwr</a> from at_cmd_ble_patch.o(i._at_cmd_ble_gattcwr) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[10c]">_at_cmd_ble_gattschar</a> from at_cmd_ble_patch.o(i._at_cmd_ble_gattschar) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[10e]">_at_cmd_ble_gattsind</a> from at_cmd_ble_patch.o(i._at_cmd_ble_gattsind) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[10d]">_at_cmd_ble_gattsntfy</a> from at_cmd_ble_patch.o(i._at_cmd_ble_gattsntfy) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[10f]">_at_cmd_ble_gattssetattr</a> from at_cmd_ble_patch.o(i._at_cmd_ble_gattssetattr) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[10b]">_at_cmd_ble_gattssrv</a> from at_cmd_ble_patch.o(i._at_cmd_ble_gattssrv) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[106]">_at_cmd_ble_gattssrvstart</a> from at_cmd_ble_patch.o(i._at_cmd_ble_gattssrvstart) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[125]">_at_cmd_ble_getdata</a> from at_cmd_ble_patch.o(i._at_cmd_ble_getdata) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[fe]">_at_cmd_ble_init</a> from at_cmd_ble_patch.o(i._at_cmd_ble_init) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[116]">_at_cmd_ble_mode</a> from at_cmd_ble_patch.o(i._at_cmd_ble_mode) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[128]">_at_cmd_ble_removedata</a> from at_cmd_ble_patch.o(i._at_cmd_ble_removedata) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[11a]">_at_cmd_ble_rsv</a> from at_cmd_ble_patch.o(i._at_cmd_ble_rsv) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[107]">_at_cmd_ble_scan</a> from at_cmd_ble_patch.o(i._at_cmd_ble_scan) referenced 2 times from at_cmd_ble_patch.o(.data)
 <LI><a href="#[100]">_at_cmd_ble_scanparam</a> from at_cmd_ble_patch.o(i._at_cmd_ble_scanparam) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[101]">_at_cmd_ble_scanrspdata</a> from at_cmd_ble_patch.o(i._at_cmd_ble_scanrspdata) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[126]">_at_cmd_ble_senddata</a> from at_cmd_ble_patch.o(i._at_cmd_ble_senddata) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[127]">_at_cmd_ble_showdata</a> from at_cmd_ble_patch.o(i._at_cmd_ble_showdata) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[118]">_at_cmd_ble_start</a> from at_cmd_ble_patch.o(i._at_cmd_ble_start) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[122]">_at_cmd_bles_adv_infinite</a> from at_cmd_ble_patch.o(i._at_cmd_bles_adv_infinite) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[121]">_at_cmd_bles_down</a> from at_cmd_ble_patch.o(i._at_cmd_bles_down) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[11b]">_at_cmd_bles_init</a> from at_cmd_ble_patch.o(i._at_cmd_bles_init) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[11e]">_at_cmd_bles_senddata</a> from at_cmd_ble_patch.o(i._at_cmd_bles_senddata) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[11f]">_at_cmd_bles_setdata</a> from at_cmd_ble_patch.o(i._at_cmd_bles_setdata) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[120]">_at_cmd_bles_showdata</a> from at_cmd_ble_patch.o(i._at_cmd_bles_showdata) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[11c]">_at_cmd_bles_start_bcst</a> from at_cmd_ble_patch.o(i._at_cmd_bles_start_bcst) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[11d]">_at_cmd_bles_stop_bcst</a> from at_cmd_ble_patch.o(i._at_cmd_bles_stop_bcst) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[12b]">_at_cmd_blestatus</a> from at_cmd_ble_patch.o(i._at_cmd_blestatus) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[132]">_at_cmd_bt_down</a> from at_cmd_ble_patch.o(i._at_cmd_bt_down) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[131]">_at_cmd_bt_init</a> from at_cmd_ble_patch.o(i._at_cmd_bt_init) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[135]">_at_cmd_bt_rfcomm_send</a> from at_cmd_ble_patch.o(i._at_cmd_bt_rfcomm_send) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[133]">_at_cmd_bt_rfcomm_start</a> from at_cmd_ble_patch.o(i._at_cmd_bt_rfcomm_start) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[134]">_at_cmd_bt_rfcomm_stop</a> from at_cmd_ble_patch.o(i._at_cmd_bt_rfcomm_stop) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[136]">_at_cmd_bt_scan</a> from at_cmd_ble_patch.o(i._at_cmd_bt_scan) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[12d]">_at_cmd_bts_down</a> from at_cmd_ble_patch.o(i._at_cmd_bts_down) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[12c]">_at_cmd_bts_init</a> from at_cmd_ble_patch.o(i._at_cmd_bts_init) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[130]">_at_cmd_bts_rfcomm_send</a> from at_cmd_ble_patch.o(i._at_cmd_bts_rfcomm_send) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[12e]">_at_cmd_bts_rfcomm_start</a> from at_cmd_ble_patch.o(i._at_cmd_bts_rfcomm_start) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[12f]">_at_cmd_bts_rfcomm_stop</a> from at_cmd_ble_patch.o(i._at_cmd_bts_rfcomm_stop) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[137]">_at_cmd_btstatus</a> from at_cmd_ble_patch.o(i._at_cmd_btstatus) referenced from at_cmd_ble_patch.o(.data)
 <LI><a href="#[4c]">_at_cmd_extend_impl</a> from at_cmd_patch.o(i._at_cmd_extend_impl) referenced from at_cmd_patch.o(i._at_cmd_func_init)
 <LI><a href="#[4b]">_at_cmd_handler_impl</a> from at_cmd_patch.o(i._at_cmd_handler_impl) referenced from at_cmd_patch.o(i._at_cmd_func_init)
 <LI><a href="#[13d]">_at_cmd_other_common_buf_show</a> from at_cmd_others_patch.o(i._at_cmd_other_common_buf_show) referenced from at_cmd_others_patch.o(.data)
 <LI><a href="#[13c]">_at_cmd_other_ir_rx_down</a> from at_cmd_others_patch.o(i._at_cmd_other_ir_rx_down) referenced from at_cmd_others_patch.o(.data)
 <LI><a href="#[13b]">_at_cmd_other_ir_rx_init</a> from at_cmd_others_patch.o(i._at_cmd_other_ir_rx_init) referenced from at_cmd_others_patch.o(.data)
 <LI><a href="#[13a]">_at_cmd_other_ir_tx</a> from at_cmd_others_patch.o(i._at_cmd_other_ir_tx) referenced from at_cmd_others_patch.o(.data)
 <LI><a href="#[139]">_at_cmd_other_ir_tx_down</a> from at_cmd_others_patch.o(i._at_cmd_other_ir_tx_down) referenced from at_cmd_others_patch.o(.data)
 <LI><a href="#[138]">_at_cmd_other_ir_tx_init</a> from at_cmd_others_patch.o(i._at_cmd_other_ir_tx_init) referenced from at_cmd_others_patch.o(.data)
 <LI><a href="#[140]">_at_cmd_other_secondary_uart_start</a> from at_cmd_others_patch.o(i._at_cmd_other_secondary_uart_start) referenced from at_cmd_others_patch.o(.data)
 <LI><a href="#[141]">_at_cmd_other_secondary_uart_stop</a> from at_cmd_others_patch.o(i._at_cmd_other_secondary_uart_stop) referenced from at_cmd_others_patch.o(.data)
 <LI><a href="#[142]">_at_cmd_other_secondary_uart_write</a> from at_cmd_others_patch.o(i._at_cmd_other_secondary_uart_write) referenced from at_cmd_others_patch.o(.data)
 <LI><a href="#[13f]">_at_cmd_other_temperature_off</a> from at_cmd_others_patch.o(i._at_cmd_other_temperature_off) referenced from at_cmd_others_patch.o(.data)
 <LI><a href="#[13e]">_at_cmd_other_temperature_on</a> from at_cmd_others_patch.o(i._at_cmd_other_temperature_on) referenced from at_cmd_others_patch.o(.data)
 <LI><a href="#[4a]">_at_cmd_parse_impl</a> from at_cmd_patch.o(i._at_cmd_parse_impl) referenced from at_cmd_patch.o(i._at_cmd_func_init)
 <LI><a href="#[143]">_at_cmd_pip_fun1</a> from at_cmd_pip_patch.o(i._at_cmd_pip_fun1) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[144]">_at_cmd_pip_rsv</a> from at_cmd_pip_patch.o(i._at_cmd_pip_rsv) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[148]">_at_cmd_pip_spi_master_buf_show</a> from at_cmd_pip_patch.o(i._at_cmd_pip_spi_master_buf_show) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[147]">_at_cmd_pip_spi_master_get_data</a> from at_cmd_pip_patch.o(i._at_cmd_pip_spi_master_get_data) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[145]">_at_cmd_pip_spi_master_init</a> from at_cmd_pip_patch.o(i._at_cmd_pip_spi_master_init) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[146]">_at_cmd_pip_spi_master_stop</a> from at_cmd_pip_patch.o(i._at_cmd_pip_spi_master_stop) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[14c]">_at_cmd_pip_spi_slave_buf_show</a> from at_cmd_pip_patch.o(i._at_cmd_pip_spi_slave_buf_show) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[14b]">_at_cmd_pip_spi_slave_buf_status</a> from at_cmd_pip_patch.o(i._at_cmd_pip_spi_slave_buf_status) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[149]">_at_cmd_pip_spi_slave_init</a> from at_cmd_pip_patch.o(i._at_cmd_pip_spi_slave_init) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[14a]">_at_cmd_pip_spi_slave_stop</a> from at_cmd_pip_patch.o(i._at_cmd_pip_spi_slave_stop) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[14e]">_at_cmd_pip_uart_cts_rts_disable</a> from at_cmd_pip_patch.o(i._at_cmd_pip_uart_cts_rts_disable) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[14d]">_at_cmd_pip_uart_cts_rts_enable</a> from at_cmd_pip_patch.o(i._at_cmd_pip_uart_cts_rts_enable) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[14f]">_at_cmd_pip_uart_start</a> from at_cmd_pip_patch.o(i._at_cmd_pip_uart_start) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[150]">_at_cmd_pip_uart_stop</a> from at_cmd_pip_patch.o(i._at_cmd_pip_uart_stop) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[151]">_at_cmd_pip_uart_write</a> from at_cmd_pip_patch.o(i._at_cmd_pip_uart_write) referenced from at_cmd_pip_patch.o(.data)
 <LI><a href="#[154]">_at_cmd_rf_channel</a> from at_cmd_rf_patch.o(i._at_cmd_rf_channel) referenced from at_cmd_rf_patch.o(.data)
 <LI><a href="#[156]">_at_cmd_rf_counters</a> from at_cmd_rf_patch.o(i._at_cmd_rf_counters) referenced from at_cmd_rf_patch.o(.data)
 <LI><a href="#[15a]">_at_cmd_rf_end</a> from at_cmd_rf_patch.o(i._at_cmd_rf_end) referenced from at_cmd_rf_patch.o(.data)
 <LI><a href="#[153]">_at_cmd_rf_go</a> from at_cmd_rf_patch.o(i._at_cmd_rf_go) referenced from at_cmd_rf_patch.o(.data)
 <LI><a href="#[152]">_at_cmd_rf_mode</a> from at_cmd_rf_patch.o(i._at_cmd_rf_mode) referenced from at_cmd_rf_patch.o(.data)
 <LI><a href="#[155]">_at_cmd_rf_resetcnts</a> from at_cmd_rf_patch.o(i._at_cmd_rf_resetcnts) referenced from at_cmd_rf_patch.o(.data)
 <LI><a href="#[15b]">_at_cmd_rf_rsv</a> from at_cmd_rf_patch.o(i._at_cmd_rf_rsv) referenced from at_cmd_rf_patch.o(.data)
 <LI><a href="#[158]">_at_cmd_rf_rx</a> from at_cmd_rf_patch.o(i._at_cmd_rf_rx) referenced from at_cmd_rf_patch.o(.data)
 <LI><a href="#[159]">_at_cmd_rf_start</a> from at_cmd_rf_patch.o(i._at_cmd_rf_start) referenced from at_cmd_rf_patch.o(.data)
 <LI><a href="#[157]">_at_cmd_rf_tx</a> from at_cmd_rf_patch.o(i._at_cmd_rf_tx) referenced from at_cmd_rf_patch.o(.data)
 <LI><a href="#[16a]">_at_cmd_sys_auto_recording_off</a> from at_cmd_sys_patch.o(i._at_cmd_sys_auto_recording_off) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[169]">_at_cmd_sys_auto_recording_on</a> from at_cmd_sys_patch.o(i._at_cmd_sys_auto_recording_on) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[170]">_at_cmd_sys_dbg_uart_ctrl</a> from at_cmd_sys_patch.o(i._at_cmd_sys_dbg_uart_ctrl) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[171]">_at_cmd_sys_download</a> from at_cmd_sys_patch.o(i._at_cmd_sys_download) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[167]">_at_cmd_sys_end</a> from at_cmd_sys_patch.o(i._at_cmd_sys_end) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[16b]">_at_cmd_sys_fwver</a> from at_cmd_sys_patch.o(i._at_cmd_sys_fwver) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[15d]">_at_cmd_sys_gmr</a> from at_cmd_sys_patch.o(i._at_cmd_sys_gmr) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[15e]">_at_cmd_sys_gslp</a> from at_cmd_sys_patch.o(i._at_cmd_sys_gslp) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[16c]">_at_cmd_sys_mcupwrsave</a> from at_cmd_sys_patch.o(i._at_cmd_sys_mcupwrsave) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[16d]">_at_cmd_sys_mcustandby</a> from at_cmd_sys_patch.o(i._at_cmd_sys_mcustandby) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[16e]">_at_cmd_sys_ota_svr_start</a> from at_cmd_sys_patch.o(i._at_cmd_sys_ota_svr_start) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[16f]">_at_cmd_sys_ota_svr_stop</a> from at_cmd_sys_patch.o(i._at_cmd_sys_ota_svr_stop) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[164]">_at_cmd_sys_ram</a> from at_cmd_sys_patch.o(i._at_cmd_sys_ram) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[165]">_at_cmd_sys_reg</a> from at_cmd_sys_patch.o(i._at_cmd_sys_reg) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[15f]">_at_cmd_sys_restore</a> from at_cmd_sys_patch.o(i._at_cmd_sys_restore) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[15c]">_at_cmd_sys_rst</a> from at_cmd_sys_patch.o(i._at_cmd_sys_rst) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[168]">_at_cmd_sys_rsv</a> from at_cmd_sys_patch.o(i._at_cmd_sys_rsv) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[163]">_at_cmd_sys_sleep</a> from at_cmd_sys_patch.o(i._at_cmd_sys_sleep) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[166]">_at_cmd_sys_start</a> from at_cmd_sys_patch.o(i._at_cmd_sys_start) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[162]">_at_cmd_sys_uart</a> from at_cmd_sys_patch.o(i._at_cmd_sys_uart) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[160]">_at_cmd_sys_uartcur</a> from at_cmd_sys_patch.o(i._at_cmd_sys_uartcur) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[161]">_at_cmd_sys_uartdef</a> from at_cmd_sys_patch.o(i._at_cmd_sys_uartdef) referenced from at_cmd_sys_patch.o(.data)
 <LI><a href="#[18b]">_at_cmd_tcp</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcp) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[178]">_at_cmd_tcpip_cifsr</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cifsr) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[184]">_at_cmd_tcpip_cipap</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipap) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[177]">_at_cmd_tcpip_cipclose</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipclose) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[17f]">_at_cmd_tcpip_cipdinfo</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipdinfo) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[173]">_at_cmd_tcpip_cipdomain</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipdomain) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[17b]">_at_cmd_tcpip_cipmode</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipmode) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[179]">_at_cmd_tcpip_cipmux</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipmux) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[175]">_at_cmd_tcpip_cipsend</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipsend) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[176]">_at_cmd_tcpip_cipsendex</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipsendex) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[17a]">_at_cmd_tcpip_cipserver</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipserver) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[180]">_at_cmd_tcpip_cipsntpcfg</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipsntpcfg) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[181]">_at_cmd_tcpip_cipsntptime</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipsntptime) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[183]">_at_cmd_tcpip_cipsta</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipsta) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[182]">_at_cmd_tcpip_cipstamac</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipstamac) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[174]">_at_cmd_tcpip_cipstart</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipstart) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[172]">_at_cmd_tcpip_cipstatus</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipstatus) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[17d]">_at_cmd_tcpip_cipsto</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipsto) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[17e]">_at_cmd_tcpip_ciupdate</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_ciupdate) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1a4]">_at_cmd_tcpip_coap_client_delete</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_delete) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1a2]">_at_cmd_tcpip_coap_client_get</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_get) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1a5]">_at_cmd_tcpip_coap_client_observe</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_observe) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1a6]">_at_cmd_tcpip_coap_client_observe_cancel</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_observe_cancel) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1a7]">_at_cmd_tcpip_coap_client_observe_show</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_observe_show) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1a3]">_at_cmd_tcpip_coap_client_put</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_put) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1a0]">_at_cmd_tcpip_coap_client_start</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_start) referenced 2 times from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1a1]">_at_cmd_tcpip_coap_client_stop</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_stop) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[19d]">_at_cmd_tcpip_coap_svr_add_service</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_svr_add_service) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[19e]">_at_cmd_tcpip_coap_svr_delete_service</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_svr_delete_service) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[19f]">_at_cmd_tcpip_coap_svr_show_service</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_svr_show_service) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[19b]">_at_cmd_tcpip_coap_svr_start</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_svr_start) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[19c]">_at_cmd_tcpip_coap_svr_stop</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_svr_stop) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[187]">_at_cmd_tcpip_end</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_end) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1a9]">_at_cmd_tcpip_http_sendreq</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_http_sendreq) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[189]">_at_cmd_tcpip_httpdevconf_start</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_httpdevconf_start) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[18a]">_at_cmd_tcpip_httpdevconf_stop</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_httpdevconf_stop) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1aa]">_at_cmd_tcpip_https_sendreq</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_https_sendreq) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1ab]">_at_cmd_tcpip_iperf</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_iperf) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1ad]">_at_cmd_tcpip_mdns_add_service</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mdns_add_service) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1ae]">_at_cmd_tcpip_mdns_del_service</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mdns_del_service) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1ac]">_at_cmd_tcpip_mdns_start</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mdns_start) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1af]">_at_cmd_tcpip_mdns_stop</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mdns_stop) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[199]">_at_cmd_tcpip_mqttpublish</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mqttpublish) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[19a]">_at_cmd_tcpip_mqttshowlist</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mqttshowlist) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[197]">_at_cmd_tcpip_mqttsubscribe_start</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mqttsubscribe_start) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[198]">_at_cmd_tcpip_mqttsubscribe_stop</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mqttsubscribe_stop) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[185]">_at_cmd_tcpip_ping</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_ping) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[188]">_at_cmd_tcpip_rsv</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_rsv) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[17c]">_at_cmd_tcpip_savetranslink</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_savetranslink) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1a8]">_at_cmd_tcpip_sendemail</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_sendemail) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1b5]">_at_cmd_tcpip_set_dns_svr</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_set_dns_svr) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1b4]">_at_cmd_tcpip_show_dns_info</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_show_dns_info) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1b3]">_at_cmd_tcpip_ssdp_send_msearch</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_ssdp_send_msearch) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1b2]">_at_cmd_tcpip_ssdp_show_notice</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_ssdp_show_notice) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1b0]">_at_cmd_tcpip_ssdp_start</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_ssdp_start) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1b1]">_at_cmd_tcpip_ssdp_stop</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_ssdp_stop) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[186]">_at_cmd_tcpip_start</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_start) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[18e]">_at_cmd_tcpleave</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpleave) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[18d]">_at_cmd_tcplist</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcplist) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[18c]">_at_cmd_tcpm</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpm) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[18f]">_at_cmd_tcps</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcps) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[191]">_at_cmd_tcpsdis</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpsdis) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[190]">_at_cmd_tcpslist</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpslist) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[193]">_at_cmd_tcpsm</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpsm) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[192]">_at_cmd_tcpsstop</a> from at_cmd_tcpip_patch.o(i._at_cmd_tcpsstop) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1ce]">_at_cmd_tftp_client_buf_show</a> from at_cmd_wifi_patch.o(i._at_cmd_tftp_client_buf_show) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1cd]">_at_cmd_tftp_client_get</a> from at_cmd_wifi_patch.o(i._at_cmd_tftp_client_get) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1cc]">_at_cmd_tftp_client_put</a> from at_cmd_wifi_patch.o(i._at_cmd_tftp_client_put) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[196]">_at_cmd_udp</a> from at_cmd_tcpip_patch.o(i._at_cmd_udp) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[194]">_at_cmd_udps</a> from at_cmd_tcpip_patch.o(i._at_cmd_udps) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[195]">_at_cmd_udpsstop</a> from at_cmd_tcpip_patch.o(i._at_cmd_udpsstop) referenced from at_cmd_tcpip_patch.o(.data)
 <LI><a href="#[1e8]">_at_cmd_wifi_ap_wps_reg_stop</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_ap_wps_reg_stop) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1bf]">_at_cmd_wifi_cwautoconn</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwautoconn) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1bd]">_at_cmd_wifi_cwdhcp</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwdhcp) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1be]">_at_cmd_wifi_cwdhcps</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwdhcps) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1c0]">_at_cmd_wifi_cwfastconn</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwfastconn) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1c4]">_at_cmd_wifi_cwhostname</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwhostname) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1b7]">_at_cmd_wifi_cwjap</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwjap) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1b9]">_at_cmd_wifi_cwlap</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwlap) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1b8]">_at_cmd_wifi_cwlapopt</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwlapopt) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1bc]">_at_cmd_wifi_cwlif</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwlif) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1b6]">_at_cmd_wifi_cwmode</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwmode) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1ba]">_at_cmd_wifi_cwqap</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwqap) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1c6]">_at_cmd_wifi_cwrec</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwrec) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1bb]">_at_cmd_wifi_cwsap</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwsap) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1c5]">_at_cmd_wifi_cwscan</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwscan) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1c7]">_at_cmd_wifi_cwssta</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwssta) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1c1]">_at_cmd_wifi_cwstartsmart</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwstartsmart) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1c2]">_at_cmd_wifi_cwstopsmart</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_cwstopsmart) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1e4]">_at_cmd_wifi_easy_setup_start</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_easy_setup_start) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1e5]">_at_cmd_wifi_easy_setup_stop</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_easy_setup_stop) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1c9]">_at_cmd_wifi_end</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_end) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1d0]">_at_cmd_wifi_getrssi</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_getrssi) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1d1]">_at_cmd_wifi_joinap</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_joinap) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1e6]">_at_cmd_wifi_joinap_wps</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_joinap_wps) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1d2]">_at_cmd_wifi_leaveap</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_leaveap) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1e0]">_at_cmd_wifi_p2p_go_start</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_p2p_go_start) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1e1]">_at_cmd_wifi_p2p_go_stop</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_p2p_go_stop) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1df]">_at_cmd_wifi_p2p_scan</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_p2p_scan) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1e2]">_at_cmd_wifi_p2p_wps_reg_start</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_p2p_wps_reg_start) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1e3]">_at_cmd_wifi_p2p_wps_reg_stop</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_p2p_wps_reg_stop) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1ca]">_at_cmd_wifi_rsv</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_rsv) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1db]">_at_cmd_wifi_sntpstart</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_sntpstart) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1dc]">_at_cmd_wifi_sntpstop</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_sntpstop) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1c8]">_at_cmd_wifi_start</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_start) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1d4]">_at_cmd_wifi_startap</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_startap) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1d5]">_at_cmd_wifi_stopap</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_stopap) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1dd]">_at_cmd_wifi_wifi_p2p_connect</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_wifi_p2p_connect) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1de]">_at_cmd_wifi_wifi_p2p_disconnect</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_wifi_p2p_disconnect) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1da]">_at_cmd_wifi_wifidown</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_wifidown) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1d6]">_at_cmd_wifi_wifigettxpwr</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_wifigettxpwr) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1d9]">_at_cmd_wifi_wifiinit</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_wifiinit) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1d8]">_at_cmd_wifi_wifipwrsave</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_wifipwrsave) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1d3]">_at_cmd_wifi_wifiscan</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_wifiscan) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1d7]">_at_cmd_wifi_wifisettxpwr</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_wifisettxpwr) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1cf]">_at_cmd_wifi_wifistatus</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_wifistatus) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1cb]">_at_cmd_wifi_wifiver</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_wifiver) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1c3]">_at_cmd_wifi_wps</a> from at_cmd_wifi_patch.o(i._at_cmd_wifi_wps) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[1e7]">_at_cmd_wifiscan_wps</a> from at_cmd_wifi_patch.o(i._at_cmd_wifiscan_wps) referenced from at_cmd_wifi_patch.o(.data)
 <LI><a href="#[55]">_at_msg_ext_wifi_connect_patch</a> from at_cmd_msg_ext_patch.o(i._at_msg_ext_wifi_connect_patch) referenced from at_cmd_msg_ext_patch.o(i._at_msg_ext_init)
 <LI><a href="#[58]">_uart1_rx_int_at_data_receive_ble_impl</a> from at_cmd_common_patch.o(i._uart1_rx_int_at_data_receive_ble_impl) referenced from at_cmd_common_patch.o(i.at_cmd_common_func_init_patch)
 <LI><a href="#[59]">_uart1_rx_int_at_data_receive_tcpip_impl</a> from at_cmd_common_patch.o(i._uart1_rx_int_at_data_receive_tcpip_impl) referenced from at_cmd_common_patch.o(i.at_cmd_common_func_init_patch)
 <LI><a href="#[57]">_uart1_rx_int_do_at_impl</a> from at_cmd_common_patch.o(i._uart1_rx_int_do_at_impl) referenced from at_cmd_common_patch.o(i.at_cmd_common_func_init_patch)
 <LI><a href="#[e0]">_wpa_hexdump_patch</a> from wpa_debug_patch.o(i._wpa_hexdump_patch) referenced from wpa_debug_patch.o(i.wpa_debug_func_init_patch)
 <LI><a href="#[4f]">at_cmd_ping_callback</a> from at_cmd_tcpip_patch.o(i.at_cmd_ping_callback) referenced from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_ping)
 <LI><a href="#[5e]">at_compare_rssi</a> from at_cmd_msg_ext_patch.o(i.at_compare_rssi) referenced from at_cmd_msg_ext_patch.o(i.at_msg_ext_wifi_sorting_patch)
 <LI><a href="#[5d]">at_data_tx_task</a> from at_cmd_tcpip_patch.o(i.at_data_tx_task) referenced from at_cmd_tcpip_patch.o(i.at_create_tcpip_tx_task)
 <LI><a href="#[51]">at_msg_ext_wifi_connect_patch</a> from at_cmd_msg_ext_patch.o(i.at_msg_ext_wifi_connect_patch) referenced from at_cmd_msg_ext_patch.o(i._at_msg_ext_init)
 <LI><a href="#[52]">at_msg_ext_wifi_disconnect_patch</a> from at_cmd_msg_ext_patch.o(i.at_msg_ext_wifi_disconnect_patch) referenced from at_cmd_msg_ext_patch.o(i._at_msg_ext_init)
 <LI><a href="#[54]">at_msg_ext_wifi_err_patch</a> from at_cmd_msg_ext_patch.o(i.at_msg_ext_wifi_err_patch) referenced from at_cmd_msg_ext_patch.o(i._at_msg_ext_init)
 <LI><a href="#[53]">at_msg_ext_wifi_get_rssi_patch</a> from at_cmd_msg_ext_patch.o(i.at_msg_ext_wifi_get_rssi_patch) referenced from at_cmd_msg_ext_patch.o(i._at_msg_ext_init)
 <LI><a href="#[50]">at_msg_ext_wifi_scan_patch</a> from at_cmd_msg_ext_patch.o(i.at_msg_ext_wifi_scan_patch) referenced from at_cmd_msg_ext_patch.o(i._at_msg_ext_init)
 <LI><a href="#[56]">at_msg_ext_wifi_sorting_patch</a> from at_cmd_msg_ext_patch.o(i.at_msg_ext_wifi_sorting_patch) referenced from at_cmd_msg_ext_patch.o(i._at_msg_ext_init)
 <LI><a href="#[4e]">at_server_timeout_cb</a> from at_cmd_tcpip_patch.o(i.at_server_timeout_cb) referenced from at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipsto)
 <LI><a href="#[5f]">at_socket_process_task</a> from at_cmd_tcpip_patch.o(i.at_socket_process_task) referenced from at_cmd_tcpip_patch.o(i.at_socket_client_create_task)
 <LI><a href="#[60]">at_socket_server_listen_task</a> from at_cmd_tcpip_patch.o(i.at_socket_server_listen_task) referenced from at_cmd_tcpip_patch.o(i.at_socket_server_create_task)
 <LI><a href="#[62]">at_task_cmd_process_patch</a> from at_cmd_task_patch.o(i.at_task_cmd_process_patch) referenced from at_cmd_task_patch.o(i.at_task_func_init_patch)
 <LI><a href="#[61]">at_task_create_patch</a> from at_cmd_task_patch.o(i.at_task_create_patch) referenced from at_cmd_task_patch.o(i.at_task_func_init_patch)
 <LI><a href="#[5c]">at_user_wifi_app_entry</a> from at_cmd_app.o(i.at_user_wifi_app_entry) referenced from at_cmd_app.o(i.at_cmd_wifi_hook)
 <LI><a href="#[5b]">at_wifi_event_handler_cb</a> from at_cmd_app.o(i.at_wifi_event_handler_cb) referenced from at_cmd_app.o(.constdata)
 <LI><a href="#[5b]">at_wifi_event_handler_cb</a> from at_cmd_app.o(i.at_wifi_event_handler_cb) referenced from at_cmd_app.o(i.at_cmd_wifi_hook)
 <LI><a href="#[cf]">ccmp_decrypt_impl_v1</a> from ccmp_patch.o(i.ccmp_decrypt_impl_v1) referenced from wifi_mac_patch.o(i.wifi_mac_crypto_func_init_patch)
 <LI><a href="#[d0]">ccmp_encrypt_impl_v1</a> from ccmp_patch.o(i.ccmp_encrypt_impl_v1) referenced from wifi_mac_patch.o(i.wifi_mac_crypto_func_init_patch)
 <LI><a href="#[c4]">controller_wifi_evt_handler_patch</a> from controller_wifi_patch.o(i.controller_wifi_evt_handler_patch) referenced from controller_wifi_patch.o(i.wifi_ctrl_patch_init)
 <LI><a href="#[c6]">controller_wifi_init_patch</a> from controller_wifi_patch.o(i.controller_wifi_init_patch) referenced from controller_wifi_patch.o(i.wifi_ctrl_patch_init)
 <LI><a href="#[65]">diag_task_patch</a> from diag_task_patch.o(i.diag_task_patch) referenced from diag_task_patch.o(i.diag_task_patch_func_init)
 <LI><a href="#[68]">diag_task_send_patch</a> from diag_task_patch.o(i.diag_task_send_patch) referenced from diag_task_patch.o(i.diag_task_patch_func_init)
 <LI><a href="#[69]">etharp_output</a> from symdefs.o(ABSOLUTE) referenced from wlannetif_patch.o(i.ethernetif_init_patch)
 <LI><a href="#[7f]">ethernetif_init_patch</a> from wlannetif_patch.o(i.ethernetif_init_patch) referenced from wlannetif_patch.o(i.lwip_load_interface_wlannetif_patch)
 <LI><a href="#[6a]">ethip6_output</a> from symdefs.o(ABSOLUTE) referenced from wlannetif_patch.o(i.ethernetif_init_patch)
 <LI><a href="#[d2]">ieee80211_rx_frame_patch</a> from wifi_mac_rx_data_patch.o(i.ieee80211_rx_frame_patch) referenced from wifi_mac_rx_data_patch.o(i.wifi_mac_rx_data_func_init_patch)
 <LI><a href="#[7c]">ip_ready_callback_patch</a> from lwip_helper_patch.o(i.ip_ready_callback_patch) referenced from lwip_helper_patch.o(i.lwip_load_interface_lwip_helper_patch)
 <LI><a href="#[7a]">ip_reass_chain_frag_into_datagram_and_validate_patch</a> from ip4_frag_patch.o(i.ip_reass_chain_frag_into_datagram_and_validate_patch) referenced from ip4_frag_patch.o(i.lwip_load_interface_ip4_frag_patch)
 <LI><a href="#[72]">ipc_proc_patch</a> from ipc_patch.o(i.ipc_proc_patch) referenced from ipc_patch.o(i.ipc_patch_init)
 <LI><a href="#[71]">ipc_rb_write_patch</a> from ipc_patch.o(i.ipc_rb_write_patch) referenced from ipc_patch.o(i.ipc_patch_init)
 <LI><a href="#[73]">ipc_wifi_aps_rx_handle_patch</a> from data_flow_patch.o(i.ipc_wifi_aps_rx_handle_patch) referenced from ipc_patch.o(i.ipc_patch_init)
 <LI><a href="#[7e]">low_level_input_patch</a> from wlannetif_patch.o(i.low_level_input_patch) referenced from wlannetif_patch.o(i.lwip_load_interface_wlannetif_patch)
 <LI><a href="#[6b]">low_level_output</a> from symdefs.o(ABSOLUTE) referenced from wlannetif_patch.o(i.ethernetif_init_patch)
 <LI><a href="#[7d]">lwip_net_ready_patch</a> from lwip_helper_patch.o(i.lwip_net_ready_patch) referenced from lwip_helper_patch.o(i.lwip_load_interface_lwip_helper_patch)
 <LI><a href="#[7b]">lwip_network_init_patch</a> from lwip_helper_patch.o(i.lwip_network_init_patch) referenced from lwip_helper_patch.o(i.lwip_load_interface_lwip_helper_patch)
 <LI><a href="#[b8]">nl_aes_ccm_patch</a> from scrt_patch.o(i.nl_aes_ccm_patch) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[ba]">nl_hmac_sha_1_patch</a> from scrt_patch.o(i.nl_hmac_sha_1_patch) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[b9]">nl_scrt_aes_ccm_patch</a> from scrt_patch.o(i.nl_scrt_aes_ccm_patch) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[bb]">nl_scrt_aes_ecb_patch</a> from scrt_patch.o(i.nl_scrt_aes_ecb_patch) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[be]">nl_scrt_ecdh_dhkey_gen_impl</a> from scrt_patch.o(i.nl_scrt_ecdh_dhkey_gen_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[bd]">nl_scrt_ecdh_key_pair_gen_impl</a> from scrt_patch.o(i.nl_scrt_ecdh_key_pair_gen_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[b7]">nl_scrt_init_patch</a> from scrt_patch.o(i.nl_scrt_init_patch) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[bf]">nl_scrt_key_delete_impl</a> from scrt_patch.o(i.nl_scrt_key_delete_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[bc]">nl_scrt_otp_status_get_impl</a> from scrt_patch.o(i.nl_scrt_otp_status_get_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[80]">osKernelRestart</a> from freertos_cmsis_patch.o(i.osKernelRestart) referenced from cmsis_os_patch_init.o(i.os_patch_init)
 <LI><a href="#[9e]">ps_adjust_tick_patch</a> from ps_task_patch.o(i.ps_adjust_tick_patch) referenced from ps_task_patch.o(i.ps_patch_init)
 <LI><a href="#[9c]">ps_early_wakeup_callback</a> from ps.o(i.ps_early_wakeup_callback) referenced from ps.o(i.ps_early_wakeup_enable)
 <LI><a href="#[9d]">ps_task_create_patch</a> from ps_task_patch.o(i.ps_task_create_patch) referenced from ps_task_patch.o(i.ps_patch_init)
 <LI><a href="#[fd]">ps_task_patch</a> from ps_task_patch.o(i.ps_task_patch) referenced from ps_task_patch.o(.constdata)
 <LI><a href="#[d1]">rx_data_frame_patch</a> from wifi_mac_rx_data_patch.o(i.rx_data_frame_patch) referenced from wifi_mac_rx_data_patch.o(i.wifi_mac_rx_data_func_init_patch)
 <LI><a href="#[9f]">rx_data_reasm_timeout_handle</a> from wifi_mac_rx_data_patch.o(i.rx_data_reasm_timeout_handle) referenced from wifi_mac_rx_data_patch.o(i.rx_data_reasm_tmr_start)
 <LI><a href="#[a9]">scrt_asset_delete_impl</a> from scrt_patch.o(i.scrt_asset_delete_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[ab]">scrt_asset_get_impl</a> from scrt_patch.o(i.scrt_asset_get_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[aa]">scrt_asset_load_impl</a> from scrt_patch.o(i.scrt_asset_load_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[a5]">scrt_ecdh_key_param_init_impl</a> from scrt_patch.o(i.scrt_ecdh_key_param_init_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[b2]">scrt_ecdh_lock_impl</a> from scrt_patch.o(i.scrt_ecdh_lock_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[a6]">scrt_ecdh_priv_key_asset_create_impl</a> from scrt_patch.o(i.scrt_ecdh_priv_key_asset_create_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[a7]">scrt_ecdh_pub_key_asset_create_impl</a> from scrt_patch.o(i.scrt_ecdh_pub_key_asset_create_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[a8]">scrt_ecdh_shared_secret_asset_create_impl</a> from scrt_patch.o(i.scrt_ecdh_shared_secret_asset_create_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[b3]">scrt_ecdh_unlock_impl</a> from scrt_patch.o(i.scrt_ecdh_unlock_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[a3]">scrt_eng_init_impl</a> from scrt_patch.o(i.scrt_eng_init_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[ad]">scrt_internal_reset_impl</a> from scrt_patch.o(i.scrt_internal_reset_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[ae]">scrt_link_impl</a> from scrt_patch.o(i.scrt_link_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[a1]">scrt_mb_init_impl</a> from scrt_patch.o(i.scrt_mb_init_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[a0]">scrt_param_init_impl</a> from scrt_patch.o(i.scrt_param_init_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[b5]">scrt_res_alloc_impl</a> from scrt_patch.o(i.scrt_res_alloc_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[b6]">scrt_res_free_impl</a> from scrt_patch.o(i.scrt_res_free_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[b0]">scrt_res_lock_impl</a> from scrt_patch.o(i.scrt_res_lock_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[b1]">scrt_res_unlock_impl</a> from scrt_patch.o(i.scrt_res_unlock_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[ac]">scrt_reset_impl</a> from scrt_patch.o(i.scrt_reset_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[b4]">scrt_sem_create_impl</a> from scrt_patch.o(i.scrt_sem_create_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[a4]">scrt_status_chk_impl</a> from scrt_patch.o(i.scrt_status_chk_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[a2]">scrt_trng_init_impl</a> from scrt_patch.o(i.scrt_trng_init_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[af]">scrt_unlink_impl</a> from scrt_patch.o(i.scrt_unlink_impl) referenced from scrt_patch.o(i.scrt_drv_func_init_patch)
 <LI><a href="#[5a]">set_echo_on_impl</a> from at_cmd_common_patch.o(i.set_echo_on_impl) referenced from at_cmd_common_patch.o(i.at_cmd_common_func_init_patch)
 <LI><a href="#[c3]">sntp_dns_found</a> from sntp_client.o(i.sntp_dns_found) referenced from sntp_client.o(i.sntp_request)
 <LI><a href="#[c0]">sntp_recv</a> from sntp_client.o(i.sntp_recv) referenced from sntp_client.o(i.sntp_init)
 <LI><a href="#[c2]">sntp_request</a> from sntp_client.o(i.sntp_request) referenced from sntp_client.o(i.sntp_recv)
 <LI><a href="#[c2]">sntp_request</a> from sntp_client.o(i.sntp_request) referenced from sntp_client.o(i.sntp_retry)
 <LI><a href="#[c2]">sntp_request</a> from sntp_client.o(i.sntp_request) referenced from sntp_client.o(i.sntp_send_request)
 <LI><a href="#[c2]">sntp_request</a> from sntp_client.o(i.sntp_request) referenced from sntp_client.o(i.sntp_stop)
 <LI><a href="#[c1]">sntp_retry</a> from sntp_client.o(i.sntp_retry) referenced from sntp_client.o(i.sntp_recv)
 <LI><a href="#[c1]">sntp_retry</a> from sntp_client.o(i.sntp_retry) referenced from sntp_client.o(i.sntp_request)
 <LI><a href="#[c1]">sntp_retry</a> from sntp_client.o(i.sntp_retry) referenced from sntp_client.o(i.sntp_send_request)
 <LI><a href="#[c1]">sntp_retry</a> from sntp_client.o(i.sntp_retry) referenced from sntp_client.o(i.sntp_stop)
 <LI><a href="#[fc]">supplicant_task_evt_handle_patch</a> from supplicant_task_patch.o(i.supplicant_task_evt_handle_patch) referenced from supplicant_task_patch.o(i.wpa_supplicant_task_func_init_patch)
 <LI><a href="#[d5]">tkip_decrypt_patch</a> from tkip_patch.o(i.tkip_decrypt_patch) referenced from tkip_patch.o(i.wifi_mac_tkip_patch_init)
 <LI><a href="#[d6]">tkip_mic_check_patch</a> from tkip_patch.o(i.tkip_mic_check_patch) referenced from tkip_patch.o(i.wifi_mac_tkip_patch_init)
 <LI><a href="#[49]">tracer_msg_patch</a> from msg_patch.o(i.tracer_msg_patch) referenced from msg_patch.o(i.Tracer_PatchInit)
 <LI><a href="#[41]">uartdbg_rx_int_patch_handler</a> from diag_task_patch.o(i.uartdbg_rx_int_patch_handler) referenced from sys_init_patch.o(i.Main_DriverInit_patch)
 <LI><a href="#[79]">vendor_specific_send_control_pdu_event_handler_patch</a> from le_ctrl_hci_handler_patch.o(i.vendor_specific_send_control_pdu_event_handler_patch) referenced from le_ctrl_func_map_patch.o(i.le_ctrl_pre_patch_init)
 <LI><a href="#[c5]">wifi_cmd_tout_handle_patch</a> from controller_wifi_patch.o(i.wifi_cmd_tout_handle_patch) referenced from controller_wifi_patch.o(i.wifi_ctrl_patch_init)
 <LI><a href="#[63]">wifi_ctrl_cmd_tout</a> from symdefs.o(ABSOLUTE) referenced from controller_wifi_patch.o(i.controller_wifi_init_patch)
 <LI><a href="#[cc]">wifi_event_loop_task</a> from event_loop.o(i.wifi_event_loop_task) referenced from event_loop.o(i.wifi_event_loop_init)
 <LI><a href="#[cd]">wifi_event_sta_connected_handler</a> from wifi_event_handler.o(i.wifi_event_sta_connected_handler) referenced from wifi_event_handler.o(i.wifi_install_default_event_handlers)
 <LI><a href="#[ce]">wifi_event_sta_disconnected_handler</a> from wifi_event_handler.o(i.wifi_event_sta_disconnected_handler) referenced from wifi_event_handler.o(i.wifi_install_default_event_handlers)
 <LI><a href="#[cb]">wifi_get_ac_result_patch</a> from controller_wifi_patch.o(i.wifi_get_ac_result_patch) referenced from controller_wifi_patch.o(i.wifi_ctrl_patch_init)
 <LI><a href="#[d4]">wifi_mac_rx_done_handler_patch</a> from wifi_mac_task_patch.o(i.wifi_mac_rx_done_handler_patch) referenced from wifi_mac_task_patch.o(i.wifi_mac_task_func_init_patch)
 <LI><a href="#[d3]">wifi_mac_task_patch</a> from wifi_mac_task_patch.o(i.wifi_mac_task_patch) referenced from wifi_mac_task_patch.o(i.wifi_mac_task_func_init_patch)
 <LI><a href="#[6c]">wifi_rx_callback</a> from symdefs.o(ABSOLUTE) referenced from wlannetif_patch.o(i.ethernetif_init_patch)
 <LI><a href="#[c9]">wifi_sta_get_scan_idx_patch</a> from controller_wifi_patch.o(i.wifi_sta_get_scan_idx_patch) referenced from controller_wifi_patch.o(i.wifi_ctrl_patch_init)
 <LI><a href="#[ca]">wifi_sta_join_fast_patch</a> from controller_wifi_patch.o(i.wifi_sta_join_fast_patch) referenced from controller_wifi_patch.o(i.wifi_ctrl_patch_init)
 <LI><a href="#[c8]">wifi_sta_join_patch</a> from controller_wifi_patch.o(i.wifi_sta_join_patch) referenced from controller_wifi_patch.o(i.wifi_ctrl_patch_init)
 <LI><a href="#[6d]">wifi_tx_callback</a> from symdefs.o(ABSOLUTE) referenced from wlannetif_patch.o(i.ethernetif_init_patch)
 <LI><a href="#[6e]">wlan_input</a> from wlannetif_patch.o(i.wlan_input) referenced from wlannetif_patch.o(i.ethernetif_init_patch)
 <LI><a href="#[f6]">wpa_alloc_eapol_patch</a> from wpa_patch.o(i.wpa_alloc_eapol_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[da]">wpa_cli_cmd_handler_patch</a> from wpa_cli_patch.o(i.wpa_cli_cmd_handler_patch) referenced from wpa_cli_patch.o(i.wpa_cli_func_init_patch)
 <LI><a href="#[d9]">wpa_cli_connect_handler_patch</a> from wpa_cli_patch.o(i.wpa_cli_connect_handler_patch) referenced from wpa_cli_patch.o(i.wpa_cli_func_init_patch)
 <LI><a href="#[db]">wpa_cli_getrssi_patch</a> from wpa_cli_patch.o(i.wpa_cli_getrssi_patch) referenced from wpa_cli_patch.o(i.wpa_cli_func_init_patch)
 <LI><a href="#[dc]">wpa_cli_scan_handler_patch</a> from wpa_cli_patch.o(i.wpa_cli_scan_handler_patch) referenced from wpa_cli_patch.o(i.wpa_cli_func_init_patch)
 <LI><a href="#[d8]">wpa_cli_showscanresults_handler_patch</a> from wpa_cli_patch.o(i.wpa_cli_showscanresults_handler_patch) referenced from wpa_cli_patch.o(i.wpa_cli_func_init_patch)
 <LI><a href="#[f8]">wpa_derive_ptk_patch</a> from wpa_patch.o(i.wpa_derive_ptk_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[e7]">wpa_driver_netlink_fast_connect_patch</a> from driver_netlink_patch.o(i.wpa_driver_netlink_fast_connect_patch) referenced from driver_netlink_patch.o(i.wpa_driver_func_init_patch)
 <LI><a href="#[e1]">wpa_driver_netlink_get_scan_results_patch</a> from driver_netlink_patch.o(i.wpa_driver_netlink_get_scan_results_patch) referenced from driver_netlink_patch.o(i.wpa_driver_func_init_patch)
 <LI><a href="#[e5]">wpa_driver_netlink_get_ssid_patch</a> from driver_netlink_patch.o(i.wpa_driver_netlink_get_ssid_patch) referenced from driver_netlink_patch.o(i.wpa_driver_func_init_patch)
 <LI><a href="#[e6]">wpa_driver_netlink_scan_patch</a> from driver_netlink_patch.o(i.wpa_driver_netlink_scan_patch) referenced from driver_netlink_patch.o(i.wpa_driver_func_init_patch)
 <LI><a href="#[e3]">wpa_driver_netlink_scan_results_clear_patch</a> from driver_netlink_patch.o(i.wpa_driver_netlink_scan_results_clear_patch) referenced from driver_netlink_patch.o(i.wpa_driver_func_init_patch)
 <LI><a href="#[e2]">wpa_driver_netlink_show_scan_results_patch</a> from driver_netlink_patch.o(i.wpa_driver_netlink_show_scan_results_patch) referenced from driver_netlink_patch.o(i.wpa_driver_func_init_patch)
 <LI><a href="#[e4]">wpa_drv_send_eapol_patch</a> from driver_netlink_patch.o(i.wpa_drv_send_eapol_patch) referenced from driver_netlink_patch.o(i.wpa_driver_func_init_patch)
 <LI><a href="#[ec]">wpa_eapol_key_dump_patch</a> from wpa_patch.o(i.wpa_eapol_key_dump_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[de]">wpa_eapol_key_mic_patch</a> from wpa_common_patch.o(i.wpa_eapol_key_mic_patch) referenced from wpa_common_patch.o(i.wpa_common_func_init_patch)
 <LI><a href="#[f2]">wpa_eapol_key_send_patch</a> from wpa_patch.o(i.wpa_eapol_key_send_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[f7]">wpa_ether_send_patch</a> from wpa_patch.o(i.wpa_ether_send_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[df]">wpa_hexdump_patch</a> from wpa_debug_patch.o(i.wpa_hexdump_patch) referenced from wpa_debug_patch.o(i.wpa_debug_func_init_patch)
 <LI><a href="#[f9]">wpa_parse_generic_patch</a> from wpa_ie_patch.o(i.wpa_parse_generic_patch) referenced from wpa_ie_patch.o(i.wpa_ie_func_init_patch)
 <LI><a href="#[dd]">wpa_pmk_to_ptk_patch</a> from wpa_common_patch.o(i.wpa_pmk_to_ptk_patch) referenced from wpa_common_patch.o(i.wpa_common_func_init_patch)
 <LI><a href="#[d7]">wpa_set_wpa_mode_impl</a> from wpa_at_if.o(i.wpa_set_wpa_mode_impl) referenced from wpa_at_if.o(i.wpa_at_if_func_init)
 <LI><a href="#[f1]">wpa_sm_rx_eapol_patch</a> from wpa_patch.o(i.wpa_sm_rx_eapol_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[ee]">wpa_sm_set_ap_rsn_ie_patch</a> from wpa_patch.o(i.wpa_sm_set_ap_rsn_ie_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[ef]">wpa_sm_set_ap_wpa_ie_patch</a> from wpa_patch.o(i.wpa_sm_set_ap_wpa_ie_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[ed]">wpa_sm_set_assoc_wpa_ie_patch</a> from wpa_patch.o(i.wpa_sm_set_assoc_wpa_ie_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[6f]">wpa_supplicant_event_assoc_patch</a> from events_netlink_patch.o(i.wpa_supplicant_event_assoc_patch) referenced from events_netlink_patch.o(i.events_netlink_func_init_patch)
 <LI><a href="#[70]">wpa_supplicant_event_eapol_rx_patch</a> from events_netlink_patch.o(i.wpa_supplicant_event_eapol_rx_patch) referenced from events_netlink_patch.o(i.events_netlink_func_init_patch)
 <LI><a href="#[f5]">wpa_supplicant_install_gtk_patch</a> from wpa_patch.o(i.wpa_supplicant_install_gtk_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[f4]">wpa_supplicant_install_ptk_patch</a> from wpa_patch.o(i.wpa_supplicant_install_ptk_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[fb]">wpa_supplicant_parse_ies_patch</a> from wpa_supplicant_patch.o(i.wpa_supplicant_parse_ies_patch) referenced from wpa_supplicant_patch.o(i.wpa_supplicant_func_init_patch)
 <LI><a href="#[e8]">wpa_supplicant_process_1_of_4_patch</a> from wpa_patch.o(i.wpa_supplicant_process_1_of_4_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[ea]">wpa_supplicant_process_3_of_4_patch</a> from wpa_patch.o(i.wpa_supplicant_process_3_of_4_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[fa]">wpa_supplicant_rx_eapol_netlink_patch</a> from wpa_supplicant_patch.o(i.wpa_supplicant_rx_eapol_netlink_patch) referenced from wpa_supplicant_patch.o(i.wpa_supplicant_func_init_patch)
 <LI><a href="#[e9]">wpa_supplicant_send_2_of_4_patch</a> from wpa_patch.o(i.wpa_supplicant_send_2_of_4_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[eb]">wpa_supplicant_send_4_of_4_patch</a> from wpa_patch.o(i.wpa_supplicant_send_4_of_4_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[f3]">wpa_supplicant_validate_ie_patch</a> from wpa_patch.o(i.wpa_supplicant_validate_ie_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
 <LI><a href="#[f0]">wpa_supplicant_verify_eapol_key_mic_patch</a> from wpa_patch.o(i.wpa_supplicant_verify_eapol_key_mic_patch) referenced from wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3e9]"></a>__rt_ctype_table</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isMAC_
</UL>

<P><STRONG><a name="[1f1]"></a>tolower</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>

<P><STRONG><a name="[300]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_event_loop_send
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_connect_add_queue
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_reasm
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccmp_encrypt_impl_v1
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diag_task_send_patch
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nl_scrt_ecdh_key_pair_gen_impl
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nl_scrt_ecdh_dhkey_gen_impl
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nl_scrt_aes_ecb_patch
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nl_scrt_aes_ccm_patch
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nl_hmac_sha_1_patch
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_decrypt_patch
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccmp_aad_nonce_patch_v1
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpHandlePairingPublicKey_Patch
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_one_ap_patch
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_data_task_send
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input_patch
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc_patch
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_connect_handler_patch
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_driver_netlink_get_ssid_patch
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_set_config
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_get_config
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_connection_connect
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_gtk_patch
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_derive_ptk_patch
</UL>

<P><STRONG><a name="[246]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_connect_init
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_auto_connect_info
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_info
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_auto_connect_list
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_connect_add_queue
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_scan_get_ap_records
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_scan_get_ap_list
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_msg_ext_wifi_scan_patch
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_ping_callback
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_Init
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_setserver
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_request
</UL>

<P><STRONG><a name="[31d]"></a>__aeabi_memset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_Init
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupHeaderCheck
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupBlockParser
</UL>

<P><STRONG><a name="[327]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_connect_add_queue
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_common_func_init_patch
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_connect_handler_patch
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_send_request
</UL>

<P><STRONG><a name="[225]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_auto_connect_list
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_conn_ap_info_from_flash
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_auto_connect_list
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccmp_encrypt_impl_v1
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccmp_decrypt_impl_v1
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CmdParse
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_CmdParse
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParsePINGCommand_patch
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracer_msg_patch
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_init
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_msg_ext_wifi_scan_patch
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_one_ap_patch
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_from_peer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_cleanup_task
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_recv_socket
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_alloc_id
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_alloc
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_ping
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsto
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstart
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstamac
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntptime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntpcfg
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipserver
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipdomain
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipdinfo
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwscan
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwqap
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwmode
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwlapopt
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwlap
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwjap
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwhostname
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwfastconn
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwautoconn
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_connect_handler_patch
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_connection_connect
</UL>

<P><STRONG><a name="[358]"></a>strstr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_handler
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_cmd_mode
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipmux
</UL>

<P><STRONG><a name="[346]"></a>strlen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diag_task_patch
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_parse_impl
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_one_ap_patch
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_wifi_parse
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_tcpip
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_sys
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_uart1_printf
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_param_trim
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_is_valid_ip
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_get_param_as_str
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntpcfg
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwlap
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_connect_handler_patch
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_cmd_handler_patch
</UL>

<P><STRONG><a name="[221]"></a>strcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_CmdParse
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParsePINGCommand_patch
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProcess_Patch
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstart
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_conn_mode
</UL>

<P><STRONG><a name="[38d]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_get_ac_record
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_sta_get_scan_idx_patch
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_sta_get_ac_idx
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_frame_patch
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_mic_check_patch
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_one_ap_patch
</UL>

<P><STRONG><a name="[35e]"></a>strcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_is_valid_ip
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_ping
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntpcfg
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwlap
</UL>

<P><STRONG><a name="[224]"></a>strtok</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_parse_command
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CmdParse
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_CmdParse
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParsePINGCommand_patch
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_TokenParse
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_is_valid_ip
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsend
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipclose
</UL>

<P><STRONG><a name="[3d7]"></a>strncasecmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_wifi_parse
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_tcpip
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_sys
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_cmd_handler_patch
</UL>

<P><STRONG><a name="[325]"></a>strtol</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_parse_command
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParsePINGCommand_patch
</UL>

<P><STRONG><a name="[226]"></a>strtoul</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CmdParse
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_CmdParse
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_dbg_uart_ctrl
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_internal_uart_config_parse
</UL>

<P><STRONG><a name="[354]"></a>atoi</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_one_ap_patch
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_is_valid_ip
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsto
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstart
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntpcfg
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipserver
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsend
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipdinfo
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipclose
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwmode
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwlapopt
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwfastconn
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwautoconn
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_setdbgmode_by_param
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_scan_handler_patch
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_fast_connect
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_conn_mode
</UL>

<P><STRONG><a name="[3fe]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_synchronize_timers
</UL>

<P><STRONG><a name="[3ff]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_synchronize_timers
</UL>

<P><STRONG><a name="[3fd]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_synchronize_timers
</UL>

<P><STRONG><a name="[400]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_synchronize_timers
</UL>

<P><STRONG><a name="[1f4]"></a>_float_round</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[1f3]"></a>_float_epilogue</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[323]"></a>Boot_CheckUartBehavior</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseDownloadCommand
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_download
</UL>

<P><STRONG><a name="[22f]"></a>Boot_CheckWarmBoot</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_UartInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelRestart
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_init
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize_patch
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_Init
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_DriverInit_patch
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ClockSetup_patch
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_Init_patch
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_Init
</UL>

<P><STRONG><a name="[2a0]"></a>BufToOctets</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCheckReadByTypeAction_Patch
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattAccessReadRsp_Patch
</UL>

<P><STRONG><a name="[29f]"></a>Dec16ToOctets</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCheckReadByTypeAction_Patch
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattAccessReadRsp_Patch
</UL>

<P><STRONG><a name="[204]"></a>FreeMem</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppGattMsgHandler
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleOccupyUart
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppHandleCmDisconnectCompleteInd
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppFreePeerGattDb
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattHandleReadByTypeReq_Patch
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCheckPrepareData_Patch
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattBuildReadMultiReq_Patch
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedureFindIncludedService_Patch
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattAccessWriteRsp_Patch
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattAccessReadRsp_Patch
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbClear
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildAttr
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessCliCmd
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleName
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreWriteToMwFim
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreReadFromMwFim
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattReadLongCharValCfm
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattFindAllCharDescCfm
</UL>

<P><STRONG><a name="[21b]"></a>Hal_DbgUart_ParamInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_PreInitWarm_patch
</UL>

<P><STRONG><a name="[232]"></a>Hal_DbgUart_RxIntEn_impl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_DbgUart_RxIntEn_patch
</UL>

<P><STRONG><a name="[233]"></a>Hal_Flash_4KSectorAddrErase_impl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_4KSectorAddrErase_patch
</UL>

<P><STRONG><a name="[234]"></a>Hal_Flash_4KSectorIdxErase_impl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_4KSectorIdxErase_patch
</UL>

<P><STRONG><a name="[235]"></a>Hal_Flash_Init_impl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_Init_patch
</UL>

<P><STRONG><a name="[236]"></a>Hal_Flash_PageAddrProgram_impl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_PageAddrProgram_patch
</UL>

<P><STRONG><a name="[237]"></a>Hal_Flash_PageAddrRead_impl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_PageAddrRead_patch
</UL>

<P><STRONG><a name="[238]"></a>Hal_Flash_PageIdxProgram_impl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_PageIdxProgram_patch
</UL>

<P><STRONG><a name="[239]"></a>Hal_Flash_Reset_impl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_Reset_patch
</UL>

<P><STRONG><a name="[23c]"></a>Hal_Sys_ApsClkChangeApply_impl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_ApsClkChangeApply_patch
</UL>

<P><STRONG><a name="[23e]"></a>Hal_Sys_ApsModuleRst_impl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_ApsModuleRst_patch
</UL>

<P><STRONG><a name="[23f]"></a>Hal_Sys_MsqModuleRst_impl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_MsqModuleRst_patch
</UL>

<P><STRONG><a name="[240]"></a>Hal_Sys_SleepTimerGet_impl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_SleepTimerGet_patch
</UL>

<P><STRONG><a name="[34b]"></a>Hal_Tick_Diff</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diag_internal_wait
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_internal_wait
</UL>

<P><STRONG><a name="[349]"></a>Hal_Tick_MilliSecMax</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diag_internal_wait
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_internal_wait
</UL>

<P><STRONG><a name="[34a]"></a>Hal_Tick_PerMilliSec</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diag_internal_wait
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_internal_wait
</UL>

<P><STRONG><a name="[247]"></a>Hal_Uart_BaudRateSet_impl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Uart_BaudRateSet_patch
</UL>

<P><STRONG><a name="[2eb]"></a>IsEqualVal</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvStart
</UL>

<P><STRONG><a name="[2a6]"></a>LeAttExecuteWriteRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCheckPrepareData_Patch
</UL>

<P><STRONG><a name="[2ba]"></a>LeAttFindByTypeValReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedureFindPrimaryServiceByUuid_Patch
</UL>

<P><STRONG><a name="[2b5]"></a>LeAttFindInfoReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedureFindAllCharDescriptor_Patch
</UL>

<P><STRONG><a name="[2b4]"></a>LeAttPrepareWriteReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedurePrepareWriteCharValReliable_Patch
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattWriteLongCharVal_Patch
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattPrepareWriteCharValReliable_Patch
</UL>

<P><STRONG><a name="[2a3]"></a>LeAttPrepareWriteRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattHandlePrepareWriteReq_Patch
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattAccessWriteRsp_Patch
</UL>

<P><STRONG><a name="[29d]"></a>LeAttReadBlobRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattHandleReadBlobReq_Patch
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattAccessReadRsp_Patch
</UL>

<P><STRONG><a name="[2b6]"></a>LeAttReadByGroupTypeReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedureFindAllPrimaryService_Patch
</UL>

<P><STRONG><a name="[2b7]"></a>LeAttReadByTypeReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedureReadCharValByUuid_Patch
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedureFindIncludedService_Patch
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedureFindCharacteristic_Patch
</UL>

<P><STRONG><a name="[29e]"></a>LeAttReadByTypeRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCheckReadByTypeAction_Patch
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattAccessReadRsp_Patch
</UL>

<P><STRONG><a name="[2b8]"></a>LeAttReadReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedureFindIncludedService_Patch
</UL>

<P><STRONG><a name="[29b]"></a>LeAttReadRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattHandleReadReq_Patch
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattAccessReadRsp_Patch
</UL>

<P><STRONG><a name="[29c]"></a>LeAttSendErrorRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattHandleWriteReq_Patch
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattHandleReadReq_Patch
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattHandleReadBlobReq_Patch
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattHandlePrepareWriteReq_Patch
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCheckReadByTypeAction_Patch
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCheckPrepareData_Patch
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattBuildReadMultiReq_Patch
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattAccessWriteRsp_Patch
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattAccessReadRsp_Patch
</UL>

<P><STRONG><a name="[2a2]"></a>LeAttWriteRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattHandleWriteReq_Patch
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattAccessWriteRsp_Patch
</UL>

<P><STRONG><a name="[209]"></a>LeCmInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppMsgHandler
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppInit
</UL>

<P><STRONG><a name="[2ed]"></a>LeGapAddToWhiteList</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvStart
</UL>

<P><STRONG><a name="[20a]"></a>LeGapAdvertisingEnable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppMsgHandler
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvStart
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2ec]"></a>LeGapClearWhiteList</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvStart
</UL>

<P><STRONG><a name="[219]"></a>LeGapConnParaRequestRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleCmMsgHandler
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
</UL>

<P><STRONG><a name="[212]"></a>LeGapConnUpdateResponse</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleCmMsgHandler
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
</UL>

<P><STRONG><a name="[21a]"></a>LeGapDisconnectReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleCmMsgHandler
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppHandleCmConnectCompleteInd
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[215]"></a>LeGapSetAdvData</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleCmMsgHandler
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[20e]"></a>LeGapSetAdvParameter</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppSetAdvtisingPara
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvStart
</UL>

<P><STRONG><a name="[2ef]"></a>LeGapSetDataChannelPduLen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleDataLen
</UL>

<P><STRONG><a name="[2ea]"></a>LeGapSetRandAddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvStart
</UL>

<P><STRONG><a name="[286]"></a>LeGattChangeAttrVal</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleOccupyUart
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleName
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSetAttr
</UL>

<P><STRONG><a name="[282]"></a>LeGattCharValIndicate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleOccupyUart
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsInd
</UL>

<P><STRONG><a name="[281]"></a>LeGattCharValNotify</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleOccupyUart
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsNtfy
</UL>

<P><STRONG><a name="[2ee]"></a>LeGattExchangeMtuReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleCfgMtu
</UL>

<P><STRONG><a name="[1ff]"></a>LeGattExchangeMtuRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppGattMsgHandler
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGattTaskHandler
</UL>

<P><STRONG><a name="[1fa]"></a>LeGattFindAllCharDescriptor</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppFindInfo
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcPrimSrv
</UL>

<P><STRONG><a name="[2f1]"></a>LeGattFindAllCharacteristic</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcChar
</UL>

<P><STRONG><a name="[20b]"></a>LeGattFindAllPrimaryService</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppMsgHandler
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattFindAllCharDescCfm
</UL>

<P><STRONG><a name="[27f]"></a>LeGattFindIncludedService</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcInclSrv
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattFindAllPrimaryServiceCfm
</UL>

<P><STRONG><a name="[213]"></a>LeGattInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleCmMsgHandler
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
</UL>

<P><STRONG><a name="[2f2]"></a>LeGattReadLongCharVal</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharRead
</UL>

<P><STRONG><a name="[2b3]"></a>LeGattRegisterService</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbRegServiceDb
</UL>

<P><STRONG><a name="[285]"></a>LeGattWriteCharVal</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleOccupyUart
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
</UL>

<P><STRONG><a name="[283]"></a>LeGattWriteLongCharVal</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleOccupyUart
</UL>

<P><STRONG><a name="[284]"></a>LeGattWriteNoRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleOccupyUart
</UL>

<P><STRONG><a name="[2bf]"></a>LeHciCommandGetVarAddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHciCommandPatch_Init
</UL>

<P><STRONG><a name="[253]"></a>LeHciErrToHostErr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmHnadleHciExceptionEventInd_Patch
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmHandleLeReadPhyRsp
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmHandleConnectionUpdateComplete_Patch
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmAddPeerDev_Impl
</UL>

<P><STRONG><a name="[2c1]"></a>LeHciEventsGetVarAddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHciEventsPatch_Init
</UL>

<P><STRONG><a name="[207]"></a>LeHostCreateTask</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppInit
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppInit
</UL>

<P><STRONG><a name="[2fe]"></a>LeHostEnterPanic</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpConfigInit_Patch
</UL>

<P><STRONG><a name="[290]"></a>LeHostRegisterLoopCallBack</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostTestCmdHandler
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessAtCmd
</UL>

<P><STRONG><a name="[291]"></a>LeHostWakeUp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessSendData
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessAtCmd
</UL>

<P><STRONG><a name="[257]"></a>LePeerDevExist</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmPeerDevExist_Impl
</UL>

<P><STRONG><a name="[2a1]"></a>LeQueueBroken</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCheckPrepareData_Patch
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattAccessWriteRsp_Patch
</UL>

<P><STRONG><a name="[202]"></a>LeQueueCount</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppGattMsgHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppFreePeerGattDb
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmGetPeerCount_Impl
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessCliCmd
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattFindAllCharDescCfm
</UL>

<P><STRONG><a name="[255]"></a>LeQueueDelete</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmDeletePeerDev_Impl
</UL>

<P><STRONG><a name="[2a7]"></a>LeQueuePeekAny</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCheckReadByTypeAction_Patch
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattStopService
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattStartService
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattRegService
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattFindStartService_Patch
</UL>

<P><STRONG><a name="[203]"></a>LeQueuePop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppGattMsgHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppFreePeerGattDb
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCheckPrepareData_Patch
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessCliCmd
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattFindAllCharDescCfm
</UL>

<P><STRONG><a name="[201]"></a>LeQueuePush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppGattMsgHandler
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattRegService
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmAddPeerDev_Impl
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessAtCmd
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattFindAllCharDescCfm
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattCharDescInfoInd
</UL>

<P><STRONG><a name="[205]"></a>LeSendMessage</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppGattMsgHandler
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppInit
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattSendIncludeServiceInfoInd
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmHnadleHciExceptionEventInd_Patch
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmHandleLeReadPhyRsp
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmHandleConnectionUpdateComplete_Patch
</UL>

<P><STRONG><a name="[218]"></a>LeSendMessageAfter</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleCmMsgHandler
</UL>

<P><STRONG><a name="[216]"></a>LeSetScanRspData</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleCmMsgHandler
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[214]"></a>LeSmpInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleCmMsgHandler
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
</UL>

<P><STRONG><a name="[297]"></a>LeSmpSecurityReq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSmpTaskHandler
</UL>

<P><STRONG><a name="[210]"></a>LeSmpSecurityRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppSmMsgHandler
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSmpTaskHandler
</UL>

<P><STRONG><a name="[217]"></a>LeSmpSetDefaultConfig</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleCmMsgHandler
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
</UL>

<P><STRONG><a name="[298]"></a>LeSmpUserConfirmRsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSmpTaskHandler
</UL>

<P><STRONG><a name="[303]"></a>LeSmpUtilGetVarAddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpUtilPatch_Init
</UL>

<P><STRONG><a name="[312]"></a>Main_ServiceInit_impl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ServiceInit_patch
</UL>

<P><STRONG><a name="[271]"></a>MemCmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostTestCmdHandler
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppFindAttrByUuid
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedurePrepareWriteCharValReliable_Patch
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedureFindCharacteristic_Patch
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessAtCmd
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpHandleScPairRandom_Patch
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGetChar
</UL>

<P><STRONG><a name="[1fe]"></a>MemCopy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppGattMsgHandler
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleCmMsgHandler
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppSetAdvtisingPara
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleOccupyUart
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGattTaskHandler
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppHandleCmConnectCompleteInd
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattHandleWriteReq_Patch
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCheckPrepareData_Patch
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattSendIncludeServiceInfoInd
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedureFindIncludedService_Patch
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattWriteLongCharVal_Patch
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattPrepareWriteCharValReliable_Patch
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattModifyAttrVal_Patch
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattBuildSvcTbl
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattAccessReadRsp_Patch
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbCheckItem
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildAttr
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapGetBdAddr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessSendData
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessAtCmd
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleName
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvStart
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvParam
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAddr
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpUtilGetErIr_Patch
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpUtilGenDhkey_Patch
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpUpdateBondinfo_Patch
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpScPublicKeyExecute_Patch
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpScEnsureKeysGenerated_Patch
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpHandleScPairRandom_Patch
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpGetPublicKey_Patch
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreWriteToMwFim
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreReadFromMwFim
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattInclServiceInfoInd
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattFindAllCharDescCfm
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattCharValInd
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattCharDescInfoInd
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGetChar
</UL>

<P><STRONG><a name="[20d]"></a>MemSet</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppSetAdvtisingPara
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmdPatch_Init
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmConnPatch_Init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppPrivateDataInit
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppGetPeerFree
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpNvmStoreInit
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilNumToDecStr
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHciLeSetEventMask_Patch
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmAddPeerDev_Impl
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpHandleScPairRandom_Patch
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreWriteToMwFim
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildPeerGattTable
</UL>

<P><STRONG><a name="[2b2]"></a>OctetsToDec16</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbFindIncludeService
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreReadFromMwFim
</UL>

<P><STRONG><a name="[200]"></a>PanicUnlessMalloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppGattMsgHandler
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppPrivateDataInit
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattSendIncludeServiceInfoInd
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedureFindIncludedService_Patch
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattWriteLongCharVal_Patch
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattPrepareWriteCharValReliable_Patch
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattBuildSvcTbl
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmHnadleHciExceptionEventInd_Patch
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmHandleLeReadPhyRsp
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmHandleConnectionUpdateComplete_Patch
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmAddPeerDev_Impl
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildServiceDb
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildHeader
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildAttr
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessAtCmd
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleName
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSetAttr
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsNtfy
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsInd
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreWriteToMwFim
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreReadFromMwFim
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattFindAllCharDescCfm
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattCharValInd
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattCharDescInfoInd
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildPeerGattTable
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildGattTable
</UL>

<P><STRONG><a name="[262]"></a>StrLen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGetAddrFromStr
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerSrvIdx
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerDescIdx
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerCharIdx
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckOurSrvIdx
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckOurCharIdx
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckConnIdx
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleName
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleInit
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSetAttr
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsNtfy
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsInd
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleDebugSwitch
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleDataLen
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleConnParam
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleChangeController
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleCfgMtu
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvParam
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAddr
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>

<P><STRONG><a name="[260]"></a>SwapBuf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildUuidStr
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilNumToDecStr
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleDebugSwitch
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpUtilEncrypt_Patch
</UL>

<P><STRONG><a name="[27e]"></a>SwapInPlace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGetAddrFromStr
</UL>

<P><STRONG><a name="[231]"></a>SystemCoreClockGet</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_DriverInit_patch
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_DbgUart_BaudRateSet_patch
</UL>

<P><STRONG><a name="[370]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracer_msg_patch
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_ping
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwhostname
</UL>

<P><STRONG><a name="[350]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_from_peer
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_new_connection
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_listen_task
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_cleanup_task
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_client_create_task
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_recv_socket
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_ip_send_data
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsto
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstatus
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstart
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstamac
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntptime
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipmux
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipdomain
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipdinfo
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipclose
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cifsr
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_connection_connect
</UL>

<P><STRONG><a name="[420]"></a>vprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracer_msg_patch
</UL>

<P><STRONG><a name="[294]"></a>vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracer_msg_patch
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilShowMsg
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendToUart
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
</UL>

<P><STRONG><a name="[3c1]"></a>assert_loop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_init
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_socket_nonblock
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate_patch
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input_patch
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init_patch
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_setoperatingmode
</UL>

<P><STRONG><a name="[41b]"></a>crc32</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_decrypt_patch
</UL>

<P><STRONG><a name="[3f1]"></a>dhcp_config_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_network_init_patch
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_net_ready_patch
</UL>

<P><STRONG><a name="[412]"></a>dns_gethostbyname</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_request
</UL>

<P><STRONG><a name="[301]"></a>ecc_valid_public_key</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpUtilGenDhkey_Patch
</UL>

<P><STRONG><a name="[302]"></a>ecdh_shared_secret</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpUtilGenDhkey_Patch
</UL>

<P><STRONG><a name="[69]"></a>etharp_output</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> wlannetif_patch.o(i.ethernetif_init_patch)
</UL>
<P><STRONG><a name="[43a]"></a>ethernetif_input</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wlan_input
</UL>

<P><STRONG><a name="[6a]"></a>ethip6_output</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> wlannetif_patch.o(i.ethernetif_init_patch)
</UL>
<P><STRONG><a name="[21c]"></a>find_str</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProcess_Patch
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_task_cmd_process_patch
</UL>

<P><STRONG><a name="[35c]"></a>free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_task_patch
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_reasm_cb_reset
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diag_task_send_patch
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nl_scrt_ecdh_key_pair_gen_impl
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nl_scrt_ecdh_dhkey_gen_impl
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_event_loop_task
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_one_ap_patch
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_all_patch
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_from_peer
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_client_cleanup_task
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_recv_socket
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_data_tx_task
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstatus
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntpcfg
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwlap
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_connect_handler_patch
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_driver_netlink_scan_results_clear_patch
</UL>

<P><STRONG><a name="[445]"></a>hmac_md5</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_mic_patch
</UL>

<P><STRONG><a name="[361]"></a>hwaddr_aton2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_one_ap_patch
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstamac
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_connect_handler_patch
</UL>

<P><STRONG><a name="[356]"></a>ip4addr_aton</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_udp_client
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_client
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipdomain
</UL>

<P><STRONG><a name="[36f]"></a>ip4addr_ntoa</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_ip_send_data
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_udp_client
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_client
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_ping
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_request
</UL>

<P><STRONG><a name="[3e4]"></a>ip4addr_ntoa_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_new_connection
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_ready_callback_patch
</UL>

<P><STRONG><a name="[3a5]"></a>ip6addr_ntoa</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_ip_send_data
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_udp_client
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_client
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_request
</UL>

<P><STRONG><a name="[3e6]"></a>ip6addr_ntoa_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_ready_callback_patch
</UL>

<P><STRONG><a name="[38c]"></a>isMAC</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_one_ap_patch
</UL>

<P><STRONG><a name="[3df]"></a>low_level_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init_patch
</UL>

<P><STRONG><a name="[6b]"></a>low_level_output</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> wlannetif_patch.o(i.ethernetif_init_patch)
</UL>
<P><STRONG><a name="[3c8]"></a>lwip_accept</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_new_connection
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_listen_task
</UL>

<P><STRONG><a name="[3a6]"></a>lwip_bind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_udp_client
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_server
</UL>

<P><STRONG><a name="[396]"></a>lwip_close</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_from_peer
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_new_connection
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_listen_task
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_cleanup_task
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_recv_socket
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_listen_socket
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_client
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_close_client
</UL>

<P><STRONG><a name="[3a4]"></a>lwip_connect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_client
</UL>

<P><STRONG><a name="[371]"></a>lwip_freeaddrinfo</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_ping
</UL>

<P><STRONG><a name="[36e]"></a>lwip_getaddrinfo</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_ping
</UL>

<P><STRONG><a name="[3c3]"></a>lwip_gethostbyname</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_resolve_dns
</UL>

<P><STRONG><a name="[368]"></a>lwip_getsockname</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstatus
</UL>

<P><STRONG><a name="[367]"></a>lwip_getsockopt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_get_socket_error_code
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstatus
</UL>

<P><STRONG><a name="[3a9]"></a>lwip_htonl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_udp_client
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_recv
</UL>

<P><STRONG><a name="[355]"></a>lwip_htons</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_from_peer
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_new_connection
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_listen_task
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_recv_socket
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_ip_send_data
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_udp_client
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_server
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_client
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstatus
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipdomain
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate_patch
</UL>

<P><STRONG><a name="[3c0]"></a>lwip_ioctl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_socket_nonblock
</UL>

<P><STRONG><a name="[3a7]"></a>lwip_listen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_server
</UL>

<P><STRONG><a name="[3bc]"></a>lwip_recv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_from_peer
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_read
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_recv_socket
</UL>

<P><STRONG><a name="[3bd]"></a>lwip_recvfrom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_from_peer
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_recv_socket
</UL>

<P><STRONG><a name="[3b7]"></a>lwip_select</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_write_set_timeout
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_read_set_timeout
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_socket_nonblock
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_listen_socket
</UL>

<P><STRONG><a name="[3ae]"></a>lwip_sendto</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_ip_send_data
</UL>

<P><STRONG><a name="[3a3]"></a>lwip_setsockopt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_server
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_client
</UL>

<P><STRONG><a name="[395]"></a>lwip_shutdown</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_close_client
</UL>

<P><STRONG><a name="[3a1]"></a>lwip_socket</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_udp_client
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_server
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_client
</UL>

<P><STRONG><a name="[3c4]"></a>lwip_strerr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_show_socket_error_reason
</UL>

<P><STRONG><a name="[3ad]"></a>lwip_write</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_ip_send_data
</UL>

<P><STRONG><a name="[35d]"></a>malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_event_loop_send
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_reasm
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diag_task_send_patch
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nl_scrt_ecdh_key_pair_gen_impl
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nl_scrt_ecdh_dhkey_gen_impl
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tracer_msg_patch
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_all_patch
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_data_task_send
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_from_peer
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_listen_task
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_recv_socket
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstatus
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstart
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntpcfg
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwlap
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_connect_handler_patch
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_driver_netlink_get_scan_results_patch
</UL>

<P><STRONG><a name="[3de]"></a>mem_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init_patch
</UL>

<P><STRONG><a name="[39b]"></a>netif_find</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_adapter_get_ip_info
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_is_tcpip_ready
</UL>

<P><STRONG><a name="[446]"></a>os_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie_patch
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie_patch
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie_patch
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol_patch
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_send_patch
</UL>

<P><STRONG><a name="[44a]"></a>os_get_random</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4_patch
</UL>

<P><STRONG><a name="[43b]"></a>os_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie_patch
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie_patch
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie_patch
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol_patch
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_alloc_eapol_patch
</UL>

<P><STRONG><a name="[447]"></a>os_memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_pmk_to_ptk_patch
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic_patch
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4_patch
</UL>

<P><STRONG><a name="[43c]"></a>os_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc_patch
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_pmk_to_ptk_patch
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_eapol_key_mic_patch
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic_patch
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_4_of_4_patch
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_2_of_4_patch
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4_patch
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_ptk_patch
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_install_gtk_patch
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_assoc_wpa_ie_patch
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_wpa_ie_patch
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_set_ap_rsn_ie_patch
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol_patch
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_alloc_eapol_patch
</UL>

<P><STRONG><a name="[43d]"></a>os_memset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc_patch
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_parse_ies_patch
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_verify_eapol_key_mic_patch
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_send_4_of_4_patch
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_1_of_4_patch
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_sm_rx_eapol_patch
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_alloc_eapol_patch
</UL>

<P><STRONG><a name="[449]"></a>os_strlen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc_patch
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4_patch
</UL>

<P><STRONG><a name="[3ea]"></a>pbuf_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input_patch
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_send_request
</UL>

<P><STRONG><a name="[3eb]"></a>pbuf_clen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input_patch
</UL>

<P><STRONG><a name="[410]"></a>pbuf_copy_partial</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_recv
</UL>

<P><STRONG><a name="[40f]"></a>pbuf_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_send_request
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_recv
</UL>

<P><STRONG><a name="[324]"></a>ping_cli_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParsePINGCommand_patch
</UL>

<P><STRONG><a name="[372]"></a>ping_request</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_ping
</UL>

<P><STRONG><a name="[448]"></a>sha1_prf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_pmk_to_ptk_patch
</UL>

<P><STRONG><a name="[3b0]"></a>sys_arch_protect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_get_id
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_alloc_id
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_alloc
</UL>

<P><STRONG><a name="[3f0]"></a>sys_arch_sem_wait</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_net_ready_patch
</UL>

<P><STRONG><a name="[3b1]"></a>sys_arch_unprotect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_get_id
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_alloc_id
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_alloc
</UL>

<P><STRONG><a name="[3e0]"></a>sys_sem_new</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_network_init_patch
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init_patch
</UL>

<P><STRONG><a name="[3e5]"></a>sys_sem_signal</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_ready_callback_patch
</UL>

<P><STRONG><a name="[411]"></a>sys_timeout_debug</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_send_request
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_retry
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_request
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_recv
</UL>

<P><STRONG><a name="[40e]"></a>sys_untimeout</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_stop
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_recv
</UL>

<P><STRONG><a name="[3f5]"></a>tcpip_config_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_adapter_get_ip_info
</UL>

<P><STRONG><a name="[40d]"></a>udp_bind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_init
</UL>

<P><STRONG><a name="[40b]"></a>udp_new_ip_type</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_init
</UL>

<P><STRONG><a name="[40c]"></a>udp_recv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_init
</UL>

<P><STRONG><a name="[416]"></a>udp_remove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_stop
</UL>

<P><STRONG><a name="[413]"></a>udp_sendto</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_send_request
</UL>

<P><STRONG><a name="[3b8]"></a>vTaskDelete</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_listen_task
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_cleanup_task
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_process_task
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_client_cleanup_task
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_listen_socket
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_user_wifi_app_entry
</UL>

<P><STRONG><a name="[3f8]"></a>vTaskRestartScheduler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelRestart
</UL>

<P><STRONG><a name="[41a]"></a>wep_crypt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_decrypt_patch
</UL>

<P><STRONG><a name="[63]"></a>wifi_ctrl_cmd_tout</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> controller_wifi_patch.o(i.controller_wifi_init_patch)
</UL>
<P><STRONG><a name="[3cf]"></a>wifi_hexdump</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_frame_patch
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccmp_encrypt_impl_v1
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccmp_decrypt_impl_v1
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_mic_check_patch
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_decrypt_patch
</UL>

<P><STRONG><a name="[3e3]"></a>wifi_mac_register_rxcb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init_patch
</UL>

<P><STRONG><a name="[3e1]"></a>wifi_mac_rx_notify_tcp_callback_registration</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init_patch
</UL>

<P><STRONG><a name="[3ec]"></a>wifi_mac_rx_queue_first_entry_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_rx_done_handler_patch
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_frame_patch
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input_patch
</UL>

<P><STRONG><a name="[3e2]"></a>wifi_mac_tx_notify_tcp_callback_registration</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init_patch
</UL>

<P><STRONG><a name="[435]"></a>wifi_queue_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_rx_done_handler_patch
</UL>

<P><STRONG><a name="[6c]"></a>wifi_rx_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> wlannetif_patch.o(i.ethernetif_init_patch)
</UL>
<P><STRONG><a name="[6d]"></a>wifi_tx_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> wlannetif_patch.o(i.ethernetif_init_patch)
</UL>
<P><STRONG><a name="[440]"></a>wpa_supplicant_state_txt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_cmd_handler_patch
</UL>

<P><STRONG><a name="[36b]"></a>xTaskGetTickCount</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsto
</UL>

<P><STRONG><a name="[36a]"></a>xTimerCreate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsto
</UL>

<P><STRONG><a name="[369]"></a>xTimerGenericCommand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, symdefs.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_server_timeout_handler
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsto
</UL>

<P><STRONG><a name="[1ea]"></a>qsort</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, qsort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = qsort &rArr;  qsort (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qsort
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_msg_ext_wifi_sorting_patch
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qsort
</UL>

<P><STRONG><a name="[1ed]"></a>asctime</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, asctime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = asctime
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntptime
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctime
</UL>

<P><STRONG><a name="[1eb]"></a>ctime</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ctime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ctime &rArr; asctime
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asctime
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_recv
</UL>

<P><STRONG><a name="[1ef]"></a>strtok_r</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, strtok_r.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strtok_r
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtok$wrapper
</UL>

<P><STRONG><a name="[1ee]"></a>_strtok$wrapper</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, strtok_r.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok_r
</UL>

<P><STRONG><a name="[1f0]"></a>strcasecmp</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, strcasecmp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_handler_patch
</UL>

<P><STRONG><a name="[1f2]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CompareResistor
</UL>

<P><STRONG><a name="[1f5]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_TemperatureGet
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CompareResistor
</UL>

<P><STRONG><a name="[1f6]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CompareResistor
</UL>

<P><STRONG><a name="[22b]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CmdParse
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_CmdParse
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_VbatGet
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_IoVoltageGet
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_TemperatureGet
</UL>

<P><STRONG><a name="[1f7]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_TemperatureGet
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CompareResistor
</UL>

<P><STRONG><a name="[1f8]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_VbatGet
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_IoVoltageGet
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CompareResistor
</UL>

<P><STRONG><a name="[22c]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CmdParse
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_CmdParse
</UL>

<P><STRONG><a name="[454]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[244]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CompareResistor
</UL>

<P><STRONG><a name="[243]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CompareResistor
</UL>

<P><STRONG><a name="[1ec]"></a>localtime</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, localtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctime
</UL>

<P><STRONG><a name="[1fc]"></a>BleAppGattMsgHandler</STRONG> (Thumb, 500 bytes, Stack size 32 bytes, ble_client_app_gatt.o(i.BleAppGattMsgHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BleAppGattMsgHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePush
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePop
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueueCount
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattExchangeMtuRsp
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSendMessage
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppGetEntity
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppTaskHandler
</UL>

<P><STRONG><a name="[1fd]"></a>BleAppGetEntity</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_client_app.o(i.BleAppGetEntity))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppGattMsgHandler
</UL>

<P><STRONG><a name="[206]"></a>BleAppInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ble_client_app.o(i.BleAppInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BleAppInit
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSendMessage
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCreateTask
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_AppInit_patch
</UL>

<P><STRONG><a name="[66]"></a>CmdProcess_Patch</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, diag_task_patch.o(i.CmdProcess_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = CmdProcess_Patch &rArr; Hal_Tmpr_CmdParse &rArr; Hal_Tmpr_TemperatureGet &rArr; Hal_Tmpr_CompareResistor &rArr; __aeabi_fsub &rArr; __aeabi_fadd
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_str
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_parse_command
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostTestCmdHandler
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CmdParse
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_CmdParse
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseDownloadCommand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diag_task_patch.o(i.diag_task_patch_func_init)
</UL>
<P><STRONG><a name="[c7]"></a>CtrlWifi_PsStateForce_impl</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, controller_wifi_patch.o(i.CtrlWifi_PsStateForce_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CtrlWifi_PsStateForce_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controller_wifi_patch.o(i.wifi_ctrl_patch_init)
</UL>
<P><STRONG><a name="[64]"></a>CtrlWifi_PsTout</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, controller_wifi_patch.o(i.CtrlWifi_PsTout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CtrlWifi_PsTout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controller_wifi_patch.o(i.controller_wifi_init_patch)
</UL>
<P><STRONG><a name="[74]"></a>GPIO_IRQHandler_Patch_patch</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, nl1000_it_patch.o(i.GPIO_IRQHandler_Patch_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_IRQHandler_Patch_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nl1000_it_patch.o(i.isr_patch_init)
</UL>
<P><STRONG><a name="[229]"></a>Hal_Aux_AdcValueGet</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, hal_auxadc.o(i.Hal_Aux_AdcValueGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Hal_Aux_AdcValueGet
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_CmdParse
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_VbatGet
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_IoVoltageGet
</UL>

<P><STRONG><a name="[21e]"></a>Hal_Aux_CmdParse</STRONG> (Thumb, 354 bytes, Stack size 80 bytes, hal_auxadc_cmd.o(i.Hal_Aux_CmdParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Hal_Aux_CmdParse &rArr; Hal_Aux_VbatGet &rArr; Hal_Aux_AdcValueGet
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_VbatGet
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_SourceSelect
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_IoVoltageGet
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_AdcValueGet
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_Pinmux
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProcess_Patch
</UL>

<P><STRONG><a name="[22e]"></a>Hal_Aux_Init</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, hal_auxadc.o(i.Hal_Aux_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Hal_Aux_Init &rArr; MwFim_FileRead &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_CheckWarmBoot
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileRead
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_SourceSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_DriverInit_patch
</UL>

<P><STRONG><a name="[22d]"></a>Hal_Aux_IoVoltageGet</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, hal_auxadc.o(i.Hal_Aux_IoVoltageGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Hal_Aux_IoVoltageGet &rArr; Hal_Aux_AdcValueGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_SourceSelect
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_AdcValueGet
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_CmdParse
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_TemperatureGet
</UL>

<P><STRONG><a name="[227]"></a>Hal_Aux_SourceSelect</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, hal_auxadc.o(i.Hal_Aux_SourceSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Hal_Aux_SourceSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_Init
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_CmdParse
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_VbatGet
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_IoVoltageGet
</UL>

<P><STRONG><a name="[22a]"></a>Hal_Aux_VbatGet</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, hal_auxadc.o(i.Hal_Aux_VbatGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Hal_Aux_VbatGet &rArr; Hal_Aux_AdcValueGet
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_SourceSelect
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_AdcValueGet
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_CmdParse
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_TemperatureGet
</UL>

<P><STRONG><a name="[23d]"></a>Hal_DbgUart_BaudRateGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_dbg_uart_patch.o(i.Hal_DbgUart_BaudRateGet))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_ApsClkChangeApply_patch
</UL>

<P><STRONG><a name="[87]"></a>Hal_DbgUart_BaudRateSet_patch</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, hal_dbg_uart_patch.o(i.Hal_DbgUart_BaudRateSet_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Hal_DbgUart_BaudRateSet_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockGet
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_ApsClkChangeApply_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[30d]"></a>Hal_DbgUart_RxIntEnStatusGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_dbg_uart_patch.o(i.Hal_DbgUart_RxIntEnStatusGet))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_DriverInit_patch
</UL>

<P><STRONG><a name="[88]"></a>Hal_DbgUart_RxIntEn_patch</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hal_dbg_uart_patch.o(i.Hal_DbgUart_RxIntEn_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Hal_DbgUart_RxIntEn_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_DbgUart_RxIntEn_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[8c]"></a>Hal_Flash_4KSectorAddrErase_patch</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, hal_flash_patch.o(i.Hal_Flash_4KSectorAddrErase_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Hal_Flash_4KSectorAddrErase_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_4KSectorAddrErase_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[8d]"></a>Hal_Flash_4KSectorIdxErase_patch</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, hal_flash_patch.o(i.Hal_Flash_4KSectorIdxErase_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Hal_Flash_4KSectorIdxErase_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_4KSectorIdxErase_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[31a]"></a>Hal_Flash_AddrProgram</STRONG> (Thumb, 518 bytes, Stack size 48 bytes, hal_flash_patch.o(i.Hal_Flash_AddrProgram))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Hal_Flash_AddrProgram
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupSwap
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupStatusRemap
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWriteDo
</UL>

<P><STRONG><a name="[2fd]"></a>Hal_Flash_AddrRead</STRONG> (Thumb, 330 bytes, Stack size 56 bytes, hal_flash_patch.o(i.Hal_Flash_AddrRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Hal_Flash_AddrRead
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileRead
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupSwap
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupHeaderCheck
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupBlockParser
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FreeOffsetVerify
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeReadFromFlash
</UL>

<P><STRONG><a name="[8b]"></a>Hal_Flash_Init_patch</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, hal_flash_patch.o(i.Hal_Flash_Init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Hal_Flash_Init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_Init_impl
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_CheckWarmBoot
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[8e]"></a>Hal_Flash_PageAddrProgram_patch</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, hal_flash_patch.o(i.Hal_Flash_PageAddrProgram_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Hal_Flash_PageAddrProgram_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_PageAddrProgram_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[90]"></a>Hal_Flash_PageAddrRead_patch</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, hal_flash_patch.o(i.Hal_Flash_PageAddrRead_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Hal_Flash_PageAddrRead_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_PageAddrRead_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[8f]"></a>Hal_Flash_PageIdxProgram_patch</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, hal_flash_patch.o(i.Hal_Flash_PageIdxProgram_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Hal_Flash_PageIdxProgram_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_PageIdxProgram_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[91]"></a>Hal_Flash_Reset_patch</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, hal_flash_patch.o(i.Hal_Flash_Reset_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Hal_Flash_Reset_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_Reset_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[92]"></a>Hal_I2c_MasterInit_patch</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, hal_i2c_patch.o(i.Hal_I2c_MasterInit_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Hal_I2c_MasterInit_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[85]"></a>Hal_SysPinMuxAppInit_patch</STRONG> (Thumb, 426 bytes, Stack size 8 bytes, hal_system_patch.o(i.Hal_SysPinMuxAppInit_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Hal_SysPinMuxAppInit_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[23a]"></a>Hal_SysPinMuxDownloadInit</STRONG> (Thumb, 156 bytes, Stack size 4 bytes, hal_system_patch.o(i.Hal_SysPinMuxDownloadInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Hal_SysPinMuxDownloadInit &rArr; Hal_SysPinMuxSpiFlashInit
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_SysPinMuxSpiFlashInit
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_download
</UL>

<P><STRONG><a name="[23b]"></a>Hal_SysPinMuxSpiFlashInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, hal_system_patch.o(i.Hal_SysPinMuxSpiFlashInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Hal_SysPinMuxSpiFlashInit
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseDownloadCommand
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_SysPinMuxDownloadInit
</UL>

<P><STRONG><a name="[306]"></a>Hal_Sys_32kXtalCapSet</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_system_patch.o(i.Hal_Sys_32kXtalCapSet))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ClockSetup_patch
</UL>

<P><STRONG><a name="[305]"></a>Hal_Sys_32kXtalGainSet</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_system_patch.o(i.Hal_Sys_32kXtalGainSet))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ClockSetup_patch
</UL>

<P><STRONG><a name="[86]"></a>Hal_Sys_ApsClkChangeApply_patch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, hal_system_patch.o(i.Hal_Sys_ApsClkChangeApply_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Hal_Sys_ApsClkChangeApply_patch &rArr; Hal_DbgUart_BaudRateSet_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_ApsClkChangeApply_impl
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_DbgUart_BaudRateSet_patch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_DbgUart_BaudRateGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[82]"></a>Hal_Sys_ApsModuleRst_patch</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, hal_system_patch.o(i.Hal_Sys_ApsModuleRst_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Hal_Sys_ApsModuleRst_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_ApsModuleRst_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[455]"></a>Hal_Sys_FastStartUpEn</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal_system_patch.o(i.Hal_Sys_FastStartUpEn), UNUSED)

<P><STRONG><a name="[83]"></a>Hal_Sys_MsqModuleRst_patch</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, hal_system_patch.o(i.Hal_Sys_MsqModuleRst_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Hal_Sys_MsqModuleRst_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_MsqModuleRst_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[304]"></a>Hal_Sys_PmuSfVolSet</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_system_patch.o(i.Hal_Sys_PmuSfVolSet))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ClockSetup_patch
</UL>

<P><STRONG><a name="[401]"></a>Hal_Sys_PtatEn</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_system_patch.o(i.Hal_Sys_PtatEn))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_task_patch
</UL>

<P><STRONG><a name="[84]"></a>Hal_Sys_PwmSrcSelect_patch</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, hal_system_patch.o(i.Hal_Sys_PwmSrcSelect_patch))
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[311]"></a>Hal_Sys_PwrDefaultSettings</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, hal_system_patch.o(i.Hal_Sys_PwrDefaultSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Hal_Sys_PwrDefaultSettings
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_PowerSetup_patch
</UL>

<P><STRONG><a name="[307]"></a>Hal_Sys_RcCal</STRONG> (Thumb, 194 bytes, Stack size 20 bytes, hal_system_patch.o(i.Hal_Sys_RcCal))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Hal_Sys_RcCal
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ClockSetup_patch
</UL>

<P><STRONG><a name="[81]"></a>Hal_Sys_SleepTimerGet_patch</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, hal_system_patch.o(i.Hal_Sys_SleepTimerGet_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Hal_Sys_SleepTimerGet_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_SleepTimerGet_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[21f]"></a>Hal_Tmpr_CmdParse</STRONG> (Thumb, 156 bytes, Stack size 64 bytes, hal_temperature.o(i.Hal_Tmpr_CmdParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Hal_Tmpr_CmdParse &rArr; Hal_Tmpr_TemperatureGet &rArr; Hal_Tmpr_CompareResistor &rArr; __aeabi_fsub &rArr; __aeabi_fadd
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_TemperatureGet
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProcess_Patch
</UL>

<P><STRONG><a name="[242]"></a>Hal_Tmpr_CompareResistor</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, hal_temperature.o(i.Hal_Tmpr_CompareResistor))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Hal_Tmpr_CompareResistor &rArr; __aeabi_fsub &rArr; __aeabi_fadd
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_TemperatureGet
</UL>

<P><STRONG><a name="[245]"></a>Hal_Tmpr_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, hal_temperature.o(i.Hal_Tmpr_Init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_CheckWarmBoot
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileRead
</UL>

<P><STRONG><a name="[241]"></a>Hal_Tmpr_TemperatureGet</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, hal_temperature.o(i.Hal_Tmpr_TemperatureGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Hal_Tmpr_TemperatureGet &rArr; Hal_Tmpr_CompareResistor &rArr; __aeabi_fsub &rArr; __aeabi_fadd
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_VbatGet
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_IoVoltageGet
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CompareResistor
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_CmdParse
</UL>

<P><STRONG><a name="[456]"></a>Hal_Tmr_CallBackFuncSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_tmr_patch.o(i.Hal_Tmr_CallBackFuncSet), UNUSED)

<P><STRONG><a name="[93]"></a>Hal_Tmr_Init_patch</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, hal_tmr_patch.o(i.Hal_Tmr_Init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Hal_Tmr_Init_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[33a]"></a>Hal_Tmr_IntClear</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_tmr_patch.o(i.Hal_Tmr_IntClear))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_IRQHandler_Patch_patch
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM0_IRQHandler_Patch_patch
</UL>

<P><STRONG><a name="[95]"></a>Hal_Tmr_ReadCurrValue_patch</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hal_tmr_patch.o(i.Hal_Tmr_ReadCurrValue_patch))
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[457]"></a>Hal_Tmr_Reload</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, hal_tmr_patch.o(i.Hal_Tmr_Reload), UNUSED)

<P><STRONG><a name="[94]"></a>Hal_Tmr_Start_patch</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, hal_tmr_patch.o(i.Hal_Tmr_Start_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Hal_Tmr_Start_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[8a]"></a>Hal_Uart_BaudRateSet_patch</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, hal_uart_patch.o(i.Hal_Uart_BaudRateSet_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Hal_Uart_BaudRateSet_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Uart_BaudRateSet_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[339]"></a>Hal_Uart_ConfigGet</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_uart_patch.o(i.Hal_Uart_ConfigGet))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_UartInit
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_uartdef
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_uartcur
</UL>

<P><STRONG><a name="[248]"></a>Hal_Uart_ConfigSet</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, hal_uart_patch.o(i.Hal_Uart_ConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Hal_Uart_ConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Uart_Init_patch
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_uartdef
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_uartcur
</UL>

<P><STRONG><a name="[89]"></a>Hal_Uart_Init_patch</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, hal_uart_patch.o(i.Hal_Uart_Init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Hal_Uart_Init_patch &rArr; Hal_Uart_ConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Uart_ConfigSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[3fb]"></a>Hal_Vic_GpioCallBackFuncSet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_vic_patch.o(i.Hal_Vic_GpioCallBackFuncSet))
<BR><BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_early_wakeup_enable
</UL>

<P><STRONG><a name="[3fc]"></a>Hal_Vic_GpioDirection</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, hal_vic_patch.o(i.Hal_Vic_GpioDirection))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Hal_Vic_GpioDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_early_wakeup_enable
</UL>

<P><STRONG><a name="[309]"></a>Hal_Vic_GpioInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, hal_vic_patch.o(i.Hal_Vic_GpioInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Hal_Vic_GpioInit
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_DriverInit_patch
</UL>

<P><STRONG><a name="[458]"></a>Hal_Vic_GpioInput</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hal_vic_patch.o(i.Hal_Vic_GpioInput), UNUSED)

<P><STRONG><a name="[459]"></a>Hal_Vic_GpioOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, hal_vic_patch.o(i.Hal_Vic_GpioOutput), UNUSED)

<P><STRONG><a name="[9b]"></a>Hal_Wdt_Clear_patch</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_wdt_patch.o(i.Hal_Wdt_Clear_patch))
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[9a]"></a>Hal_Wdt_Feed_patch</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_wdt_patch.o(i.Hal_Wdt_Feed_patch))
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[97]"></a>Hal_Wdt_InitForInt_patch</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, hal_wdt_patch.o(i.Hal_Wdt_InitForInt_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Hal_Wdt_InitForInt_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[96]"></a>Hal_Wdt_Init_patch</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, hal_wdt_patch.o(i.Hal_Wdt_Init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Hal_Wdt_Init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[98]"></a>Hal_Wdt_Start_patch</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hal_wdt_patch.o(i.Hal_Wdt_Start_patch))
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[99]"></a>Hal_Wdt_Stop_patch</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hal_wdt_patch.o(i.Hal_Wdt_Stop_patch))
<BR>[Address Reference Count : 1]<UL><LI> peri_patch_init.o(i.peripheral_patch_init)
</UL>
<P><STRONG><a name="[2ca]"></a>LeAttCommonPatch_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_att_common_patch.o(i.LeAttCommonPatch_Init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[254]"></a>LeCmConnPatch_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ble_cm_conn_patch.o(i.LeCmConnPatch_Init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeCmConnPatch_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[2c5]"></a>LeCmHandlerPatch_Init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ble_cm_handler_patch.o(i.LeCmHandlerPatch_Init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[26d]"></a>LeCmdAppCmdFuncAssign</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeCmdAppCmdFuncAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppPrivateDataInit
</UL>

<P><STRONG><a name="[26e]"></a>LeCmdAppCmdPatch_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ble_cmd_app_cmd.o(i.LeCmdAppCmdPatch_Init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeCmdAppCmdPatch_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[26f]"></a>LeCmdAppDbFuncAssign</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ble_cmd_app_db.o(i.LeCmdAppDbFuncAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeCmdAppDbFuncAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppPrivateDataInit
</UL>

<P><STRONG><a name="[2d1]"></a>LeCmdAppDbPatch_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_cmd_app_db.o(i.LeCmdAppDbPatch_Init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[28b]"></a>LeCmdAppFuncAssign</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ble_cmd_app.o(i.LeCmdAppFuncAssign))
<BR><BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppPrivateDataInit
</UL>

<P><STRONG><a name="[272]"></a>LeCmdAppGattFuncAssign</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ble_cmd_app_gatt.o(i.LeCmdAppGattFuncAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeCmdAppGattFuncAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppPrivateDataInit
</UL>

<P><STRONG><a name="[273]"></a>LeCmdAppGattTaskHandler</STRONG> (Thumb, 466 bytes, Stack size 24 bytes, ble_cmd_app_gatt.o(i.LeCmdAppGattTaskHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LeCmdAppGattTaskHandler &rArr; LeCmdAppHandleGattFindAllCharDescCfm &rArr; LeCmdAppBuildPeerGattTable
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattExchangeMtuRsp
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattReadLongCharValCfm
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattInclServiceInfoInd
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattInclServiceInfoCfm
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattFindAllPrimaryServiceCfm
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattFindAllCharDescCfm
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattCharValInd
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattCharInfoInd
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattCharDescInfoInd
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppTaskHandler
</UL>

<P><STRONG><a name="[287]"></a>LeCmdAppInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ble_cmd_app.o(i.LeCmdAppInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeCmdAppInit &rArr; LeCmdAppPrivateDataInit &rArr; LeCmdAppGattFuncAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCreateTask
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmInit
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppPrivateDataInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleInit
</UL>

<P><STRONG><a name="[2d2]"></a>LeCmdAppPatch_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_cmd_app.o(i.LeCmdAppPatch_Init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[28c]"></a>LeCmdAppProcessAtCmd</STRONG> (Thumb, 318 bytes, Stack size 56 bytes, ble_cmd_app_cmd.o(i.LeCmdAppProcessAtCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = LeCmdAppProcessAtCmd &rArr; LeAppGetAtCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePush
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCmp
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostWakeUp
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRegisterLoopCallBack
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppGetAtCmd
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilCmdToUper
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilCmdToLower
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseLeCmdTestCommand
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_ble
</UL>

<P><STRONG><a name="[19]"></a>LeCmdAppProcessCliCmd</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, ble_cmd_app_cmd.o(i.LeCmdAppProcessCliCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = LeCmdAppProcessCliCmd &rArr; LeHostPerformCmd &rArr; LeHostRunAtCmdBleGattsChar &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePop
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueueCount
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleOccupyUart
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>
<BR>[Address Reference Count : 2]<UL><LI> ble_cmd_app_cmd.o(i.LeCmdAppProcessAtCmd)
<LI> ble_host_test_cmd.o(i.LeHostTestCmdHandler)
</UL>
<P><STRONG><a name="[293]"></a>LeCmdAppProcessSendData</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, ble_cmd_app_cmd.o(i.LeCmdAppProcessSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LeCmdAppProcessSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostWakeUp
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_uart1_rx_int_at_data_receive_ble_impl
</UL>

<P><STRONG><a name="[45a]"></a>LeGapConnParamRequest</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, ble_gap_if_patch.o(i.LeGapConnParamRequest), UNUSED)

<P><STRONG><a name="[299]"></a>LeGapConnUpdateReq</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, ble_gap_if_patch.o(i.LeGapConnUpdateReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeGapConnUpdateReq
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapConnUpdateRequest_Patch
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleConnParam
</UL>

<P><STRONG><a name="[29a]"></a>LeGapGetBdAddr</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, ble_gap_if_patch.o(i.LeGapGetBdAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeGapGetBdAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAddr
</UL>

<P><STRONG><a name="[2d0]"></a>LeGapIfPatch_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_gap_if_patch.o(i.LeGapIfPatch_Init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[45b]"></a>LeGapReadPhy</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ble_gap_if_patch.o(i.LeGapReadPhy), UNUSED)

<P><STRONG><a name="[45c]"></a>LeGapSetDefaultPhy</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ble_gap_if_patch.o(i.LeGapSetDefaultPhy), UNUSED)

<P><STRONG><a name="[45d]"></a>LeGapSetPhy</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, ble_gap_if_patch.o(i.LeGapSetPhy), UNUSED)

<P><STRONG><a name="[2cc]"></a>LeGattClientPatch_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_gatt_client_patch.o(i.LeGattClientPatch_Init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[2cb]"></a>LeGattCommonPatch_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_gatt_common_patch.o(i.LeGattCommonPatch_Init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[25b]"></a>LeGattDbBuildServiceDb</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, ble_cmd_app_db.o(i.LeGattDbBuildServiceDb))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LeGattDbBuildServiceDb &rArr; LeGattDbBuildAttr &rArr; LeGattDbCheckAttr &rArr; LeGattDbClear
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbRegServiceDb
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbFindIncludeService
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbClear
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildHeader
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildAttr
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildGattTable
</UL>

<P><STRONG><a name="[25c]"></a>LeGattDbGetServiceId</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_cmd_app_db.o(i.LeGattDbGetServiceId))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildGattTable
</UL>

<P><STRONG><a name="[2cd]"></a>LeGattPatch_Init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ble_gatt_patch.o(i.LeGattPatch_Init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[2ce]"></a>LeGattProcedurePatch_Init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[2bb]"></a>LeGattRegService</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, ble_gatt_patch.o(i.LeGattRegService), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePush
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePeekAny
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattBuildSvcTbl
</UL>

<P><STRONG><a name="[2cf]"></a>LeGattServerPatchInit</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ble_gatt_server_patch.o(i.LeGattServerPatchInit), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[2bc]"></a>LeGattStartService</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, ble_gatt_patch.o(i.LeGattStartService), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePeekAny
</UL>

<P><STRONG><a name="[2bd]"></a>LeGattStopService</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, ble_gatt_patch.o(i.LeGattStopService), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePeekAny
</UL>

<P><STRONG><a name="[2c4]"></a>LeHciCmdHandler_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_hci_cmd_handler_patch.o(i.LeHciCmdHandler_Init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[2be]"></a>LeHciCommandPatch_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ble_hci_command_patch.o(i.LeHciCommandPatch_Init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeHciCommandPatch_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHciCommandGetVarAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[2c0]"></a>LeHciEventsPatch_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ble_hci_events_patch.o(i.LeHciEventsPatch_Init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeHciEventsPatch_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHciEventsGetVarAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[25a]"></a>LeHostCmdApp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_cmd_app.o(i.LeHostCmdApp))
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleOccupyUart
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppFindAttrByUuid
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckInitRole
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckConnIdx
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGattTaskHandler
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGattFuncAssign
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppDbFuncAssign
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmdFuncAssign
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseLeCmdTestCommand
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessCliCmd
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleName
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleInit
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrvStop
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrvStart
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrv
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSetAttr
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsNtfy
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsInd
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsChar
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcPrimSrv
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleDebugSwitch
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleDataLen
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleConnParam
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleChangeController
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleCfgMtu
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvStart
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvParam
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAddr
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattReadLongCharValCfm
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattInclServiceInfoInd
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattInclServiceInfoCfm
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattFindAllPrimaryServiceCfm
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattFindAllCharDescCfm
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattCharValInd
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattCharInfoInd
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattCharDescInfoInd
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildPeerGattTable
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildGattTable
</UL>

<P><STRONG><a name="[2c2]"></a>LeHostPatchAssign</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, ble_host_patch_init.o(i.LeHostPatchAssign), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LeHostPatchAssign &rArr; LeSmpUtilPatch_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpUtilPatch_Init
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpStorePatch_Init
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpSecureConnPatch_Init
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpCommonPatch_Init
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeRtosTaskPatch_Init
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHciEventsPatch_Init
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHciCommandPatch_Init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHciCmdHandler_Init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattServerPatchInit
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedurePatch_Init
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattPatch_Init
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCommonPatch_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattClientPatch_Init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapIfPatch_Init
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppPatch_Init
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppDbPatch_Init
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmdPatch_Init
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmHandlerPatch_Init
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmConnPatch_Init
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttCommonPatch_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[45e]"></a>LeHostRegisterCmdHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_host_test_cmd.o(i.LeHostRegisterCmdHandler), UNUSED)

<P><STRONG><a name="[2f3]"></a>LeHostStoreRead</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, ble_nvm_store_patch.o(i.LeHostStoreRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LeHostStoreRead &rArr; LeNvmStoreReadFromMwFim &rArr; MwFim_FileRead &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreReadFromMwFim
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreRead
</UL>

<P><STRONG><a name="[2f5]"></a>LeHostStoreWrite</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, ble_nvm_store_patch.o(i.LeHostStoreWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = LeHostStoreWrite &rArr; LeNvmStoreWriteToMwFim &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreWriteToMwFim
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreWrite
</UL>

<P><STRONG><a name="[21d]"></a>LeHostTestCmdHandler</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, ble_host_test_cmd.o(i.LeHostTestCmdHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LeHostTestCmdHandler &rArr; LeHtcUtilSendCmdAck
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCmp
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRegisterLoopCallBack
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilSendCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProcess_Patch
</UL>

<P><STRONG><a name="[2f8]"></a>LeHtcUtilNumToDecStr</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, ble_host_test_cmd.o(i.LeHtcUtilNumToDecStr), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSet
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwapBuf
</UL>

<P><STRONG><a name="[259]"></a>LeHtcUtilOctetNumToHexStr</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, ble_host_test_cmd.o(i.LeHtcUtilOctetNumToHexStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LeHtcUtilOctetNumToHexStr
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildUuidStr
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildAddrStr
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendBleGattcCharReadRsp
</UL>

<P><STRONG><a name="[2f7]"></a>LeHtcUtilSendCmdAck</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ble_host_test_cmd.o(i.LeHtcUtilSendCmdAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeHtcUtilSendCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostTestCmdHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseLeCmdTestCommand
</UL>

<P><STRONG><a name="[252]"></a>LeHtcUtilSendCmdRsp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ble_host_test_cmd.o(i.LeHtcUtilSendCmdRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeHtcUtilSendCmdRsp
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppHandleCmExitAdvtiseCfm
</UL>

<P><STRONG><a name="[2f9]"></a>LeHtcUtilShowMsg</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, ble_host_test_cmd.o(i.LeHtcUtilShowMsg), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>

<P><STRONG><a name="[2e9]"></a>LeHtcUtilStrToDecNum</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ble_host_test_cmd.o(i.LeHtcUtilStrToDecNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LeHtcUtilStrToDecNum
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleInit
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAddr
</UL>

<P><STRONG><a name="[27d]"></a>LeHtcUtilStringToHexNum</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, ble_host_test_cmd.o(i.LeHtcUtilStringToHexNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LeHtcUtilStringToHexNum
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGetAddrFromStr
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleDebugSwitch
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2fa]"></a>LeNvmStoreRead</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ble_nvm_store_patch.o(i.LeNvmStoreRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = LeNvmStoreRead &rArr; LeHostStoreRead &rArr; LeNvmStoreReadFromMwFim &rArr; MwFim_FileRead &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostStoreRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpNvmStoreInit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpUtilGetErIr_Patch
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpScEnsureKeysGenerated_Patch
</UL>

<P><STRONG><a name="[2fb]"></a>LeNvmStoreWrite</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ble_nvm_store_patch.o(i.LeNvmStoreWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = LeNvmStoreWrite &rArr; LeHostStoreWrite &rArr; LeNvmStoreWriteToMwFim &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostStoreWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpNvmStoreInit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpUtilGetErIr_Patch
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpUpdateBondinfo_Patch
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpRemoveBondInfo_Patch
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpScEnsureKeysGenerated_Patch
</UL>

<P><STRONG><a name="[2c3]"></a>LeRtosTaskPatch_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_rtos_task_patch.o(i.LeRtosTaskPatch_Init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[2c6]"></a>LeSmpCommonPatch_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_smp_common_patch.o(i.LeSmpCommonPatch_Init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[24f]"></a>LeSmpGetBondIdFromAddr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_smp_if_patch.o(i.LeSmpGetBondIdFromAddr))
<BR><BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSmpTaskHandler
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppHandleCmConnectCompleteInd
</UL>

<P><STRONG><a name="[2ff]"></a>LeSmpNvmStoreInit</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, ble_smp_store_patch.o(i.LeSmpNvmStoreInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = LeSmpNvmStoreInit &rArr; LeNvmStoreWrite &rArr; LeHostStoreWrite &rArr; LeNvmStoreWriteToMwFim &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSet
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreWrite
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreRead
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpConfigInit_Patch
</UL>

<P><STRONG><a name="[2c8]"></a>LeSmpSecureConnPatch_Init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[2c9]"></a>LeSmpStorePatch_Init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ble_smp_store_patch.o(i.LeSmpStorePatch_Init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[2c7]"></a>LeSmpUtilPatch_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ble_smp_util_patch.o(i.LeSmpUtilPatch_Init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeSmpUtilPatch_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpUtilGetVarAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>

<P><STRONG><a name="[2a5]"></a>LeUtilAlign</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ble_util_patch.o(i.LeUtilAlign), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattBuildSvcTbl
</UL>

<P><STRONG><a name="[46]"></a>Main_ClockSetup_patch</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, sys_init_patch.o(i.Main_ClockSetup_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Main_ClockSetup_patch &rArr; Hal_Sys_RcCal
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_CheckWarmBoot
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_RcCal
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_PmuSfVolSet
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_32kXtalGainSet
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_32kXtalCapSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_init_patch.o(i.SysInit_EntryPoint)
</UL>
<P><STRONG><a name="[44]"></a>Main_DriverInit_patch</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, sys_init_patch.o(i.Main_DriverInit_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Main_DriverInit_patch &rArr; MwFim_Init &rArr; MwFim_FileDataDefaultFill &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_CheckWarmBoot
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockGet
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_UartInit
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_wait_xtal_ready
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_init
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize_patch
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_Init
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Vic_GpioInit
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_DbgUart_RxIntEnStatusGet
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_Init
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_WaitforMsqReady
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_init_patch.o(i.SysInit_EntryPoint)
</UL>
<P><STRONG><a name="[48]"></a>Main_IdleHook_patch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sys_init_patch.o(i.Main_IdleHook_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Main_IdleHook_patch &rArr; ps_sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_sleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_init_patch.o(i.SysInit_EntryPoint)
</UL>
<P><STRONG><a name="[45]"></a>Main_PowerSetup_patch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sys_init_patch.o(i.Main_PowerSetup_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Main_PowerSetup_patch &rArr; Hal_Sys_PwrDefaultSettings
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_PwrDefaultSettings
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_init_patch.o(i.SysInit_EntryPoint)
</UL>
<P><STRONG><a name="[47]"></a>Main_ServiceInit_patch</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sys_init_patch.o(i.Main_ServiceInit_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = Main_ServiceInit_patch &rArr; auto_connect_init &rArr; read_auto_conn_ap_info_from_flash &rArr; MwFim_FileRead &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ServiceInit_impl
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_connect_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_init_patch.o(i.SysInit_EntryPoint)
</UL>
<P><STRONG><a name="[30c]"></a>Main_WaitforMsqReady</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, sys_init_patch.o(i.Main_WaitforMsqReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Main_WaitforMsqReady
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_DriverInit_patch
</UL>

<P><STRONG><a name="[316]"></a>MwFim_FileDelete</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, mw_fim.o(i.MwFim_FileDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = MwFim_FileDelete &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupSwap
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileTableSearch
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_auto_connect_list_from_flash
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_auto_connect_cfg_from_flash
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_auto_conn_ap_num_to_flash
</UL>

<P><STRONG><a name="[230]"></a>MwFim_FileRead</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, mw_fim.o(i.MwFim_FileRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MwFim_FileRead &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_AddrRead
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileTableSearch
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_UartInit
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_Init
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_connect_cfg_from_flash
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_conn_mode_from_flash
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_conn_ap_num_from_flash
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_conn_ap_info_from_flash
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmpr_Init
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreWriteToMwFim
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreReadFromMwFim
</UL>

<P><STRONG><a name="[2fc]"></a>MwFim_FileWrite</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, mw_fim.o(i.MwFim_FileWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWriteDo
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_connect_ap_num_to_flash
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_connect_ap_info_to_flash
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_connect_ap_cfg_to_flash
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_conn_mode_to_flash
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_uartdef
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreWriteToMwFim
</UL>

<P><STRONG><a name="[319]"></a>MwFim_FileWriteDefault</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, mw_fim.o(i.MwFim_FileWriteDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = MwFim_FileWriteDefault &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWriteDo
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileTableSearch
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_restore
</UL>

<P><STRONG><a name="[45f]"></a>MwFim_GroupInfoUpdate</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, mw_fim.o(i.MwFim_GroupInfoUpdate), UNUSED)

<P><STRONG><a name="[460]"></a>MwFim_GroupVersionUpdate</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mw_fim.o(i.MwFim_GroupVersionUpdate), UNUSED)

<P><STRONG><a name="[30a]"></a>MwFim_Init</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, mw_fim.o(i.MwFim_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = MwFim_Init &rArr; MwFim_FileDataDefaultFill &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_CheckWarmBoot
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupStatusRemap
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupSizeCheck
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupHeaderCheck
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupBlockParser
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileDataDefaultFill
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_DriverInit_patch
</UL>

<P><STRONG><a name="[461]"></a>MwFim_ZoneInfoUpdate</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, mw_fim.o(i.MwFim_ZoneInfoUpdate), UNUSED)

<P><STRONG><a name="[222]"></a>ParseDownloadCommand</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, diag_task_patch.o(i.ParseDownloadCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ParseDownloadCommand &rArr; diag_internal_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_CheckUartBehavior
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diag_internal_wait
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_SysPinMuxSpiFlashInit
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProcess_Patch
</UL>

<P><STRONG><a name="[32]"></a>ParseLeCmdTestCommand</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ble_cmd_app_cmd.o(i.ParseLeCmdTestCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = ParseLeCmdTestCommand &rArr; LeCmdAppHandleOccupyUart &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleOccupyUart
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilSendCmdAck
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessAtCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_host_test_cmd.o(i.LeHostTestCmdHandler)
</UL>
<P><STRONG><a name="[67]"></a>ParsePINGCommand_patch</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, diag_task_patch.o(i.ParsePINGCommand_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ParsePINGCommand_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ping_cli_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diag_task_patch.o(i.diag_task_patch_func_init)
</UL>
<P><STRONG><a name="[326]"></a>SysInit_EntryPoint</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, sys_init_patch.o(i.SysInit_EntryPoint), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysInit_EntryPoint &rArr; at_cmd_init_patch &rArr; _at_func_init &rArr; _at_cmd_func_init
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_CheckWarmBoot
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpas_patch_init
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_task_func_init_patch
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_rx_data_func_init_patch
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_crypto_func_init_patch
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_ctrl_patch_init
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrt_drv_func_init_patch
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_patch_init
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peripheral_patch_init
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_patch_init
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_module_interface_init_patch
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ctrl_pre_patch_init
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_patch_init
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_patch_init
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;diag_task_patch_func_init
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_task_func_init_patch
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_init_patch
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tracer_PatchInit
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPatchAssign
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Patch_EntryPoint
</UL>

<P><STRONG><a name="[77]"></a>TIM0_IRQHandler_Patch_patch</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, nl1000_it_patch.o(i.TIM0_IRQHandler_Patch_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM0_IRQHandler_Patch_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmr_IntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nl1000_it_patch.o(i.isr_patch_init)
</UL>
<P><STRONG><a name="[78]"></a>TIM1_IRQHandler_Patch_patch</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, nl1000_it_patch.o(i.TIM1_IRQHandler_Patch_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM1_IRQHandler_Patch_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tmr_IntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nl1000_it_patch.o(i.isr_patch_init)
</UL>
<P><STRONG><a name="[338]"></a>Tracer_PatchInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, msg_patch.o(i.Tracer_PatchInit), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[75]"></a>UART0_IRQHandler_Patch_patch</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, nl1000_it_patch.o(i.UART0_IRQHandler_Patch_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART0_IRQHandler_Patch_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nl1000_it_patch.o(i.isr_patch_init)
</UL>
<P><STRONG><a name="[76]"></a>UART1_IRQHandler_Patch_patch</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, nl1000_it_patch.o(i.UART1_IRQHandler_Patch_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1_IRQHandler_Patch_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nl1000_it_patch.o(i.isr_patch_init)
</UL>
<P><STRONG><a name="[ff]"></a>_at_cmd_ble_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_addr))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[103]"></a>_at_cmd_ble_advdata</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_advdata))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[102]"></a>_at_cmd_ble_advparam</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_advparam))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[108]"></a>_at_cmd_ble_advstart</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_advstart))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[109]"></a>_at_cmd_ble_advstop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_advstop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[105]"></a>_at_cmd_ble_cfgmtu</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_cfgmtu))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[10a]"></a>_at_cmd_ble_conn</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_conn))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[123]"></a>_at_cmd_ble_connect</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_connect))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[124]"></a>_at_cmd_ble_connect_info</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_connect_info))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[104]"></a>_at_cmd_ble_datalen</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_datalen))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[117]"></a>_at_cmd_ble_dbg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_dbg))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[115]"></a>_at_cmd_ble_disconn</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_disconn))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[129]"></a>_at_cmd_ble_disconnect</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_disconnect))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[12a]"></a>_at_cmd_ble_down</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_down))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[119]"></a>_at_cmd_ble_end</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_end))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[340]"></a>_at_cmd_ble_func_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_func_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_func_init
</UL>

<P><STRONG><a name="[112]"></a>_at_cmd_ble_gattcchar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_gattcchar))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[111]"></a>_at_cmd_ble_gattcinclsrv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_gattcinclsrv))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[110]"></a>_at_cmd_ble_gattcprimsrv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_gattcprimsrv))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[113]"></a>_at_cmd_ble_gattcrd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_gattcrd))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[114]"></a>_at_cmd_ble_gattcwr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_gattcwr))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[10c]"></a>_at_cmd_ble_gattschar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_gattschar))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[10e]"></a>_at_cmd_ble_gattsind</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_gattsind))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[10d]"></a>_at_cmd_ble_gattsntfy</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_gattsntfy))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[10f]"></a>_at_cmd_ble_gattssetattr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_gattssetattr))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[10b]"></a>_at_cmd_ble_gattssrv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_gattssrv))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[106]"></a>_at_cmd_ble_gattssrvstart</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_gattssrvstart))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[125]"></a>_at_cmd_ble_getdata</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_getdata))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[fe]"></a>_at_cmd_ble_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_init))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[116]"></a>_at_cmd_ble_mode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_mode))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[128]"></a>_at_cmd_ble_removedata</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_removedata))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[11a]"></a>_at_cmd_ble_rsv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_rsv))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[462]"></a>_at_cmd_ble_sample</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_sample), UNUSED)

<P><STRONG><a name="[107]"></a>_at_cmd_ble_scan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_scan))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[100]"></a>_at_cmd_ble_scanparam</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_scanparam))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[101]"></a>_at_cmd_ble_scanrspdata</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_scanrspdata))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[126]"></a>_at_cmd_ble_senddata</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_senddata))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[127]"></a>_at_cmd_ble_showdata</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_showdata))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[118]"></a>_at_cmd_ble_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_ble_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[122]"></a>_at_cmd_bles_adv_infinite</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bles_adv_infinite))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[121]"></a>_at_cmd_bles_down</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bles_down))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[11b]"></a>_at_cmd_bles_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bles_init))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[11e]"></a>_at_cmd_bles_senddata</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bles_senddata))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[11f]"></a>_at_cmd_bles_setdata</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bles_setdata))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[120]"></a>_at_cmd_bles_showdata</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bles_showdata))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[11c]"></a>_at_cmd_bles_start_bcst</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bles_start_bcst))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[11d]"></a>_at_cmd_bles_stop_bcst</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bles_stop_bcst))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[12b]"></a>_at_cmd_blestatus</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_blestatus))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[132]"></a>_at_cmd_bt_down</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bt_down))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[131]"></a>_at_cmd_bt_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bt_init))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[135]"></a>_at_cmd_bt_rfcomm_send</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bt_rfcomm_send))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[133]"></a>_at_cmd_bt_rfcomm_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bt_rfcomm_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[134]"></a>_at_cmd_bt_rfcomm_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bt_rfcomm_stop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[136]"></a>_at_cmd_bt_scan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bt_scan))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[12d]"></a>_at_cmd_bts_down</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bts_down))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[12c]"></a>_at_cmd_bts_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bts_init))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[130]"></a>_at_cmd_bts_rfcomm_send</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bts_rfcomm_send))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[12e]"></a>_at_cmd_bts_rfcomm_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bts_rfcomm_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[12f]"></a>_at_cmd_bts_rfcomm_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_bts_rfcomm_stop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[137]"></a>_at_cmd_btstatus</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_ble_patch.o(i._at_cmd_btstatus))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_ble_patch.o(.data)
</UL>
<P><STRONG><a name="[33b]"></a>_at_cmd_buf_to_argc_argv</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, at_cmd_common_patch.o(i._at_cmd_buf_to_argc_argv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _at_cmd_buf_to_argc_argv &rArr; at_cmd_param_trim
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_param_trim
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_ping
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsto
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstart
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstamac
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntpcfg
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipserver
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipdomain
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipdinfo
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwscan
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwqap
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwmode
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwlapopt
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwlap
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwjap
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwhostname
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwfastconn
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwautoconn
</UL>

<P><STRONG><a name="[4c]"></a>_at_cmd_extend_impl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_patch.o(i._at_cmd_extend_impl))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_patch.o(i._at_cmd_func_init)
</UL>
<P><STRONG><a name="[33d]"></a>_at_cmd_func_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, at_cmd_patch.o(i._at_cmd_func_init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_func_init
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_func_init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_func_init
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_func_init
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_rf_func_init
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_pip_func_init
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_others_func_init
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_ble_func_init
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_func_init
</UL>

<P><STRONG><a name="[4b]"></a>_at_cmd_handler_impl</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, at_cmd_patch.o(i._at_cmd_handler_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = _at_cmd_handler_impl &rArr; data_process_handler &rArr; data_process_ble &rArr; LeCmdAppProcessAtCmd &rArr; LeAppGetAtCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_patch.o(i._at_cmd_func_init)
</UL>
<P><STRONG><a name="[13d]"></a>_at_cmd_other_common_buf_show</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_others_patch.o(i._at_cmd_other_common_buf_show))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_others_patch.o(.data)
</UL>
<P><STRONG><a name="[13c]"></a>_at_cmd_other_ir_rx_down</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_others_patch.o(i._at_cmd_other_ir_rx_down))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_others_patch.o(.data)
</UL>
<P><STRONG><a name="[13b]"></a>_at_cmd_other_ir_rx_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_others_patch.o(i._at_cmd_other_ir_rx_init))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_others_patch.o(.data)
</UL>
<P><STRONG><a name="[13a]"></a>_at_cmd_other_ir_tx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_others_patch.o(i._at_cmd_other_ir_tx))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_others_patch.o(.data)
</UL>
<P><STRONG><a name="[139]"></a>_at_cmd_other_ir_tx_down</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_others_patch.o(i._at_cmd_other_ir_tx_down))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_others_patch.o(.data)
</UL>
<P><STRONG><a name="[138]"></a>_at_cmd_other_ir_tx_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_others_patch.o(i._at_cmd_other_ir_tx_init))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_others_patch.o(.data)
</UL>
<P><STRONG><a name="[140]"></a>_at_cmd_other_secondary_uart_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_others_patch.o(i._at_cmd_other_secondary_uart_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_others_patch.o(.data)
</UL>
<P><STRONG><a name="[141]"></a>_at_cmd_other_secondary_uart_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_others_patch.o(i._at_cmd_other_secondary_uart_stop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_others_patch.o(.data)
</UL>
<P><STRONG><a name="[142]"></a>_at_cmd_other_secondary_uart_write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_others_patch.o(i._at_cmd_other_secondary_uart_write))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_others_patch.o(.data)
</UL>
<P><STRONG><a name="[13f]"></a>_at_cmd_other_temperature_off</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_others_patch.o(i._at_cmd_other_temperature_off))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_others_patch.o(.data)
</UL>
<P><STRONG><a name="[13e]"></a>_at_cmd_other_temperature_on</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_others_patch.o(i._at_cmd_other_temperature_on))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_others_patch.o(.data)
</UL>
<P><STRONG><a name="[344]"></a>_at_cmd_others_func_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at_cmd_others_patch.o(i._at_cmd_others_func_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_func_init
</UL>

<P><STRONG><a name="[4a]"></a>_at_cmd_parse_impl</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, at_cmd_patch.o(i._at_cmd_parse_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_parse_impl
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_patch.o(i._at_cmd_func_init)
</UL>
<P><STRONG><a name="[143]"></a>_at_cmd_pip_fun1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_fun1))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[343]"></a>_at_cmd_pip_func_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_func_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_func_init
</UL>

<P><STRONG><a name="[144]"></a>_at_cmd_pip_rsv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_rsv))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[148]"></a>_at_cmd_pip_spi_master_buf_show</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_spi_master_buf_show))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[147]"></a>_at_cmd_pip_spi_master_get_data</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_spi_master_get_data))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[145]"></a>_at_cmd_pip_spi_master_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_spi_master_init))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[146]"></a>_at_cmd_pip_spi_master_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_spi_master_stop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[14c]"></a>_at_cmd_pip_spi_slave_buf_show</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_spi_slave_buf_show))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[14b]"></a>_at_cmd_pip_spi_slave_buf_status</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_spi_slave_buf_status))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[149]"></a>_at_cmd_pip_spi_slave_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_spi_slave_init))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[14a]"></a>_at_cmd_pip_spi_slave_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_spi_slave_stop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[14e]"></a>_at_cmd_pip_uart_cts_rts_disable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_uart_cts_rts_disable))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[14d]"></a>_at_cmd_pip_uart_cts_rts_enable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_uart_cts_rts_enable))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[14f]"></a>_at_cmd_pip_uart_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_uart_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[150]"></a>_at_cmd_pip_uart_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_uart_stop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[151]"></a>_at_cmd_pip_uart_write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_pip_patch.o(i._at_cmd_pip_uart_write))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_pip_patch.o(.data)
</UL>
<P><STRONG><a name="[154]"></a>_at_cmd_rf_channel</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_rf_patch.o(i._at_cmd_rf_channel))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_rf_patch.o(.data)
</UL>
<P><STRONG><a name="[156]"></a>_at_cmd_rf_counters</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_rf_patch.o(i._at_cmd_rf_counters))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_rf_patch.o(.data)
</UL>
<P><STRONG><a name="[15a]"></a>_at_cmd_rf_end</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_rf_patch.o(i._at_cmd_rf_end))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_rf_patch.o(.data)
</UL>
<P><STRONG><a name="[342]"></a>_at_cmd_rf_func_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at_cmd_rf_patch.o(i._at_cmd_rf_func_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_func_init
</UL>

<P><STRONG><a name="[153]"></a>_at_cmd_rf_go</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_rf_patch.o(i._at_cmd_rf_go))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_rf_patch.o(.data)
</UL>
<P><STRONG><a name="[152]"></a>_at_cmd_rf_mode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_rf_patch.o(i._at_cmd_rf_mode))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_rf_patch.o(.data)
</UL>
<P><STRONG><a name="[155]"></a>_at_cmd_rf_resetcnts</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_rf_patch.o(i._at_cmd_rf_resetcnts))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_rf_patch.o(.data)
</UL>
<P><STRONG><a name="[15b]"></a>_at_cmd_rf_rsv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_rf_patch.o(i._at_cmd_rf_rsv))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_rf_patch.o(.data)
</UL>
<P><STRONG><a name="[158]"></a>_at_cmd_rf_rx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_rf_patch.o(i._at_cmd_rf_rx))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_rf_patch.o(.data)
</UL>
<P><STRONG><a name="[463]"></a>_at_cmd_rf_sample</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_rf_patch.o(i._at_cmd_rf_sample), UNUSED)

<P><STRONG><a name="[159]"></a>_at_cmd_rf_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_rf_patch.o(i._at_cmd_rf_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_rf_patch.o(.data)
</UL>
<P><STRONG><a name="[157]"></a>_at_cmd_rf_tx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_rf_patch.o(i._at_cmd_rf_tx))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_rf_patch.o(.data)
</UL>
<P><STRONG><a name="[16a]"></a>_at_cmd_sys_auto_recording_off</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_auto_recording_off))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[169]"></a>_at_cmd_sys_auto_recording_on</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_auto_recording_on))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[170]"></a>_at_cmd_sys_dbg_uart_ctrl</STRONG> (Thumb, 62 bytes, Stack size 80 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_dbg_uart_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _at_cmd_sys_dbg_uart_ctrl &rArr; Cmd_TokenParse
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_TokenParse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[171]"></a>_at_cmd_sys_download</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_download))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _at_cmd_sys_download &rArr; _at_cmd_sys_internal_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_CheckUartBehavior
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_SysPinMuxDownloadInit
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_internal_wait
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[167]"></a>_at_cmd_sys_end</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_end))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[33e]"></a>_at_cmd_sys_func_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_func_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_func_init
</UL>

<P><STRONG><a name="[16b]"></a>_at_cmd_sys_fwver</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_fwver))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[15d]"></a>_at_cmd_sys_gmr</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_gmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_sys_gmr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[15e]"></a>_at_cmd_sys_gslp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_gslp))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[16c]"></a>_at_cmd_sys_mcupwrsave</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_mcupwrsave))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[16d]"></a>_at_cmd_sys_mcustandby</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_mcustandby))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[16e]"></a>_at_cmd_sys_ota_svr_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_ota_svr_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[16f]"></a>_at_cmd_sys_ota_svr_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_ota_svr_stop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[165]"></a>_at_cmd_sys_reg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_reg))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[168]"></a>_at_cmd_sys_rsv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_rsv))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[464]"></a>_at_cmd_sys_sample</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_sample), UNUSED)

<P><STRONG><a name="[163]"></a>_at_cmd_sys_sleep</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_sleep))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[166]"></a>_at_cmd_sys_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[162]"></a>_at_cmd_sys_uart</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_uart))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[18b]"></a>_at_cmd_tcp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcp))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[164]"></a>_at_cmd_sys_ram</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_ram))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_sys_ram
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[15f]"></a>_at_cmd_sys_restore</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_restore))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _at_cmd_sys_restore &rArr; MwFim_FileWriteDefault &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWriteDefault
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_internal_wait
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[15c]"></a>_at_cmd_sys_rst</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_rst))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _at_cmd_sys_rst &rArr; _at_cmd_sys_internal_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_internal_wait
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[160]"></a>_at_cmd_sys_uartcur</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_uartcur))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _at_cmd_sys_uartcur &rArr; _at_cmd_sys_internal_uart_config_parse &rArr; Cmd_TokenParse
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Uart_ConfigGet
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Uart_ConfigSet
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_internal_wait
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_internal_uart_config_parse
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_internal_uart_config_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[161]"></a>_at_cmd_sys_uartdef</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_uartdef))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = _at_cmd_sys_uartdef &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Uart_ConfigGet
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWrite
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Uart_ConfigSet
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_internal_wait
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_internal_uart_config_parse
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_internal_uart_config_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_sys_patch.o(.data)
</UL>
<P><STRONG><a name="[178]"></a>_at_cmd_tcpip_cifsr</STRONG> (Thumb, 148 bytes, Stack size 112 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cifsr))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _at_cmd_tcpip_cifsr &rArr; at_uart1_printf &rArr; at_uart1_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_uart1_printf
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_response_result
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_station_get_connect_status
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;net_adapter_get_ip_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[184]"></a>_at_cmd_tcpip_cipap</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipap))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_tcpip_cipap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[177]"></a>_at_cmd_tcpip_cipclose</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipclose))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _at_cmd_tcpip_cipclose &rArr; at_response_result &rArr; at_uart1_printf &rArr; at_uart1_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_response_result
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_client_cleanup_task
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_get_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[17f]"></a>_at_cmd_tcpip_cipdinfo</STRONG> (Thumb, 138 bytes, Stack size 128 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipdinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _at_cmd_tcpip_cipdinfo &rArr; _at_cmd_buf_to_argc_argv &rArr; at_cmd_param_trim
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_response_result
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[173]"></a>_at_cmd_tcpip_cipdomain</STRONG> (Thumb, 200 bytes, Stack size 128 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipdomain))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _at_cmd_tcpip_cipdomain &rArr; _at_cmd_buf_to_argc_argv &rArr; at_cmd_param_trim
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_aton
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_param_trim
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_resolve_dns
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[17b]"></a>_at_cmd_tcpip_cipmode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipmode))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[179]"></a>_at_cmd_tcpip_cipmux</STRONG> (Thumb, 130 bytes, Stack size 56 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipmux))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _at_cmd_tcpip_cipmux &rArr; at_response_result &rArr; at_uart1_printf &rArr; at_uart1_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_response_result
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[175]"></a>_at_cmd_tcpip_cipsend</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipsend))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _at_cmd_tcpip_cipsend &rArr; at_response_result &rArr; at_uart1_printf &rArr; at_uart1_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_lock
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_response_result
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_get_id
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsendex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[176]"></a>_at_cmd_tcpip_cipsendex</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipsendex))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _at_cmd_tcpip_cipsendex &rArr; _at_cmd_tcpip_cipsend &rArr; at_response_result &rArr; at_uart1_printf &rArr; at_uart1_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_get_id
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[17a]"></a>_at_cmd_tcpip_cipserver</STRONG> (Thumb, 156 bytes, Stack size 64 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipserver))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _at_cmd_tcpip_cipserver &rArr; at_create_tcp_server &rArr; at_socket_server_cleanup_task &rArr; at_socket_client_cleanup_task &rArr; at_close_client
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_response_result
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_cleanup_task
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_server
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[180]"></a>_at_cmd_tcpip_cipsntpcfg</STRONG> (Thumb, 262 bytes, Stack size 88 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipsntpcfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _at_cmd_tcpip_cipsntpcfg &rArr; sntp_init &rArr; sntp_request &rArr; sntp_send_request
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_response_result
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_param_trim
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_stop
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_setservername
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[181]"></a>_at_cmd_tcpip_cipsntptime</STRONG> (Thumb, 54 bytes, Stack size 120 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipsntptime))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _at_cmd_tcpip_cipsntptime &rArr; asctime
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_uart1_printf
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_response_result
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asctime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[183]"></a>_at_cmd_tcpip_cipsta</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipsta))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_tcpip_cipsta
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[182]"></a>_at_cmd_tcpip_cipstamac</STRONG> (Thumb, 192 bytes, Stack size 152 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipstamac))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _at_cmd_tcpip_cipstamac &rArr; _at_cmd_buf_to_argc_argv &rArr; at_cmd_param_trim
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwaddr_aton2
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_response_result
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_param_trim
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[174]"></a>_at_cmd_tcpip_cipstart</STRONG> (Thumb, 578 bytes, Stack size 112 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipstart))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _at_cmd_tcpip_cipstart &rArr; at_create_udp_client &rArr; at_show_socket_error_reason &rArr; at_get_socket_error_code
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_response_result
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_param_trim
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_client_create_task
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_alloc_id
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_udp_client
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_client
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_close_client
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[172]"></a>_at_cmd_tcpip_cipstatus</STRONG> (Thumb, 252 bytes, Stack size 96 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipstatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _at_cmd_tcpip_cipstatus &rArr; at_response_result &rArr; at_uart1_printf &rArr; at_uart1_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockname
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_response_result
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_get_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[17d]"></a>_at_cmd_tcpip_cipsto</STRONG> (Thumb, 254 bytes, Stack size 104 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipsto))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _at_cmd_tcpip_cipsto &rArr; _at_cmd_buf_to_argc_argv &rArr; at_cmd_param_trim
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_uart1_printf
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_response_result
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_get_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[17e]"></a>_at_cmd_tcpip_ciupdate</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_ciupdate))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1a4]"></a>_at_cmd_tcpip_coap_client_delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_delete))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1a2]"></a>_at_cmd_tcpip_coap_client_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_get))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1a5]"></a>_at_cmd_tcpip_coap_client_observe</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_observe))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1a6]"></a>_at_cmd_tcpip_coap_client_observe_cancel</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_observe_cancel))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1a7]"></a>_at_cmd_tcpip_coap_client_observe_show</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_observe_show))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1a3]"></a>_at_cmd_tcpip_coap_client_put</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_put))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1a0]"></a>_at_cmd_tcpip_coap_client_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1a1]"></a>_at_cmd_tcpip_coap_client_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_client_stop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[19d]"></a>_at_cmd_tcpip_coap_svr_add_service</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_svr_add_service))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[19e]"></a>_at_cmd_tcpip_coap_svr_delete_service</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_svr_delete_service))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[19f]"></a>_at_cmd_tcpip_coap_svr_show_service</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_svr_show_service))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[19b]"></a>_at_cmd_tcpip_coap_svr_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_svr_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[19c]"></a>_at_cmd_tcpip_coap_svr_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_coap_svr_stop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[187]"></a>_at_cmd_tcpip_end</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_end))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[341]"></a>_at_cmd_tcpip_func_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_func_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_func_init
</UL>

<P><STRONG><a name="[1a9]"></a>_at_cmd_tcpip_http_sendreq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_http_sendreq))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[189]"></a>_at_cmd_tcpip_httpdevconf_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_httpdevconf_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[18a]"></a>_at_cmd_tcpip_httpdevconf_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_httpdevconf_stop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1aa]"></a>_at_cmd_tcpip_https_sendreq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_https_sendreq))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1ab]"></a>_at_cmd_tcpip_iperf</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_iperf))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1ad]"></a>_at_cmd_tcpip_mdns_add_service</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mdns_add_service))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1ae]"></a>_at_cmd_tcpip_mdns_del_service</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mdns_del_service))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1ac]"></a>_at_cmd_tcpip_mdns_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mdns_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1af]"></a>_at_cmd_tcpip_mdns_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mdns_stop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[199]"></a>_at_cmd_tcpip_mqttpublish</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mqttpublish))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[19a]"></a>_at_cmd_tcpip_mqttshowlist</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mqttshowlist))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[197]"></a>_at_cmd_tcpip_mqttsubscribe_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mqttsubscribe_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[198]"></a>_at_cmd_tcpip_mqttsubscribe_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_mqttsubscribe_stop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[185]"></a>_at_cmd_tcpip_ping</STRONG> (Thumb, 244 bytes, Stack size 96 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_ping))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _at_cmd_tcpip_ping &rArr; _at_cmd_buf_to_argc_argv &rArr; at_cmd_param_trim
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrinfo
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_freeaddrinfo
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_ntoa
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ping_request
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_is_valid_ip
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_is_tcpip_ready
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[188]"></a>_at_cmd_tcpip_rsv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_rsv))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[465]"></a>_at_cmd_tcpip_sample</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_sample), UNUSED)

<P><STRONG><a name="[17c]"></a>_at_cmd_tcpip_savetranslink</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_savetranslink))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1a8]"></a>_at_cmd_tcpip_sendemail</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_sendemail))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1b5]"></a>_at_cmd_tcpip_set_dns_svr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_set_dns_svr))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1b4]"></a>_at_cmd_tcpip_show_dns_info</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_show_dns_info))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1b3]"></a>_at_cmd_tcpip_ssdp_send_msearch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_ssdp_send_msearch))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1b2]"></a>_at_cmd_tcpip_ssdp_show_notice</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_ssdp_show_notice))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1b0]"></a>_at_cmd_tcpip_ssdp_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_ssdp_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1b1]"></a>_at_cmd_tcpip_ssdp_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_ssdp_stop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[186]"></a>_at_cmd_tcpip_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpip_start))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[18e]"></a>_at_cmd_tcpleave</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpleave))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[18d]"></a>_at_cmd_tcplist</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcplist))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[18c]"></a>_at_cmd_tcpm</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpm))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[18f]"></a>_at_cmd_tcps</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcps))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[191]"></a>_at_cmd_tcpsdis</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpsdis))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[190]"></a>_at_cmd_tcpslist</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpslist))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[193]"></a>_at_cmd_tcpsm</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpsm))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[192]"></a>_at_cmd_tcpsstop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_tcpsstop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1ce]"></a>_at_cmd_tftp_client_buf_show</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_tftp_client_buf_show))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_tftp_client_buf_show
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1cd]"></a>_at_cmd_tftp_client_get</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_tftp_client_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_tftp_client_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1cc]"></a>_at_cmd_tftp_client_put</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_tftp_client_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_tftp_client_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[196]"></a>_at_cmd_udp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_udp))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[194]"></a>_at_cmd_udps</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_udps))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[195]"></a>_at_cmd_udpsstop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i._at_cmd_udpsstop))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(.data)
</UL>
<P><STRONG><a name="[1e8]"></a>_at_cmd_wifi_ap_wps_reg_stop</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_ap_wps_reg_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_ap_wps_reg_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1bf]"></a>_at_cmd_wifi_cwautoconn</STRONG> (Thumb, 238 bytes, Stack size 504 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwautoconn))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = _at_cmd_wifi_cwautoconn &rArr; write_auto_connect_ap_num_to_flash &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_connect_ap_num_to_flash
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_connect_ap_info_to_flash
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_connect_ap_cfg_to_flash
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_conn_mode_to_flash
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_auto_connect_save_ap_num
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_auto_connect_mode
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_auto_connect_ap_num
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_save_ap_num
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_mode
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_info
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_ap_cfg
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1bd]"></a>_at_cmd_wifi_cwdhcp</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwdhcp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_cwdhcp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1be]"></a>_at_cmd_wifi_cwdhcps</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwdhcps))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_cwdhcps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1c0]"></a>_at_cmd_wifi_cwfastconn</STRONG> (Thumb, 204 bytes, Stack size 504 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwfastconn))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = _at_cmd_wifi_cwfastconn &rArr; write_auto_connect_ap_info_to_flash &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_connect_ap_info_to_flash
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_fast_connect_mode
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_conn_ap_info_from_flash
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fast_connect_mode
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1c4]"></a>_at_cmd_wifi_cwhostname</STRONG> (Thumb, 124 bytes, Stack size 72 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwhostname))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _at_cmd_wifi_cwhostname &rArr; _at_cmd_buf_to_argc_argv &rArr; at_cmd_param_trim
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1b7]"></a>_at_cmd_wifi_cwjap</STRONG> (Thumb, 202 bytes, Stack size 120 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwjap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _at_cmd_wifi_cwjap &rArr; _at_cmd_buf_to_argc_argv &rArr; at_cmd_param_trim
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpas_get_state
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpas_get_assoc_freq
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1b9]"></a>_at_cmd_wifi_cwlap</STRONG> (Thumb, 154 bytes, Stack size 72 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _at_cmd_wifi_cwlap &rArr; _at_cmd_buf_to_argc_argv &rArr; at_cmd_param_trim
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_sample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1b8]"></a>_at_cmd_wifi_cwlapopt</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwlapopt))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _at_cmd_wifi_cwlapopt &rArr; _at_cmd_buf_to_argc_argv &rArr; at_cmd_param_trim
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sorting
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1bc]"></a>_at_cmd_wifi_cwlif</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwlif))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_cwlif
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1b6]"></a>_at_cmd_wifi_cwmode</STRONG> (Thumb, 96 bytes, Stack size 64 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwmode))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _at_cmd_wifi_cwmode &rArr; _at_cmd_buf_to_argc_argv &rArr; at_cmd_param_trim
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1ba]"></a>_at_cmd_wifi_cwqap</STRONG> (Thumb, 52 bytes, Stack size 56 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwqap))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _at_cmd_wifi_cwqap &rArr; _at_cmd_buf_to_argc_argv &rArr; at_cmd_param_trim
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1c6]"></a>_at_cmd_wifi_cwrec</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwrec))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_cwrec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1bb]"></a>_at_cmd_wifi_cwsap</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwsap))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_cwsap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1c5]"></a>_at_cmd_wifi_cwscan</STRONG> (Thumb, 52 bytes, Stack size 56 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwscan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _at_cmd_wifi_cwscan &rArr; _at_cmd_buf_to_argc_argv &rArr; at_cmd_param_trim
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_sample
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1c7]"></a>_at_cmd_wifi_cwssta</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwssta))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_cwssta
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1c1]"></a>_at_cmd_wifi_cwstartsmart</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwstartsmart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_cwstartsmart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1c2]"></a>_at_cmd_wifi_cwstopsmart</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_cwstopsmart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_cwstopsmart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1e4]"></a>_at_cmd_wifi_easy_setup_start</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_easy_setup_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_easy_setup_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1e5]"></a>_at_cmd_wifi_easy_setup_stop</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_easy_setup_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_easy_setup_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1c9]"></a>_at_cmd_wifi_end</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[33f]"></a>_at_cmd_wifi_func_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_func_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_func_init
</UL>

<P><STRONG><a name="[1d0]"></a>_at_cmd_wifi_getrssi</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_getrssi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_getrssi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1d1]"></a>_at_cmd_wifi_joinap</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_joinap))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1e6]"></a>_at_cmd_wifi_joinap_wps</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_joinap_wps))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_joinap_wps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1d2]"></a>_at_cmd_wifi_leaveap</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_leaveap))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_leaveap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1e0]"></a>_at_cmd_wifi_p2p_go_start</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_p2p_go_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_p2p_go_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1e1]"></a>_at_cmd_wifi_p2p_go_stop</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_p2p_go_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_p2p_go_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1df]"></a>_at_cmd_wifi_p2p_scan</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_p2p_scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_p2p_scan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1e2]"></a>_at_cmd_wifi_p2p_wps_reg_start</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_p2p_wps_reg_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_p2p_wps_reg_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1e3]"></a>_at_cmd_wifi_p2p_wps_reg_stop</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_p2p_wps_reg_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_p2p_wps_reg_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1ca]"></a>_at_cmd_wifi_rsv</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_rsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_rsv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[384]"></a>_at_cmd_wifi_sample</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_sample), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwscan
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwlap
</UL>

<P><STRONG><a name="[1db]"></a>_at_cmd_wifi_sntpstart</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_sntpstart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_sntpstart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1dc]"></a>_at_cmd_wifi_sntpstop</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_sntpstop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_sntpstop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1c8]"></a>_at_cmd_wifi_start</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1d4]"></a>_at_cmd_wifi_startap</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_startap))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_startap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1d5]"></a>_at_cmd_wifi_stopap</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_stopap))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_stopap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1dd]"></a>_at_cmd_wifi_wifi_p2p_connect</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_wifi_p2p_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_wifi_p2p_connect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1de]"></a>_at_cmd_wifi_wifi_p2p_disconnect</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_wifi_p2p_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_wifi_p2p_disconnect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1da]"></a>_at_cmd_wifi_wifidown</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_wifidown))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_wifidown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1d6]"></a>_at_cmd_wifi_wifigettxpwr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_wifigettxpwr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_wifigettxpwr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1d9]"></a>_at_cmd_wifi_wifiinit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_wifiinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_wifiinit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1d8]"></a>_at_cmd_wifi_wifipwrsave</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_wifipwrsave))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_wifipwrsave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1d3]"></a>_at_cmd_wifi_wifiscan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_wifiscan))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1d7]"></a>_at_cmd_wifi_wifisettxpwr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_wifisettxpwr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_wifisettxpwr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1cf]"></a>_at_cmd_wifi_wifistatus</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_wifistatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_wifistatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1cb]"></a>_at_cmd_wifi_wifiver</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_wifiver))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_wifiver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1c3]"></a>_at_cmd_wifi_wps</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifi_wps))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifi_wps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[1e7]"></a>_at_cmd_wifiscan_wps</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_wifi_patch.o(i._at_cmd_wifiscan_wps))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_cmd_wifiscan_wps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_wifi_patch.o(.data)
</UL>
<P><STRONG><a name="[385]"></a>_at_func_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, at_cmd_func_patch.o(i._at_func_init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _at_func_init &rArr; _at_cmd_func_init
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_func_init
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_func_init
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_init_patch
</UL>

<P><STRONG><a name="[39a]"></a>_at_msg_ext_init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, at_cmd_msg_ext_patch.o(i._at_msg_ext_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_init_patch
</UL>

<P><STRONG><a name="[55]"></a>_at_msg_ext_wifi_connect_patch</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, at_cmd_msg_ext_patch.o(i._at_msg_ext_wifi_connect_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _at_msg_ext_wifi_connect_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_msg_ext_patch.o(i._at_msg_ext_init)
</UL>
<P><STRONG><a name="[387]"></a>_at_msg_ext_wifi_show_all_patch</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, at_cmd_msg_ext_patch.o(i._at_msg_ext_wifi_show_all_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _at_msg_ext_wifi_show_all_patch &rArr; wifi_scan_get_ap_records
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_scan_get_ap_records
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_scan_get_ap_num
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_ap_by_filter_patch
</UL>

<P><STRONG><a name="[38a]"></a>_at_msg_ext_wifi_show_ap_by_filter_patch</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at_cmd_msg_ext_patch.o(i._at_msg_ext_wifi_show_ap_by_filter_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _at_msg_ext_wifi_show_ap_by_filter_patch &rArr; _at_msg_ext_wifi_show_one_ap_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_one_ap_patch
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_all_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_wifi_event_handler_cb
</UL>

<P><STRONG><a name="[38b]"></a>_at_msg_ext_wifi_show_one_ap_patch</STRONG> (Thumb, 400 bytes, Stack size 112 bytes, at_cmd_msg_ext_patch.o(i._at_msg_ext_wifi_show_one_ap_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _at_msg_ext_wifi_show_one_ap_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isMAC
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwaddr_aton2
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_ap_by_filter_patch
</UL>

<P><STRONG><a name="[58]"></a>_uart1_rx_int_at_data_receive_ble_impl</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, at_cmd_common_patch.o(i._uart1_rx_int_at_data_receive_ble_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _uart1_rx_int_at_data_receive_ble_impl &rArr; LeCmdAppProcessSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_uart1_rx_int_do_at_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_common_patch.o(i.at_cmd_common_func_init_patch)
</UL>
<P><STRONG><a name="[59]"></a>_uart1_rx_int_at_data_receive_tcpip_impl</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, at_cmd_common_patch.o(i._uart1_rx_int_at_data_receive_tcpip_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _uart1_rx_int_at_data_receive_tcpip_impl &rArr; at_uart1_printf &rArr; at_uart1_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_data_len_get
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_data_task_send
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_uart1_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_uart1_rx_int_do_at_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_common_patch.o(i.at_cmd_common_func_init_patch)
</UL>
<P><STRONG><a name="[57]"></a>_uart1_rx_int_do_at_impl</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, at_cmd_common_patch.o(i._uart1_rx_int_do_at_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _uart1_rx_int_do_at_impl &rArr; _uart1_rx_int_at_data_receive_tcpip_impl &rArr; at_uart1_printf &rArr; at_uart1_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_lock_get
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_uart1_rx_int_at_data_receive_tcpip_impl
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_uart1_rx_int_at_data_receive_ble_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_common_patch.o(i.at_cmd_common_func_init_patch)
</UL>
<P><STRONG><a name="[e0]"></a>_wpa_hexdump_patch</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, wpa_debug_patch.o(i._wpa_hexdump_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wpa_hexdump_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_hexdump_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_debug_patch.o(i.wpa_debug_func_init_patch)
</UL>
<P><STRONG><a name="[391]"></a>add_auto_connect_list</STRONG> (Thumb, 272 bytes, Stack size 464 bytes, controller_wifi_patch.o(i.add_auto_connect_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = add_auto_connect_list &rArr; write_auto_connect_ap_num_to_flash &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_connect_ap_num_to_flash
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_connect_ap_info_to_flash
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_connect_ap_cfg_to_flash
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_connect_cfg_from_flash
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_sta_get_ac_idx
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_connect_add_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc_patch
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4_patch
</UL>

<P><STRONG><a name="[365]"></a>at_close_client</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, at_cmd_tcpip_patch.o(i.at_close_client))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = at_close_client
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_client_cleanup_task
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstart
</UL>

<P><STRONG><a name="[397]"></a>at_cmd_common_func_init_patch</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, at_cmd_common_patch.o(i.at_cmd_common_func_init_patch), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = at_cmd_common_func_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_init_patch
</UL>

<P><STRONG><a name="[398]"></a>at_cmd_get_param_as_str</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, at_cmd_tcpip_patch.o(i.at_cmd_get_param_as_str), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[399]"></a>at_cmd_handler_patch</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, at_cmd_patch.o(i.at_cmd_handler_patch), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcasecmp
</UL>

<P><STRONG><a name="[32f]"></a>at_cmd_init_patch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, at_cmd_patch.o(i.at_cmd_init_patch), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = at_cmd_init_patch &rArr; _at_func_init &rArr; _at_cmd_func_init
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_common_func_init_patch
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_init
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_func_init
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[36c]"></a>at_cmd_is_tcpip_ready</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, at_cmd_tcpip_patch.o(i.at_cmd_is_tcpip_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = at_cmd_is_tcpip_ready
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_find
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_ping
</UL>

<P><STRONG><a name="[36d]"></a>at_cmd_is_valid_ip</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, at_cmd_tcpip_patch.o(i.at_cmd_is_valid_ip))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = at_cmd_is_valid_ip
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;valid_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_ping
</UL>

<P><STRONG><a name="[33c]"></a>at_cmd_param_trim</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, at_cmd_common_patch.o(i.at_cmd_param_trim))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = at_cmd_param_trim
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_buf_to_argc_argv
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstart
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstamac
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntpcfg
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipdomain
</UL>

<P><STRONG><a name="[4f]"></a>at_cmd_ping_callback</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, at_cmd_tcpip_patch.o(i.at_cmd_ping_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = at_cmd_ping_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(i._at_cmd_tcpip_ping)
</UL>
<P><STRONG><a name="[39d]"></a>at_cmd_wifi_hook</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, at_cmd_app.o(i.at_cmd_wifi_hook), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_event_loop_init
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_start
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opl_at_module_init
</UL>

<P><STRONG><a name="[5e]"></a>at_compare_rssi</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at_cmd_msg_ext_patch.o(i.at_compare_rssi))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_msg_ext_patch.o(i.at_msg_ext_wifi_sorting_patch)
</UL>
<P><STRONG><a name="[363]"></a>at_create_tcp_client</STRONG> (Thumb, 340 bytes, Stack size 64 bytes, at_cmd_tcpip_patch.o(i.at_create_tcp_client))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = at_create_tcp_client &rArr; at_show_socket_error_reason &rArr; at_get_socket_error_code
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip6addr_ntoa
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_ntoa
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_aton
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_show_socket_error_reason
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_resolve_dns
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstart
</UL>

<P><STRONG><a name="[359]"></a>at_create_tcp_server</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, at_cmd_tcpip_patch.o(i.at_create_tcp_server))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = at_create_tcp_server &rArr; at_socket_server_cleanup_task &rArr; at_socket_client_cleanup_task &rArr; at_close_client
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_listen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_create_task
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_cleanup_task
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_show_socket_error_reason
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipserver
</UL>

<P><STRONG><a name="[3f7]"></a>at_create_tcpip_data_task</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i.at_create_tcpip_data_task), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opl_at_module_init
</UL>

<P><STRONG><a name="[466]"></a>at_create_tcpip_tx_task</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, at_cmd_tcpip_patch.o(i.at_create_tcpip_tx_task), UNUSED)

<P><STRONG><a name="[364]"></a>at_create_udp_client</STRONG> (Thumb, 230 bytes, Stack size 64 bytes, at_cmd_tcpip_patch.o(i.at_create_udp_client))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = at_create_udp_client &rArr; at_show_socket_error_reason &rArr; at_get_socket_error_code
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip6addr_ntoa
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_ntoa
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_aton
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_show_socket_error_reason
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_resolve_dns
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstart
</UL>

<P><STRONG><a name="[38f]"></a>at_data_task_send</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, at_cmd_tcpip_patch.o(i.at_data_task_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = at_data_task_send
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_uart1_rx_int_at_data_receive_tcpip_impl
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_server_timeout_cb
</UL>

<P><STRONG><a name="[5d]"></a>at_data_tx_task</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, at_cmd_tcpip_patch.o(i.at_data_tx_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = at_data_tx_task &rArr; at_ip_send_data &rArr; at_show_socket_error_reason &rArr; at_get_socket_error_code
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_unlock
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_server_timeout_handler
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_ip_send_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(i.at_create_tcpip_tx_task)
</UL>
<P><STRONG><a name="[3ac]"></a>at_get_socket_error_code</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, at_cmd_tcpip_patch.o(i.at_get_socket_error_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = at_get_socket_error_code
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_show_socket_error_reason
</UL>

<P><STRONG><a name="[3aa]"></a>at_ip_send_data</STRONG> (Thumb, 240 bytes, Stack size 120 bytes, at_cmd_tcpip_patch.o(i.at_ip_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = at_ip_send_data &rArr; at_show_socket_error_reason &rArr; at_get_socket_error_code
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip6addr_ntoa
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_ntoa
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_write
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_show_socket_error_reason
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_get_id
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_data_tx_task
</UL>

<P><STRONG><a name="[3af]"></a>at_link_alloc</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, at_cmd_tcpip_patch.o(i.at_link_alloc), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>

<P><STRONG><a name="[362]"></a>at_link_alloc_id</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, at_cmd_tcpip_patch.o(i.at_link_alloc_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = at_link_alloc_id
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstart
</UL>

<P><STRONG><a name="[352]"></a>at_link_get_id</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, at_cmd_tcpip_patch.o(i.at_link_get_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = at_link_get_id
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_new_connection
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_listen_task
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_cleanup_task
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_server_timeout_handler
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_listen_socket
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_ip_send_data
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsto
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstatus
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsendex
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsend
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipclose
</UL>

<P><STRONG><a name="[3b2]"></a>at_link_init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, at_cmd_tcpip_patch.o(i.at_link_init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opl_at_module_init
</UL>

<P><STRONG><a name="[51]"></a>at_msg_ext_wifi_connect_patch</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at_cmd_msg_ext_patch.o(i.at_msg_ext_wifi_connect_patch))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_msg_ext_patch.o(i._at_msg_ext_init)
</UL>
<P><STRONG><a name="[52]"></a>at_msg_ext_wifi_disconnect_patch</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at_cmd_msg_ext_patch.o(i.at_msg_ext_wifi_disconnect_patch))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_msg_ext_patch.o(i._at_msg_ext_init)
</UL>
<P><STRONG><a name="[54]"></a>at_msg_ext_wifi_err_patch</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, at_cmd_msg_ext_patch.o(i.at_msg_ext_wifi_err_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = at_msg_ext_wifi_err_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_msg_ext_patch.o(i._at_msg_ext_init)
</UL>
<P><STRONG><a name="[53]"></a>at_msg_ext_wifi_get_rssi_patch</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at_cmd_msg_ext_patch.o(i.at_msg_ext_wifi_get_rssi_patch))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_msg_ext_patch.o(i._at_msg_ext_init)
</UL>
<P><STRONG><a name="[50]"></a>at_msg_ext_wifi_scan_patch</STRONG> (Thumb, 394 bytes, Stack size 48 bytes, at_cmd_msg_ext_patch.o(i.at_msg_ext_wifi_scan_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = at_msg_ext_wifi_scan_patch &rArr; at_msg_ext_wifi_sorting_patch &rArr; qsort &rArr;  qsort (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_scan_get_ap_list
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_sorting
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sorting_mask
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_msg_ext_wifi_sorting_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_msg_ext_patch.o(i._at_msg_ext_init)
</UL>
<P><STRONG><a name="[56]"></a>at_msg_ext_wifi_sorting_patch</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at_cmd_msg_ext_patch.o(i.at_msg_ext_wifi_sorting_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = at_msg_ext_wifi_sorting_patch &rArr; qsort &rArr;  qsort (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qsort
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_msg_ext_wifi_scan_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_msg_ext_patch.o(i._at_msg_ext_init)
</UL>
<P><STRONG><a name="[3b6]"></a>at_process_listen_socket</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, at_cmd_tcpip_patch.o(i.at_process_listen_socket), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_from_peer
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_new_connection
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_get_id
</UL>

<P><STRONG><a name="[3bb]"></a>at_process_recv_socket</STRONG> (Thumb, 412 bytes, Stack size 112 bytes, at_cmd_tcpip_patch.o(i.at_process_recv_socket))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = at_process_recv_socket &rArr; at_uart1_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_uart1_write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_process_task
</UL>

<P><STRONG><a name="[3bf]"></a>at_process_socket_nonblock</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, at_cmd_tcpip_patch.o(i.at_process_socket_nonblock), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ioctl
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_loop
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_from_peer
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;build_fd_sets
</UL>

<P><STRONG><a name="[34d]"></a>at_response_result</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at_cmd_common_patch.o(i.at_response_result))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = at_response_result &rArr; at_uart1_printf &rArr; at_uart1_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_uart1_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsto
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstatus
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstart
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstamac
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntptime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntpcfg
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipserver
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsend
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipmux
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipdinfo
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipclose
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cifsr
</UL>

<P><STRONG><a name="[4e]"></a>at_server_timeout_cb</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, at_cmd_tcpip_patch.o(i.at_server_timeout_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = at_server_timeout_cb &rArr; at_data_task_send
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_data_task_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(i._at_cmd_tcpip_cipsto)
</UL>
<P><STRONG><a name="[3ab]"></a>at_server_timeout_handler</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, at_cmd_tcpip_patch.o(i.at_server_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = at_server_timeout_handler &rArr; at_socket_client_cleanup_task &rArr; at_close_client
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_client_cleanup_task
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_get_id
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_data_tx_task
</UL>

<P><STRONG><a name="[3a2]"></a>at_show_socket_error_reason</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, at_cmd_tcpip_patch.o(i.at_show_socket_error_reason))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = at_show_socket_error_reason &rArr; at_get_socket_error_code
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_strerr
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_get_socket_error_code
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_ip_send_data
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_udp_client
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_server
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_client
</UL>

<P><STRONG><a name="[353]"></a>at_socket_client_cleanup_task</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, at_cmd_tcpip_patch.o(i.at_socket_client_cleanup_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = at_socket_client_cleanup_task &rArr; at_close_client
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_close_client
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_cleanup_task
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_server_timeout_handler
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipclose
</UL>

<P><STRONG><a name="[366]"></a>at_socket_client_create_task</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, at_cmd_tcpip_patch.o(i.at_socket_client_create_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = at_socket_client_create_task
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_server_listen_task
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipstart
</UL>

<P><STRONG><a name="[5f]"></a>at_socket_process_task</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, at_cmd_tcpip_patch.o(i.at_socket_process_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = at_socket_process_task &rArr; at_process_recv_socket &rArr; at_uart1_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_update_link_count
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_recv_socket
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(i.at_socket_client_create_task)
</UL>
<P><STRONG><a name="[3c6]"></a>at_socket_read</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, at_cmd_tcpip_patch.o(i.at_socket_read), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv
</UL>

<P><STRONG><a name="[3c7]"></a>at_socket_read_set_timeout</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, at_cmd_tcpip_patch.o(i.at_socket_read_set_timeout), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
</UL>

<P><STRONG><a name="[35a]"></a>at_socket_server_cleanup_task</STRONG> (Thumb, 146 bytes, Stack size 88 bytes, at_cmd_tcpip_patch.o(i.at_socket_server_cleanup_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = at_socket_server_cleanup_task &rArr; at_socket_client_cleanup_task &rArr; at_close_client
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_client_cleanup_task
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_get_id
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_server
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipserver
</UL>

<P><STRONG><a name="[3a8]"></a>at_socket_server_create_task</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, at_cmd_tcpip_patch.o(i.at_socket_server_create_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = at_socket_server_create_task
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_server
</UL>

<P><STRONG><a name="[60]"></a>at_socket_server_listen_task</STRONG> (Thumb, 214 bytes, Stack size 72 bytes, at_cmd_tcpip_patch.o(i.at_socket_server_listen_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = at_socket_server_listen_task &rArr; at_socket_client_create_task
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_client_create_task
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_get_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_tcpip_patch.o(i.at_socket_server_create_task)
</UL>
<P><STRONG><a name="[3c9]"></a>at_socket_write_set_timeout</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, at_cmd_tcpip_patch.o(i.at_socket_write_set_timeout), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
</UL>

<P><STRONG><a name="[62]"></a>at_task_cmd_process_patch</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, at_cmd_task_patch.o(i.at_task_cmd_process_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = at_task_cmd_process_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_str
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_task_patch.o(i.at_task_func_init_patch)
</UL>
<P><STRONG><a name="[61]"></a>at_task_create_patch</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at_cmd_task_patch.o(i.at_task_create_patch))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_task_patch.o(i.at_task_func_init_patch)
</UL>
<P><STRONG><a name="[32e]"></a>at_task_func_init_patch</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at_cmd_task_patch.o(i.at_task_func_init_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[351]"></a>at_uart1_printf</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, at_cmd_common_patch.o(i.at_uart1_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = at_uart1_printf &rArr; at_uart1_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_uart1_write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_response_result
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_uart1_rx_int_at_data_receive_tcpip_impl
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsto
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntptime
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cifsr
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_wifi_event_handler_cb
</UL>

<P><STRONG><a name="[3be]"></a>at_uart1_write_buffer</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, at_cmd_common_patch.o(i.at_uart1_write_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = at_uart1_write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_uart1_printf
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_from_peer
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_recv_socket
</UL>

<P><STRONG><a name="[3c5]"></a>at_update_link_count</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i.at_update_link_count))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_socket_process_task
</UL>

<P><STRONG><a name="[5c]"></a>at_user_wifi_app_entry</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, at_cmd_app.o(i.at_user_wifi_app_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = at_user_wifi_app_entry
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_app.o(i.at_cmd_wifi_hook)
</UL>
<P><STRONG><a name="[5b]"></a>at_wifi_event_handler_cb</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, at_cmd_app.o(i.at_wifi_event_handler_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = at_wifi_event_handler_cb &rArr; _at_msg_ext_wifi_show_ap_by_filter_patch &rArr; _at_msg_ext_wifi_show_one_ap_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_auto_connect_req
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_ap_by_filter_patch
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_uart1_printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> at_cmd_app.o(.constdata)
<LI> at_cmd_app.o(i.at_cmd_wifi_hook)
</UL>
<P><STRONG><a name="[313]"></a>auto_connect_init</STRONG> (Thumb, 116 bytes, Stack size 464 bytes, controller_wifi_patch.o(i.auto_connect_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = auto_connect_init &rArr; read_auto_conn_ap_info_from_flash &rArr; MwFim_FileRead &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_auto_connect_mode
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_auto_connect_ap_num
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_auto_connect_ap_cfg
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_connect_cfg_from_flash
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_conn_mode_from_flash
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_conn_ap_num_from_flash
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_conn_ap_info_from_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ServiceInit_patch
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_auto_connect_init
</UL>

<P><STRONG><a name="[3c2]"></a>build_fd_sets</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, at_cmd_tcpip_patch.o(i.build_fd_sets), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_socket_nonblock
</UL>

<P><STRONG><a name="[cf]"></a>ccmp_decrypt_impl_v1</STRONG> (Thumb, 242 bytes, Stack size 160 bytes, ccmp_patch.o(i.ccmp_decrypt_impl_v1))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = ccmp_decrypt_impl_v1 &rArr; ccmp_aad_nonce_patch_v1
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_hexdump
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccmp_aad_nonce_patch_v1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi_mac_patch.o(i.wifi_mac_crypto_func_init_patch)
</UL>
<P><STRONG><a name="[d0]"></a>ccmp_encrypt_impl_v1</STRONG> (Thumb, 234 bytes, Stack size 120 bytes, ccmp_patch.o(i.ccmp_encrypt_impl_v1))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ccmp_encrypt_impl_v1 &rArr; ccmp_aad_nonce_patch_v1
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_hexdump
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccmp_aad_nonce_patch_v1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi_mac_patch.o(i.wifi_mac_crypto_func_init_patch)
</UL>
<P><STRONG><a name="[467]"></a>clear_uart_buffer_patch</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, diag_task_patch.o(i.clear_uart_buffer_patch), UNUSED)

<P><STRONG><a name="[417]"></a>control_auto_connect</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, controller_wifi_patch.o(i.control_auto_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = control_auto_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_task_evt_handle_patch
</UL>

<P><STRONG><a name="[c4]"></a>controller_wifi_evt_handler_patch</STRONG> (Thumb, 454 bytes, Stack size 48 bytes, controller_wifi_patch.o(i.controller_wifi_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = controller_wifi_evt_handler_patch &rArr; wifi_event_loop_send
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_event_loop_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controller_wifi_patch.o(i.wifi_ctrl_patch_init)
</UL>
<P><STRONG><a name="[c6]"></a>controller_wifi_init_patch</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, controller_wifi_patch.o(i.controller_wifi_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = controller_wifi_init_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controller_wifi_patch.o(i.wifi_ctrl_patch_init)
</UL>
<P><STRONG><a name="[3d1]"></a>data_process_ble</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_data_process.o(i.data_process_ble))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = data_process_ble &rArr; LeCmdAppProcessAtCmd &rArr; LeAppGetAtCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessAtCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_handler
</UL>

<P><STRONG><a name="[3d2]"></a>data_process_cmd_mode</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, at_cmd_data_process.o(i.data_process_cmd_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = data_process_cmd_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_handler
</UL>

<P><STRONG><a name="[38e]"></a>data_process_data_len_get</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, at_cmd_data_process.o(i.data_process_data_len_get))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_uart1_rx_int_at_data_receive_tcpip_impl
</UL>

<P><STRONG><a name="[386]"></a>data_process_func_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at_cmd_data_process.o(i.data_process_func_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_func_init
</UL>

<P><STRONG><a name="[345]"></a>data_process_handler</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, at_cmd_data_process.o(i.data_process_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = data_process_handler &rArr; data_process_ble &rArr; LeCmdAppProcessAtCmd &rArr; LeAppGetAtCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_wifi
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_tcpip
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_sys
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_cmd_mode
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_ble
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_handler_impl
</UL>

<P><STRONG><a name="[3d6]"></a>data_process_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at_cmd_data_process.o(i.data_process_init))
<BR><BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_unlock
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_lock
</UL>

<P><STRONG><a name="[28a]"></a>data_process_lock</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, at_cmd_data_process.o(i.data_process_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = data_process_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_init
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppOccupyUartStart
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsend
</UL>

<P><STRONG><a name="[390]"></a>data_process_lock_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, at_cmd_data_process.o(i.data_process_lock_get))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_uart1_rx_int_do_at_impl
</UL>

<P><STRONG><a name="[468]"></a>data_process_others</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_data_process.o(i.data_process_others), UNUSED)

<P><STRONG><a name="[469]"></a>data_process_pip</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_data_process.o(i.data_process_pip), UNUSED)

<P><STRONG><a name="[46a]"></a>data_process_rf</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_data_process.o(i.data_process_rf), UNUSED)

<P><STRONG><a name="[3d5]"></a>data_process_sys</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, at_cmd_data_process.o(i.data_process_sys))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = data_process_sys
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_handler
</UL>

<P><STRONG><a name="[3d4]"></a>data_process_tcpip</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, at_cmd_data_process.o(i.data_process_tcpip))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = data_process_tcpip
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_handler
</UL>

<P><STRONG><a name="[26a]"></a>data_process_unlock</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_data_process.o(i.data_process_unlock))
<BR><BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_init
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppClearSendFlag
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessSendData
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_data_tx_task
</UL>

<P><STRONG><a name="[3d3]"></a>data_process_wifi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at_cmd_data_process.o(i.data_process_wifi))
<BR><BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_handler
</UL>

<P><STRONG><a name="[3d8]"></a>data_process_wifi_parse</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, at_cmd_data_process.o(i.data_process_wifi_parse), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[3db]"></a>delete_auto_conn_ap_num_to_flash</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, controller_wifi_patch.o(i.delete_auto_conn_ap_num_to_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = delete_auto_conn_ap_num_to_flash &rArr; MwFim_FileDelete &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_clear_ac_list
</UL>

<P><STRONG><a name="[3dc]"></a>delete_auto_connect_cfg_from_flash</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, controller_wifi_patch.o(i.delete_auto_connect_cfg_from_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = delete_auto_connect_cfg_from_flash &rArr; MwFim_FileDelete &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_clear_ac_list
</UL>

<P><STRONG><a name="[3dd]"></a>delete_auto_connect_list_from_flash</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, controller_wifi_patch.o(i.delete_auto_connect_list_from_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = delete_auto_connect_list_from_flash &rArr; MwFim_FileDelete &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_clear_ac_list
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_auto_connect_del_ap_info
</UL>

<P><STRONG><a name="[65]"></a>diag_task_patch</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, diag_task_patch.o(i.diag_task_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = diag_task_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diag_task_patch.o(i.diag_task_patch_func_init)
</UL>
<P><STRONG><a name="[335]"></a>diag_task_patch_func_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, diag_task_patch.o(i.diag_task_patch_func_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[68]"></a>diag_task_send_patch</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, diag_task_patch.o(i.diag_task_send_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = diag_task_send_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> diag_task_patch.o(i.diag_task_patch_func_init)
</UL>
<P><STRONG><a name="[7f]"></a>ethernetif_init_patch</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, wlannetif_patch.o(i.ethernetif_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ethernetif_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_loop
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_tx_notify_tcp_callback_registration
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_rx_notify_tcp_callback_registration
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_register_rxcb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wlannetif_patch.o(i.lwip_load_interface_wlannetif_patch)
</UL>
<P><STRONG><a name="[44d]"></a>events_netlink_func_init_patch</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, events_netlink_patch.o(i.events_netlink_func_init_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpas_patch_init
</UL>

<P><STRONG><a name="[378]"></a>get_auto_connect_ap_cfg</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, controller_wifi_patch.o(i.get_auto_connect_ap_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwautoconn
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_auto_connect
</UL>

<P><STRONG><a name="[3da]"></a>get_auto_connect_ap_num</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, controller_wifi_patch.o(i.get_auto_connect_ap_num))
<BR><BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_auto_connect
</UL>

<P><STRONG><a name="[37c]"></a>get_auto_connect_info</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, controller_wifi_patch.o(i.get_auto_connect_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_auto_connect_info
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwautoconn
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_auto_connect
</UL>

<P><STRONG><a name="[374]"></a>get_auto_connect_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, controller_wifi_patch.o(i.get_auto_connect_mode))
<BR><BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwautoconn
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc_patch
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_connect_handler_patch
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_conn_mode
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_auto_connect
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_fast_connect_start
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_auto_connect_start
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;supplicant_task_evt_handle_patch
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4_patch
</UL>

<P><STRONG><a name="[373]"></a>get_auto_connect_save_ap_num</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, controller_wifi_patch.o(i.get_auto_connect_save_ap_num))
<BR><BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwautoconn
</UL>

<P><STRONG><a name="[37e]"></a>get_fast_connect_mode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, controller_wifi_patch.o(i.get_fast_connect_mode))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwfastconn
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_fast_connect_get_mode
</UL>

<P><STRONG><a name="[3b4]"></a>get_sorting_mask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wpa_at_if.o(i.get_sorting_mask))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_msg_ext_wifi_scan_patch
</UL>

<P><STRONG><a name="[3b9]"></a>handle_new_connection</STRONG> (Thumb, 222 bytes, Stack size 136 bytes, at_cmd_tcpip_patch.o(i.handle_new_connection), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_ntoa_r
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_get_id
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_listen_socket
</UL>

<P><STRONG><a name="[d2]"></a>ieee80211_rx_frame_patch</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, wifi_mac_rx_data_patch.o(i.ieee80211_rx_frame_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ieee80211_rx_frame_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi_mac_rx_data_patch.o(i.wifi_mac_rx_data_func_init_patch)
</UL>
<P><STRONG><a name="[332]"></a>ipc_patch_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ipc_patch.o(i.ipc_patch_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[72]"></a>ipc_proc_patch</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, ipc_patch.o(i.ipc_proc_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ipc_proc_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_update_processing_time
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ipc_patch.o(i.ipc_patch_init)
</UL>
<P><STRONG><a name="[71]"></a>ipc_rb_write_patch</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, ipc_patch.o(i.ipc_rb_write_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ipc_rb_write_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_update_processing_time
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ipc_patch.o(i.ipc_patch_init)
</UL>
<P><STRONG><a name="[73]"></a>ipc_wifi_aps_rx_handle_patch</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, data_flow_patch.o(i.ipc_wifi_aps_rx_handle_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ipc_wifi_aps_rx_handle_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ipc_patch.o(i.ipc_patch_init)
</UL>
<P><STRONG><a name="[3e8]"></a>isMAC_</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, wpa_cli_patch.o(i.isMAC_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isMAC_
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_connect_handler_patch
</UL>

<P><STRONG><a name="[3b5]"></a>is_sorting</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wpa_at_if.o(i.is_sorting))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_msg_ext_wifi_scan_patch
</UL>

<P><STRONG><a name="[331]"></a>isr_patch_init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, nl1000_it_patch.o(i.isr_patch_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[334]"></a>le_ctrl_pre_patch_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, le_ctrl_func_map_patch.o(i.le_ctrl_pre_patch_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[7e]"></a>low_level_input_patch</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, wlannetif_patch.o(i.low_level_input_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = low_level_input_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_loop
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_rx_queue_first_entry_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wlannetif_patch.o(i.lwip_load_interface_wlannetif_patch)
</UL>
<P><STRONG><a name="[3ee]"></a>lwip_load_interface_ip4_frag_patch</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ip4_frag_patch.o(i.lwip_load_interface_ip4_frag_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_module_interface_init_patch
</UL>

<P><STRONG><a name="[3ef]"></a>lwip_load_interface_lwip_helper_patch</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lwip_helper_patch.o(i.lwip_load_interface_lwip_helper_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_module_interface_init_patch
</UL>

<P><STRONG><a name="[3ed]"></a>lwip_load_interface_wlannetif_patch</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wlannetif_patch.o(i.lwip_load_interface_wlannetif_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_module_interface_init_patch
</UL>

<P><STRONG><a name="[336]"></a>lwip_module_interface_init_patch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lwip_jmptbl_patch.o(i.lwip_module_interface_init_patch), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lwip_module_interface_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_load_interface_wlannetif_patch
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_load_interface_lwip_helper_patch
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_load_interface_ip4_frag_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[7d]"></a>lwip_net_ready_patch</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lwip_helper_patch.o(i.lwip_net_ready_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lwip_net_ready_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_config_init
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lwip_helper_patch.o(i.lwip_load_interface_lwip_helper_patch)
</UL>
<P><STRONG><a name="[7b]"></a>lwip_network_init_patch</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lwip_helper_patch.o(i.lwip_network_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lwip_network_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dhcp_config_init
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lwip_helper_patch.o(i.lwip_load_interface_lwip_helper_patch)
</UL>
<P><STRONG><a name="[34f]"></a>net_adapter_get_ip_info</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, at_cmd_tcpip_patch.o(i.net_adapter_get_ip_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = net_adapter_get_ip_info
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_config_init
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_find
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cifsr
</UL>

<P><STRONG><a name="[b8]"></a>nl_aes_ccm_patch</STRONG> (Thumb, 48 bytes, Stack size 72 bytes, scrt_patch.o(i.nl_aes_ccm_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nl_aes_ccm_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[ba]"></a>nl_hmac_sha_1_patch</STRONG> (Thumb, 412 bytes, Stack size 64 bytes, scrt_patch.o(i.nl_hmac_sha_1_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nl_hmac_sha_1_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[b9]"></a>nl_scrt_aes_ccm_patch</STRONG> (Thumb, 636 bytes, Stack size 64 bytes, scrt_patch.o(i.nl_scrt_aes_ccm_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nl_scrt_aes_ccm_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[bb]"></a>nl_scrt_aes_ecb_patch</STRONG> (Thumb, 504 bytes, Stack size 64 bytes, scrt_patch.o(i.nl_scrt_aes_ecb_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nl_scrt_aes_ecb_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[be]"></a>nl_scrt_ecdh_dhkey_gen_impl</STRONG> (Thumb, 972 bytes, Stack size 96 bytes, scrt_patch.o(i.nl_scrt_ecdh_dhkey_gen_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = nl_scrt_ecdh_dhkey_gen_impl
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[bd]"></a>nl_scrt_ecdh_key_pair_gen_impl</STRONG> (Thumb, 706 bytes, Stack size 72 bytes, scrt_patch.o(i.nl_scrt_ecdh_key_pair_gen_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nl_scrt_ecdh_key_pair_gen_impl
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[b7]"></a>nl_scrt_init_patch</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, scrt_patch.o(i.nl_scrt_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nl_scrt_init_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[bf]"></a>nl_scrt_key_delete_impl</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, scrt_patch.o(i.nl_scrt_key_delete_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nl_scrt_key_delete_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[bc]"></a>nl_scrt_otp_status_get_impl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scrt_patch.o(i.nl_scrt_otp_status_get_impl))
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[3f6]"></a>opl_at_module_init</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, at_cmd_task_patch.o(i.opl_at_module_init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_link_init
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcpip_data_task
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_wifi_hook
</UL>

<P><STRONG><a name="[308]"></a>osKernelInitialize_patch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, freertos_cmsis_patch.o(i.osKernelInitialize_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osKernelInitialize_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_CheckWarmBoot
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_DriverInit_patch
</UL>

<P><STRONG><a name="[80]"></a>osKernelRestart</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, freertos_cmsis_patch.o(i.osKernelRestart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osKernelRestart
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_CheckWarmBoot
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskRestartScheduler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmsis_os_patch_init.o(i.os_patch_init)
</UL>
<P><STRONG><a name="[337]"></a>os_patch_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cmsis_os_patch_init.o(i.os_patch_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[330]"></a>peripheral_patch_init</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, peri_patch_init.o(i.peripheral_patch_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[9e]"></a>ps_adjust_tick_patch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ps_task_patch.o(i.ps_adjust_tick_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ps_adjust_tick_patch &rArr; ps_synchronize_timers
</UL>
<BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_synchronize_timers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ps_task_patch.o(i.ps_patch_init)
</UL>
<P><STRONG><a name="[9c]"></a>ps_early_wakeup_callback</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ps.o(i.ps_early_wakeup_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ps_early_wakeup_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ps.o(i.ps_early_wakeup_enable)
</UL>
<P><STRONG><a name="[3fa]"></a>ps_early_wakeup_enable</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ps.o(i.ps_early_wakeup_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ps_early_wakeup_enable &rArr; Hal_Vic_GpioDirection
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Vic_GpioDirection
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Vic_GpioCallBackFuncSet
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_init
</UL>

<P><STRONG><a name="[46b]"></a>ps_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ps.o(i.ps_enable), UNUSED)

<P><STRONG><a name="[46c]"></a>ps_get_1m_timer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ps.o(i.ps_get_1m_timer), UNUSED)

<P><STRONG><a name="[30e]"></a>ps_init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ps.o(i.ps_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ps_init &rArr; ps_early_wakeup_enable &rArr; Hal_Vic_GpioDirection
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_CheckWarmBoot
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_early_wakeup_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_DriverInit_patch
</UL>

<P><STRONG><a name="[403]"></a>ps_notify_msq_dreaming</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ps.o(i.ps_notify_msq_dreaming))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_task_patch
</UL>

<P><STRONG><a name="[220]"></a>ps_parse_command</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, ps.o(i.ps_parse_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ps_parse_command
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdProcess_Patch
</UL>

<P><STRONG><a name="[333]"></a>ps_patch_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ps_task_patch.o(i.ps_patch_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[310]"></a>ps_sleep</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ps.o(i.ps_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ps_sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_IdleHook_patch
</UL>

<P><STRONG><a name="[402]"></a>ps_snapshot_timers</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ps.o(i.ps_snapshot_timers))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ps_snapshot_timers
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_task_patch
</UL>

<P><STRONG><a name="[3f9]"></a>ps_synchronize_timers</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ps.o(i.ps_synchronize_timers))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ps_synchronize_timers
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_adjust_tick_patch
</UL>

<P><STRONG><a name="[9d]"></a>ps_task_create_patch</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ps_task_patch.o(i.ps_task_create_patch))
<BR>[Address Reference Count : 1]<UL><LI> ps_task_patch.o(i.ps_patch_init)
</UL>
<P><STRONG><a name="[fd]"></a>ps_task_patch</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ps_task_patch.o(i.ps_task_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ps_task_patch &rArr; ps_snapshot_timers
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Sys_PtatEn
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_snapshot_timers
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ps_notify_msq_dreaming
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ps_task_patch.o(.constdata)
</UL>
<P><STRONG><a name="[3e7]"></a>ps_update_processing_time</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ps.o(i.ps_update_processing_time))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_rb_write_patch
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipc_proc_patch
</UL>

<P><STRONG><a name="[30f]"></a>ps_wait_xtal_ready</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ps.o(i.ps_wait_xtal_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ps_wait_xtal_ready
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_DriverInit_patch
</UL>

<P><STRONG><a name="[37f]"></a>read_auto_conn_ap_info_from_flash</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, controller_wifi_patch.o(i.read_auto_conn_ap_info_from_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = read_auto_conn_ap_info_from_flash &rArr; MwFim_FileRead &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileRead
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_connect_init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwfastconn
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_driver_netlink_fast_connect_patch
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_auto_connect_get_ap_info
</UL>

<P><STRONG><a name="[3cc]"></a>read_auto_conn_ap_num_from_flash</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, controller_wifi_patch.o(i.read_auto_conn_ap_num_from_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = read_auto_conn_ap_num_from_flash &rArr; MwFim_FileRead &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileRead
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_connect_init
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_auto_connect_get_ap_num
</UL>

<P><STRONG><a name="[3cb]"></a>read_auto_conn_mode_from_flash</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, controller_wifi_patch.o(i.read_auto_conn_mode_from_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = read_auto_conn_mode_from_flash &rArr; MwFim_FileRead &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileRead
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_connect_init
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_auto_connect_get_mode
</UL>

<P><STRONG><a name="[394]"></a>read_auto_connect_cfg_from_flash</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, controller_wifi_patch.o(i.read_auto_connect_cfg_from_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = read_auto_connect_cfg_from_flash &rArr; MwFim_FileRead &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileRead
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_connect_init
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_auto_connect_list
</UL>

<P><STRONG><a name="[3ba]"></a>receive_from_peer</STRONG> (Thumb, 440 bytes, Stack size 112 bytes, at_cmd_tcpip_patch.o(i.receive_from_peer), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_uart1_write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_socket_nonblock
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_process_listen_socket
</UL>

<P><STRONG><a name="[404]"></a>reset_auto_connect_list</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, controller_wifi_patch.o(i.reset_auto_connect_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = reset_auto_connect_list
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_clear_ac_list
</UL>

<P><STRONG><a name="[d1]"></a>rx_data_frame_patch</STRONG> (Thumb, 626 bytes, Stack size 88 bytes, wifi_mac_rx_data_patch.o(i.rx_data_frame_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = rx_data_frame_patch &rArr; rx_data_reasm &rArr; rx_data_reasm_cb_reset &rArr; rx_data_reasm_tmr_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_rx_queue_first_entry_free
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_hexdump
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_reasm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi_mac_rx_data_patch.o(i.wifi_mac_rx_data_func_init_patch)
</UL>
<P><STRONG><a name="[405]"></a>rx_data_reasm</STRONG> (Thumb, 424 bytes, Stack size 56 bytes, wifi_mac_rx_data_patch.o(i.rx_data_reasm))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rx_data_reasm &rArr; rx_data_reasm_cb_reset &rArr; rx_data_reasm_tmr_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_reasm_tmr_start
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_reasm_cb_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_frame_patch
</UL>

<P><STRONG><a name="[406]"></a>rx_data_reasm_cb_reset</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wifi_mac_rx_data_patch.o(i.rx_data_reasm_cb_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rx_data_reasm_cb_reset &rArr; rx_data_reasm_tmr_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_reasm_tmr_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_rx_reasm_timeout_handle
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_reasm
</UL>

<P><STRONG><a name="[9f]"></a>rx_data_reasm_timeout_handle</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, wifi_mac_rx_data_patch.o(i.rx_data_reasm_timeout_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rx_data_reasm_timeout_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi_mac_rx_data_patch.o(i.rx_data_reasm_tmr_start)
</UL>
<P><STRONG><a name="[407]"></a>rx_data_reasm_tmr_start</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, wifi_mac_rx_data_patch.o(i.rx_data_reasm_tmr_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rx_data_reasm_tmr_start
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_reasm
</UL>

<P><STRONG><a name="[408]"></a>rx_data_reasm_tmr_stop</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wifi_mac_rx_data_patch.o(i.rx_data_reasm_tmr_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rx_data_reasm_tmr_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_reasm_cb_reset
</UL>

<P><STRONG><a name="[a9]"></a>scrt_asset_delete_impl</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, scrt_patch.o(i.scrt_asset_delete_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = scrt_asset_delete_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[ab]"></a>scrt_asset_get_impl</STRONG> (Thumb, 198 bytes, Stack size 48 bytes, scrt_patch.o(i.scrt_asset_get_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = scrt_asset_get_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[aa]"></a>scrt_asset_load_impl</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, scrt_patch.o(i.scrt_asset_load_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = scrt_asset_load_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[32c]"></a>scrt_drv_func_init_patch</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, scrt_patch.o(i.scrt_drv_func_init_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[a5]"></a>scrt_ecdh_key_param_init_impl</STRONG> (Thumb, 222 bytes, Stack size 56 bytes, scrt_patch.o(i.scrt_ecdh_key_param_init_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = scrt_ecdh_key_param_init_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[b2]"></a>scrt_ecdh_lock_impl</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, scrt_patch.o(i.scrt_ecdh_lock_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = scrt_ecdh_lock_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[a6]"></a>scrt_ecdh_priv_key_asset_create_impl</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, scrt_patch.o(i.scrt_ecdh_priv_key_asset_create_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = scrt_ecdh_priv_key_asset_create_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[a7]"></a>scrt_ecdh_pub_key_asset_create_impl</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, scrt_patch.o(i.scrt_ecdh_pub_key_asset_create_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = scrt_ecdh_pub_key_asset_create_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[a8]"></a>scrt_ecdh_shared_secret_asset_create_impl</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, scrt_patch.o(i.scrt_ecdh_shared_secret_asset_create_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = scrt_ecdh_shared_secret_asset_create_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[b3]"></a>scrt_ecdh_unlock_impl</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, scrt_patch.o(i.scrt_ecdh_unlock_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = scrt_ecdh_unlock_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[a3]"></a>scrt_eng_init_impl</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, scrt_patch.o(i.scrt_eng_init_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = scrt_eng_init_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[ad]"></a>scrt_internal_reset_impl</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, scrt_patch.o(i.scrt_internal_reset_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = scrt_internal_reset_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[ae]"></a>scrt_link_impl</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, scrt_patch.o(i.scrt_link_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = scrt_link_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[a1]"></a>scrt_mb_init_impl</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, scrt_patch.o(i.scrt_mb_init_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = scrt_mb_init_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[a0]"></a>scrt_param_init_impl</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, scrt_patch.o(i.scrt_param_init_impl))
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[b5]"></a>scrt_res_alloc_impl</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, scrt_patch.o(i.scrt_res_alloc_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = scrt_res_alloc_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[b6]"></a>scrt_res_free_impl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scrt_patch.o(i.scrt_res_free_impl))
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[b0]"></a>scrt_res_lock_impl</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, scrt_patch.o(i.scrt_res_lock_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = scrt_res_lock_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[b1]"></a>scrt_res_unlock_impl</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, scrt_patch.o(i.scrt_res_unlock_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = scrt_res_unlock_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[ac]"></a>scrt_reset_impl</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, scrt_patch.o(i.scrt_reset_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = scrt_reset_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[b4]"></a>scrt_sem_create_impl</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, scrt_patch.o(i.scrt_sem_create_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = scrt_sem_create_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[a4]"></a>scrt_status_chk_impl</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, scrt_patch.o(i.scrt_status_chk_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = scrt_status_chk_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[a2]"></a>scrt_trng_init_impl</STRONG> (Thumb, 198 bytes, Stack size 48 bytes, scrt_patch.o(i.scrt_trng_init_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = scrt_trng_init_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[af]"></a>scrt_unlink_impl</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, scrt_patch.o(i.scrt_unlink_impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = scrt_unlink_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrt_patch.o(i.scrt_drv_func_init_patch)
</UL>
<P><STRONG><a name="[3cd]"></a>set_auto_connect_ap_cfg</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, controller_wifi_patch.o(i.set_auto_connect_ap_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_connect_init
</UL>

<P><STRONG><a name="[37a]"></a>set_auto_connect_ap_num</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, controller_wifi_patch.o(i.set_auto_connect_ap_num))
<BR><BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_connect_init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwautoconn
</UL>

<P><STRONG><a name="[409]"></a>set_auto_connect_info</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, controller_wifi_patch.o(i.set_auto_connect_info), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[375]"></a>set_auto_connect_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, controller_wifi_patch.o(i.set_auto_connect_mode))
<BR><BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_connect_init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwautoconn
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc_patch
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_connect_handler_patch
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_process_3_of_4_patch
</UL>

<P><STRONG><a name="[377]"></a>set_auto_connect_save_ap_num</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, controller_wifi_patch.o(i.set_auto_connect_save_ap_num))
<BR><BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwautoconn
</UL>

<P><STRONG><a name="[5a]"></a>set_echo_on_impl</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at_cmd_common_patch.o(i.set_echo_on_impl))
<BR>[Address Reference Count : 1]<UL><LI> at_cmd_common_patch.o(i.at_cmd_common_func_init_patch)
</UL>
<P><STRONG><a name="[380]"></a>set_fast_connect_mode</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, controller_wifi_patch.o(i.set_fast_connect_mode))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwfastconn
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_fast_connect_set_mode
</UL>

<P><STRONG><a name="[383]"></a>set_sorting</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wpa_at_if.o(i.set_sorting))
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwlapopt
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_at_if_func_init
</UL>

<P><STRONG><a name="[46d]"></a>sntp_enabled</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sntp_client.o(i.sntp_enabled), UNUSED)

<P><STRONG><a name="[46e]"></a>sntp_getoperatingmode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sntp_client.o(i.sntp_getoperatingmode), UNUSED)

<P><STRONG><a name="[46f]"></a>sntp_getserver</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sntp_client.o(i.sntp_getserver), UNUSED)

<P><STRONG><a name="[470]"></a>sntp_getservername</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sntp_client.o(i.sntp_getservername), UNUSED)

<P><STRONG><a name="[360]"></a>sntp_init</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, sntp_client.o(i.sntp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sntp_init &rArr; sntp_request &rArr; sntp_send_request
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_loop
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new_ip_type
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_request
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntpcfg
</UL>

<P><STRONG><a name="[414]"></a>sntp_setoperatingmode</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, sntp_client.o(i.sntp_setoperatingmode), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_loop
</UL>

<P><STRONG><a name="[415]"></a>sntp_setserver</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, sntp_client.o(i.sntp_setserver), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[35f]"></a>sntp_setservername</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sntp_client.o(i.sntp_setservername))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntpcfg
</UL>

<P><STRONG><a name="[35b]"></a>sntp_stop</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, sntp_client.o(i.sntp_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sntp_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_untimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipsntpcfg
</UL>

<P><STRONG><a name="[fc]"></a>supplicant_task_evt_handle_patch</STRONG> (Thumb, 386 bytes, Stack size 32 bytes, supplicant_task_patch.o(i.supplicant_task_evt_handle_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = supplicant_task_evt_handle_patch &rArr; control_auto_connect
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_mode
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_auto_connect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> supplicant_task_patch.o(i.wpa_supplicant_task_func_init_patch)
</UL>
<P><STRONG><a name="[d5]"></a>tkip_decrypt_patch</STRONG> (Thumb, 316 bytes, Stack size 104 bytes, tkip_patch.o(i.tkip_decrypt_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = tkip_decrypt_patch &rArr; tkip_mixing_phase2
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wep_crypt
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_hexdump
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_mixing_phase2
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_mixing_phase1
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WPA_GET_LE32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tkip_patch.o(i.wifi_mac_tkip_patch_init)
</UL>
<P><STRONG><a name="[d6]"></a>tkip_mic_check_patch</STRONG> (Thumb, 218 bytes, Stack size 80 bytes, tkip_patch.o(i.tkip_mic_check_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = tkip_mic_check_patch &rArr; michael_mic
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_hexdump
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;michael_mic_hdr
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;michael_mic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tkip_patch.o(i.wifi_mac_tkip_patch_init)
</UL>
<P><STRONG><a name="[49]"></a>tracer_msg_patch</STRONG> (Thumb, 298 bytes, Stack size 320 bytes, msg_patch.o(i.tracer_msg_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = tracer_msg_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprintf
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msg_patch.o(i.Tracer_PatchInit)
</UL>
<P><STRONG><a name="[41]"></a>uartdbg_rx_int_patch_handler</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, diag_task_patch.o(i.uartdbg_rx_int_patch_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uartdbg_rx_int_patch_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_init_patch.o(i.Main_DriverInit_patch)
</UL>
<P><STRONG><a name="[39c]"></a>valid_digit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, at_cmd_tcpip_patch.o(i.valid_digit))
<BR><BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_is_valid_ip
</UL>

<P><STRONG><a name="[79]"></a>vendor_specific_send_control_pdu_event_handler_patch</STRONG> (Thumb, 428 bytes, Stack size 32 bytes, le_ctrl_hci_handler_patch.o(i.vendor_specific_send_control_pdu_event_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vendor_specific_send_control_pdu_event_handler_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> le_ctrl_func_map_patch.o(i.le_ctrl_pre_patch_init)
</UL>
<P><STRONG><a name="[421]"></a>wifi_auto_connect_del_ap_info</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_auto_connect_del_ap_info), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_auto_connect_list_from_flash
</UL>

<P><STRONG><a name="[422]"></a>wifi_auto_connect_get_ap_info</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_auto_connect_get_ap_info), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_conn_ap_info_from_flash
</UL>

<P><STRONG><a name="[423]"></a>wifi_auto_connect_get_ap_num</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_auto_connect_get_ap_num), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_conn_ap_num_from_flash
</UL>

<P><STRONG><a name="[424]"></a>wifi_auto_connect_get_mode</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_auto_connect_get_mode), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_conn_mode_from_flash
</UL>

<P><STRONG><a name="[425]"></a>wifi_auto_connect_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_auto_connect_init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_connect_init
</UL>

<P><STRONG><a name="[3ca]"></a>wifi_auto_connect_req</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, controller_wifi_patch.o(i.wifi_auto_connect_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wifi_auto_connect_req
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_wifi_event_handler_cb
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_auto_connect_start
</UL>

<P><STRONG><a name="[426]"></a>wifi_auto_connect_set_ap_num</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_auto_connect_set_ap_num), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_connect_ap_num_to_flash
</UL>

<P><STRONG><a name="[427]"></a>wifi_auto_connect_set_mode</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_auto_connect_set_mode), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_conn_mode_to_flash
</UL>

<P><STRONG><a name="[428]"></a>wifi_auto_connect_start</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_auto_connect_start), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_auto_connect_req
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_mode
</UL>

<P><STRONG><a name="[c5]"></a>wifi_cmd_tout_handle_patch</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, controller_wifi_patch.o(i.wifi_cmd_tout_handle_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = wifi_cmd_tout_handle_patch &rArr; wifi_event_loop_send
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_event_loop_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controller_wifi_patch.o(i.wifi_ctrl_patch_init)
</UL>
<P><STRONG><a name="[471]"></a>wifi_config_get_bandwidth</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_config_get_bandwidth), UNUSED)

<P><STRONG><a name="[472]"></a>wifi_config_get_bssid</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_config_get_bssid), UNUSED)

<P><STRONG><a name="[473]"></a>wifi_config_get_channel</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_config_get_channel), UNUSED)

<P><STRONG><a name="[474]"></a>wifi_config_get_dtim_interval</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_config_get_dtim_interval), UNUSED)

<P><STRONG><a name="[475]"></a>wifi_config_get_listen_interval</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_config_get_listen_interval), UNUSED)

<P><STRONG><a name="[476]"></a>wifi_config_get_mac_address</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_config_get_mac_address), UNUSED)

<P><STRONG><a name="[477]"></a>wifi_config_get_opmode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_config_get_opmode), UNUSED)

<P><STRONG><a name="[478]"></a>wifi_config_get_ssid</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_config_get_ssid), UNUSED)

<P><STRONG><a name="[479]"></a>wifi_config_set_bandwidth</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_config_set_bandwidth), UNUSED)

<P><STRONG><a name="[47a]"></a>wifi_config_set_bssid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_config_set_bssid), UNUSED)

<P><STRONG><a name="[47b]"></a>wifi_config_set_channel</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_config_set_channel), UNUSED)

<P><STRONG><a name="[47c]"></a>wifi_config_set_dtim_interval</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_config_set_dtim_interval), UNUSED)

<P><STRONG><a name="[47d]"></a>wifi_config_set_listen_interval</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_config_set_listen_interval), UNUSED)

<P><STRONG><a name="[47e]"></a>wifi_config_set_mac_address</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_config_set_mac_address), UNUSED)

<P><STRONG><a name="[47f]"></a>wifi_config_set_opmode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_config_set_opmode), UNUSED)

<P><STRONG><a name="[480]"></a>wifi_config_set_ssid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_config_set_ssid), UNUSED)

<P><STRONG><a name="[429]"></a>wifi_connection_connect</STRONG> (Thumb, 142 bytes, Stack size 160 bytes, wifi_api.o(i.wifi_connection_connect), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[481]"></a>wifi_connection_disconnect_ap</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_connection_disconnect_ap), UNUSED)

<P><STRONG><a name="[482]"></a>wifi_connection_get_rssi</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_connection_get_rssi), UNUSED)

<P><STRONG><a name="[483]"></a>wifi_connection_register_event_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_connection_register_event_handler), UNUSED)

<P><STRONG><a name="[484]"></a>wifi_connection_scan_start</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_connection_scan_start), UNUSED)

<P><STRONG><a name="[485]"></a>wifi_connection_unregister_event_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_connection_unregister_event_handler), UNUSED)

<P><STRONG><a name="[32b]"></a>wifi_ctrl_patch_init</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, controller_wifi_patch.o(i.wifi_ctrl_patch_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[486]"></a>wifi_deinit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_deinit), UNUSED)

<P><STRONG><a name="[39e]"></a>wifi_event_loop_init</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, event_loop.o(i.wifi_event_loop_init), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_wifi_hook
</UL>

<P><STRONG><a name="[3d0]"></a>wifi_event_loop_send</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, event_loop.o(i.wifi_event_loop_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wifi_event_loop_send
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_cmd_tout_handle_patch
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controller_wifi_evt_handler_patch
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_ready_callback_patch
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_start
</UL>

<P><STRONG><a name="[487]"></a>wifi_event_loop_set_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, event_loop.o(i.wifi_event_loop_set_cb), UNUSED)

<P><STRONG><a name="[cc]"></a>wifi_event_loop_task</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, event_loop.o(i.wifi_event_loop_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wifi_event_loop_task &rArr; wifi_event_process_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_event_process_handler
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_event_post_to_user
</UL>
<BR>[Address Reference Count : 1]<UL><LI> event_loop.o(i.wifi_event_loop_init)
</UL>
<P><STRONG><a name="[42a]"></a>wifi_event_post_to_user</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, event_loop.o(i.wifi_event_post_to_user))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_event_loop_task
</UL>

<P><STRONG><a name="[42b]"></a>wifi_event_process_handler</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wifi_event_handler.o(i.wifi_event_process_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wifi_event_process_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_event_loop_task
</UL>

<P><STRONG><a name="[42c]"></a>wifi_fast_connect_get_mode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_fast_connect_get_mode), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fast_connect_mode
</UL>

<P><STRONG><a name="[42f]"></a>wifi_fast_connect_req</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, controller_wifi_patch.o(i.wifi_fast_connect_req), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_fast_connect_start
</UL>

<P><STRONG><a name="[42d]"></a>wifi_fast_connect_set_mode</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_fast_connect_set_mode), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_fast_connect_mode
</UL>

<P><STRONG><a name="[42e]"></a>wifi_fast_connect_start</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_fast_connect_start), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_fast_connect_req
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_mode
</UL>

<P><STRONG><a name="[430]"></a>wifi_get_ac_record</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, controller_wifi_patch.o(i.wifi_get_ac_record))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wifi_get_ac_record
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_event_assoc_patch
</UL>

<P><STRONG><a name="[cb]"></a>wifi_get_ac_result_patch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, controller_wifi_patch.o(i.wifi_get_ac_result_patch))
<BR>[Address Reference Count : 1]<UL><LI> controller_wifi_patch.o(i.wifi_ctrl_patch_init)
</UL>
<P><STRONG><a name="[431]"></a>wifi_get_config</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_get_config), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[39f]"></a>wifi_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_install_default_event_handlers
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_wifi_hook
</UL>

<P><STRONG><a name="[432]"></a>wifi_install_default_event_handlers</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wifi_event_handler.o(i.wifi_install_default_event_handlers), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_register_event_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_init
</UL>

<P><STRONG><a name="[328]"></a>wifi_mac_crypto_func_init_patch</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wifi_mac_patch.o(i.wifi_mac_crypto_func_init_patch), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_tkip_patch_init
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[32a]"></a>wifi_mac_rx_data_func_init_patch</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wifi_mac_rx_data_patch.o(i.wifi_mac_rx_data_func_init_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[d4]"></a>wifi_mac_rx_done_handler_patch</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, wifi_mac_task_patch.o(i.wifi_mac_rx_done_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wifi_mac_rx_done_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_queue_reset
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_rx_queue_first_entry_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi_mac_task_patch.o(i.wifi_mac_task_func_init_patch)
</UL>
<P><STRONG><a name="[436]"></a>wifi_mac_rx_reasm_timeout_handle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_mac_rx_data_patch.o(i.wifi_mac_rx_reasm_timeout_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wifi_mac_rx_reasm_timeout_handle &rArr; rx_data_reasm_cb_reset &rArr; rx_data_reasm_tmr_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_data_reasm_cb_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_task_patch
</UL>

<P><STRONG><a name="[329]"></a>wifi_mac_task_func_init_patch</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wifi_mac_task_patch.o(i.wifi_mac_task_func_init_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[d3]"></a>wifi_mac_task_patch</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, wifi_mac_task_patch.o(i.wifi_mac_task_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wifi_mac_task_patch &rArr; wifi_mac_rx_reasm_timeout_handle &rArr; rx_data_reasm_cb_reset &rArr; rx_data_reasm_tmr_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_rx_reasm_timeout_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifi_mac_task_patch.o(i.wifi_mac_task_func_init_patch)
</UL>
<P><STRONG><a name="[434]"></a>wifi_mac_tkip_patch_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tkip_patch.o(i.wifi_mac_tkip_patch_init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_mac_crypto_func_init_patch
</UL>

<P><STRONG><a name="[433]"></a>wifi_register_event_handler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wifi_event_handler.o(i.wifi_register_event_handler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_set_event_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_install_default_event_handlers
</UL>

<P><STRONG><a name="[3b3]"></a>wifi_scan_get_ap_list</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, wifi_api.o(i.wifi_scan_get_ap_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wifi_scan_get_ap_list
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_convert_auth_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_msg_ext_wifi_scan_patch
</UL>

<P><STRONG><a name="[388]"></a>wifi_scan_get_ap_num</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_scan_get_ap_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wifi_scan_get_ap_num
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_all_patch
</UL>

<P><STRONG><a name="[389]"></a>wifi_scan_get_ap_records</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, wifi_api.o(i.wifi_scan_get_ap_records))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wifi_scan_get_ap_records
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_convert_auth_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_msg_ext_wifi_show_all_patch
</UL>

<P><STRONG><a name="[488]"></a>wifi_scan_start</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_scan_start), UNUSED)

<P><STRONG><a name="[489]"></a>wifi_scan_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_scan_stop), UNUSED)

<P><STRONG><a name="[439]"></a>wifi_set_config</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wifi_api.o(i.wifi_set_config), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[437]"></a>wifi_set_event_handler</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, wifi_event_handler.o(i.wifi_set_event_handler), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_register_event_handler
</UL>

<P><STRONG><a name="[ca]"></a>wifi_sta_join_fast_patch</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, controller_wifi_patch.o(i.wifi_sta_join_fast_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wifi_sta_join_fast_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controller_wifi_patch.o(i.wifi_ctrl_patch_init)
</UL>
<P><STRONG><a name="[c8]"></a>wifi_sta_join_patch</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, controller_wifi_patch.o(i.wifi_sta_join_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wifi_sta_join_patch &rArr; wifi_sta_get_ac_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_sta_get_ac_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controller_wifi_patch.o(i.wifi_ctrl_patch_init)
</UL>
<P><STRONG><a name="[3a0]"></a>wifi_start</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wifi_api.o(i.wifi_start), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_event_loop_send
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_cmd_wifi_hook
</UL>

<P><STRONG><a name="[34e]"></a>wifi_station_get_connect_status</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at_cmd_app.o(i.wifi_station_get_connect_status))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cifsr
</UL>

<P><STRONG><a name="[48a]"></a>wifi_station_init_connect_status</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at_cmd_app.o(i.wifi_station_init_connect_status), UNUSED)

<P><STRONG><a name="[48b]"></a>wifi_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_stop), UNUSED)

<P><STRONG><a name="[6e]"></a>wlan_input</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wlannetif_patch.o(i.wlan_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wlan_input
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wlannetif_patch.o(i.ethernetif_init_patch)
</UL>
<P><STRONG><a name="[f6]"></a>wpa_alloc_eapol_patch</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, wpa_patch.o(i.wpa_alloc_eapol_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wpa_alloc_eapol_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memset
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcpy
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[43e]"></a>wpa_at_if_func_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wpa_at_if.o(i.wpa_at_if_func_init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sorting
</UL>

<P><STRONG><a name="[43f]"></a>wpa_cli_clear_ac_list</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, wpa_cli_patch.o(i.wpa_cli_clear_ac_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = wpa_cli_clear_ac_list &rArr; delete_auto_connect_list_from_flash &rArr; MwFim_FileDelete &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_auto_connect_list
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_auto_connect_list_from_flash
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_auto_connect_cfg_from_flash
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_auto_conn_ap_num_to_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_cmd_handler_patch
</UL>

<P><STRONG><a name="[da]"></a>wpa_cli_cmd_handler_patch</STRONG> (Thumb, 642 bytes, Stack size 16 bytes, wpa_cli_patch.o(i.wpa_cli_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = wpa_cli_cmd_handler_patch &rArr; wpa_cli_conn_mode &rArr; debug_auto_connect &rArr; get_auto_connect_info
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_state_txt
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_setdbgmode_by_param
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_fast_connect
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_conn_mode
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_clear_ac_list
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_cli_patch.o(i.wpa_cli_func_init_patch)
</UL>
<P><STRONG><a name="[442]"></a>wpa_cli_conn_mode</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, wpa_cli_patch.o(i.wpa_cli_conn_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = wpa_cli_conn_mode &rArr; debug_auto_connect &rArr; get_auto_connect_info
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_conn_mode_to_flash
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_mode
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_auto_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_cmd_handler_patch
</UL>

<P><STRONG><a name="[d9]"></a>wpa_cli_connect_handler_patch</STRONG> (Thumb, 496 bytes, Stack size 128 bytes, wpa_cli_patch.o(i.wpa_cli_connect_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = wpa_cli_connect_handler_patch &rArr; isMAC_
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwaddr_aton2
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_auto_connect_mode
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_mode
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isMAC_
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_cli_patch.o(i.wpa_cli_func_init_patch)
</UL>
<P><STRONG><a name="[443]"></a>wpa_cli_fast_connect</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, wpa_cli_patch.o(i.wpa_cli_fast_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wpa_cli_fast_connect
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_cmd_handler_patch
</UL>

<P><STRONG><a name="[44c]"></a>wpa_cli_func_init_patch</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wpa_cli_patch.o(i.wpa_cli_func_init_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpas_patch_init
</UL>

<P><STRONG><a name="[db]"></a>wpa_cli_getrssi_patch</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wpa_cli_patch.o(i.wpa_cli_getrssi_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wpa_cli_getrssi_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_cli_patch.o(i.wpa_cli_func_init_patch)
</UL>
<P><STRONG><a name="[dc]"></a>wpa_cli_scan_handler_patch</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, wpa_cli_patch.o(i.wpa_cli_scan_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wpa_cli_scan_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_cli_patch.o(i.wpa_cli_func_init_patch)
</UL>
<P><STRONG><a name="[441]"></a>wpa_cli_setdbgmode_by_param</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wpa_cli_patch.o(i.wpa_cli_setdbgmode_by_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wpa_cli_setdbgmode_by_param
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_set_debug_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_cmd_handler_patch
</UL>

<P><STRONG><a name="[d8]"></a>wpa_cli_showscanresults_handler_patch</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wpa_cli_patch.o(i.wpa_cli_showscanresults_handler_patch))
<BR>[Address Reference Count : 1]<UL><LI> wpa_cli_patch.o(i.wpa_cli_func_init_patch)
</UL>
<P><STRONG><a name="[452]"></a>wpa_common_func_init_patch</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wpa_common_patch.o(i.wpa_common_func_init_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpas_patch_init
</UL>

<P><STRONG><a name="[44f]"></a>wpa_debug_func_init_patch</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wpa_debug_patch.o(i.wpa_debug_func_init_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpas_patch_init
</UL>

<P><STRONG><a name="[f8]"></a>wpa_derive_ptk_patch</STRONG> (Thumb, 830 bytes, Stack size 160 bytes, wpa_patch.o(i.wpa_derive_ptk_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = wpa_derive_ptk_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[44b]"></a>wpa_driver_func_init_patch</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, driver_netlink_patch.o(i.wpa_driver_func_init_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpas_patch_init
</UL>

<P><STRONG><a name="[e7]"></a>wpa_driver_netlink_fast_connect_patch</STRONG> (Thumb, 114 bytes, Stack size 448 bytes, driver_netlink_patch.o(i.wpa_driver_netlink_fast_connect_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = wpa_driver_netlink_fast_connect_patch &rArr; write_auto_connect_ap_info_to_flash &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_auto_connect_ap_info_to_flash
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_auto_conn_ap_info_from_flash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver_netlink_patch.o(i.wpa_driver_func_init_patch)
</UL>
<P><STRONG><a name="[e1]"></a>wpa_driver_netlink_get_scan_results_patch</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, driver_netlink_patch.o(i.wpa_driver_netlink_get_scan_results_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wpa_driver_netlink_get_scan_results_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver_netlink_patch.o(i.wpa_driver_func_init_patch)
</UL>
<P><STRONG><a name="[e5]"></a>wpa_driver_netlink_get_ssid_patch</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, driver_netlink_patch.o(i.wpa_driver_netlink_get_ssid_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wpa_driver_netlink_get_ssid_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver_netlink_patch.o(i.wpa_driver_func_init_patch)
</UL>
<P><STRONG><a name="[e6]"></a>wpa_driver_netlink_scan_patch</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, driver_netlink_patch.o(i.wpa_driver_netlink_scan_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wpa_driver_netlink_scan_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver_netlink_patch.o(i.wpa_driver_func_init_patch)
</UL>
<P><STRONG><a name="[e3]"></a>wpa_driver_netlink_scan_results_clear_patch</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, driver_netlink_patch.o(i.wpa_driver_netlink_scan_results_clear_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wpa_driver_netlink_scan_results_clear_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver_netlink_patch.o(i.wpa_driver_func_init_patch)
</UL>
<P><STRONG><a name="[e2]"></a>wpa_driver_netlink_show_scan_results_patch</STRONG> (Thumb, 264 bytes, Stack size 48 bytes, driver_netlink_patch.o(i.wpa_driver_netlink_show_scan_results_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wpa_driver_netlink_show_scan_results_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver_netlink_patch.o(i.wpa_driver_func_init_patch)
</UL>
<P><STRONG><a name="[e4]"></a>wpa_drv_send_eapol_patch</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, driver_netlink_patch.o(i.wpa_drv_send_eapol_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wpa_drv_send_eapol_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> driver_netlink_patch.o(i.wpa_driver_func_init_patch)
</UL>
<P><STRONG><a name="[ec]"></a>wpa_eapol_key_dump_patch</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, wpa_patch.o(i.wpa_eapol_key_dump_patch))
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[de]"></a>wpa_eapol_key_mic_patch</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, wpa_common_patch.o(i.wpa_eapol_key_mic_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wpa_eapol_key_mic_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_md5
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_common_patch.o(i.wpa_common_func_init_patch)
</UL>
<P><STRONG><a name="[f2]"></a>wpa_eapol_key_send_patch</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wpa_patch.o(i.wpa_eapol_key_send_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wpa_eapol_key_send_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[f7]"></a>wpa_ether_send_patch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, wpa_patch.o(i.wpa_ether_send_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wpa_ether_send_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[44e]"></a>wpa_func_init_patch</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, wpa_patch.o(i.wpa_func_init_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpas_patch_init
</UL>

<P><STRONG><a name="[48c]"></a>wpa_get_debug_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wpa_debug_patch.o(i.wpa_get_debug_mode), UNUSED)

<P><STRONG><a name="[df]"></a>wpa_hexdump_patch</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, wpa_debug_patch.o(i.wpa_hexdump_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = wpa_hexdump_patch &rArr; _wpa_hexdump_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wpa_hexdump_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_debug_patch.o(i.wpa_debug_func_init_patch)
</UL>
<P><STRONG><a name="[451]"></a>wpa_ie_func_init_patch</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wpa_ie_patch.o(i.wpa_ie_func_init_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpas_patch_init
</UL>

<P><STRONG><a name="[f9]"></a>wpa_parse_generic_patch</STRONG> (Thumb, 310 bytes, Stack size 32 bytes, wpa_ie_patch.o(i.wpa_parse_generic_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wpa_parse_generic_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_ie_patch.o(i.wpa_ie_func_init_patch)
</UL>
<P><STRONG><a name="[dd]"></a>wpa_pmk_to_ptk_patch</STRONG> (Thumb, 150 bytes, Stack size 144 bytes, wpa_common_patch.o(i.wpa_pmk_to_ptk_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = wpa_pmk_to_ptk_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha1_prf
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcpy
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_common_patch.o(i.wpa_common_func_init_patch)
</UL>
<P><STRONG><a name="[444]"></a>wpa_set_debug_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wpa_debug_patch.o(i.wpa_set_debug_mode))
<BR><BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_setdbgmode_by_param
</UL>

<P><STRONG><a name="[d7]"></a>wpa_set_wpa_mode_impl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wpa_at_if.o(i.wpa_set_wpa_mode_impl))
<BR>[Address Reference Count : 1]<UL><LI> wpa_at_if.o(i.wpa_at_if_func_init)
</UL>
<P><STRONG><a name="[f1]"></a>wpa_sm_rx_eapol_patch</STRONG> (Thumb, 582 bytes, Stack size 64 bytes, wpa_patch.o(i.wpa_sm_rx_eapol_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = wpa_sm_rx_eapol_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memset
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcpy
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[ee]"></a>wpa_sm_set_ap_rsn_ie_patch</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wpa_patch.o(i.wpa_sm_set_ap_rsn_ie_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wpa_sm_set_ap_rsn_ie_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcpy
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[ef]"></a>wpa_sm_set_ap_wpa_ie_patch</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, wpa_patch.o(i.wpa_sm_set_ap_wpa_ie_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wpa_sm_set_ap_wpa_ie_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcpy
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[ed]"></a>wpa_sm_set_assoc_wpa_ie_patch</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wpa_patch.o(i.wpa_sm_set_assoc_wpa_ie_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wpa_sm_set_assoc_wpa_ie_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcpy
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[6f]"></a>wpa_supplicant_event_assoc_patch</STRONG> (Thumb, 410 bytes, Stack size 40 bytes, events_netlink_patch.o(i.wpa_supplicant_event_assoc_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = wpa_supplicant_event_assoc_patch &rArr; add_auto_connect_list &rArr; write_auto_connect_ap_num_to_flash &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_strlen
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memset
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcpy
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_get_ac_record
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_auto_connect_mode
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_mode
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_auto_connect_list
</UL>
<BR>[Address Reference Count : 1]<UL><LI> events_netlink_patch.o(i.events_netlink_func_init_patch)
</UL>
<P><STRONG><a name="[70]"></a>wpa_supplicant_event_eapol_rx_patch</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, events_netlink_patch.o(i.wpa_supplicant_event_eapol_rx_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wpa_supplicant_event_eapol_rx_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> events_netlink_patch.o(i.events_netlink_func_init_patch)
</UL>
<P><STRONG><a name="[450]"></a>wpa_supplicant_func_init_patch</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wpa_supplicant_patch.o(i.wpa_supplicant_func_init_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpas_patch_init
</UL>

<P><STRONG><a name="[f5]"></a>wpa_supplicant_install_gtk_patch</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, wpa_patch.o(i.wpa_supplicant_install_gtk_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wpa_supplicant_install_gtk_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[f4]"></a>wpa_supplicant_install_ptk_patch</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, wpa_patch.o(i.wpa_supplicant_install_ptk_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wpa_supplicant_install_ptk_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[fb]"></a>wpa_supplicant_parse_ies_patch</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, wpa_supplicant_patch.o(i.wpa_supplicant_parse_ies_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = wpa_supplicant_parse_ies_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant_patch.o(i.wpa_supplicant_func_init_patch)
</UL>
<P><STRONG><a name="[e8]"></a>wpa_supplicant_process_1_of_4_patch</STRONG> (Thumb, 358 bytes, Stack size 120 bytes, wpa_patch.o(i.wpa_supplicant_process_1_of_4_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = wpa_supplicant_process_1_of_4_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memset
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcpy
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_get_random
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[ea]"></a>wpa_supplicant_process_3_of_4_patch</STRONG> (Thumb, 1714 bytes, Stack size 112 bytes, wpa_patch.o(i.wpa_supplicant_process_3_of_4_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = wpa_supplicant_process_3_of_4_patch &rArr; add_auto_connect_list &rArr; write_auto_connect_ap_num_to_flash &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_strlen
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcmp
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_auto_connect_mode
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_mode
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_auto_connect_list
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[fa]"></a>wpa_supplicant_rx_eapol_netlink_patch</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, wpa_supplicant_patch.o(i.wpa_supplicant_rx_eapol_netlink_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wpa_supplicant_rx_eapol_netlink_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_supplicant_patch.o(i.wpa_supplicant_func_init_patch)
</UL>
<P><STRONG><a name="[e9]"></a>wpa_supplicant_send_2_of_4_patch</STRONG> (Thumb, 522 bytes, Stack size 88 bytes, wpa_patch.o(i.wpa_supplicant_send_2_of_4_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = wpa_supplicant_send_2_of_4_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[eb]"></a>wpa_supplicant_send_4_of_4_patch</STRONG> (Thumb, 752 bytes, Stack size 80 bytes, wpa_patch.o(i.wpa_supplicant_send_4_of_4_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = wpa_supplicant_send_4_of_4_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memset
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[453]"></a>wpa_supplicant_task_func_init_patch</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, supplicant_task_patch.o(i.wpa_supplicant_task_func_init_patch), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpas_patch_init
</UL>

<P><STRONG><a name="[f3]"></a>wpa_supplicant_validate_ie_patch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wpa_patch.o(i.wpa_supplicant_validate_ie_patch))
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[f0]"></a>wpa_supplicant_verify_eapol_key_mic_patch</STRONG> (Thumb, 216 bytes, Stack size 80 bytes, wpa_patch.o(i.wpa_supplicant_verify_eapol_key_mic_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = wpa_supplicant_verify_eapol_key_mic_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memset
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcpy
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wpa_patch.o(i.wpa_func_init_patch)
</UL>
<P><STRONG><a name="[382]"></a>wpas_get_assoc_freq</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at_cmd_common_patch.o(i.wpas_get_assoc_freq))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwjap
</UL>

<P><STRONG><a name="[381]"></a>wpas_get_state</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, at_cmd_common_patch.o(i.wpas_get_state))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwjap
</UL>

<P><STRONG><a name="[32d]"></a>wpas_patch_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, wpas_patch_init.o(i.wpas_patch_init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wpas_patch_init
</UL>
<BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_task_func_init_patch
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_supplicant_func_init_patch
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_ie_func_init_patch
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_func_init_patch
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_driver_func_init_patch
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_debug_func_init_patch
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_common_func_init_patch
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_func_init_patch
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;events_netlink_func_init_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[376]"></a>write_auto_conn_mode_to_flash</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, controller_wifi_patch.o(i.write_auto_conn_mode_to_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = write_auto_conn_mode_to_flash &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwautoconn
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_conn_mode
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_auto_connect_set_mode
</UL>

<P><STRONG><a name="[379]"></a>write_auto_connect_ap_cfg_to_flash</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, controller_wifi_patch.o(i.write_auto_connect_ap_cfg_to_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = write_auto_connect_ap_cfg_to_flash &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_auto_connect_list
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwautoconn
</UL>

<P><STRONG><a name="[37b]"></a>write_auto_connect_ap_info_to_flash</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, controller_wifi_patch.o(i.write_auto_connect_ap_info_to_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = write_auto_connect_ap_info_to_flash &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_auto_connect_list
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwfastconn
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwautoconn
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_driver_netlink_fast_connect_patch
</UL>

<P><STRONG><a name="[37d]"></a>write_auto_connect_ap_num_to_flash</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, controller_wifi_patch.o(i.write_auto_connect_ap_num_to_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = write_auto_connect_ap_num_to_flash &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_auto_connect_list
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_wifi_cwautoconn
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_auto_connect_set_ap_num
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1e9]"></a>__Patch_EntryPoint</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main_patch.o(.ARM.__at_0x00420000), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __Patch_EntryPoint &rArr; SysInit_EntryPoint &rArr; at_cmd_init_patch &rArr; _at_func_init &rArr; _at_cmd_func_init
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit_EntryPoint
</UL>

<P><STRONG><a name="[4d]"></a>Main_AppInit_patch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main_patch.o(i.Main_AppInit_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Main_AppInit_patch &rArr; BleAppInit
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_patch.o(.ARM.__at_0x00420000)
</UL>
<P><STRONG><a name="[1f9]"></a>BleAppFindInfo</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ble_client_app.o(i.BleAppFindInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BleAppFindInfo &rArr; BleAppShowAttrInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattFindAllCharDescriptor
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppShowAttrInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppMsgHandler
</UL>

<P><STRONG><a name="[208]"></a>BleAppMsgHandler</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, ble_client_app.o(i.BleAppMsgHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BleAppMsgHandler &rArr; BleAppFindInfo &rArr; BleAppShowAttrInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattFindAllPrimaryService
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapAdvertisingEnable
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmInit
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppFindInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppTaskHandler
</UL>

<P><STRONG><a name="[20c]"></a>BleAppSetAdvtisingPara</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, ble_client_app.o(i.BleAppSetAdvtisingPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BleAppSetAdvtisingPara
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSet
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapSetAdvParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleCmMsgHandler
</UL>

<P><STRONG><a name="[1fb]"></a>BleAppShowAttrInfo</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, ble_client_app.o(i.BleAppShowAttrInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BleAppShowAttrInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppFindInfo
</UL>

<P><STRONG><a name="[20f]"></a>BleAppSmMsgHandler</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, ble_client_app.o(i.BleAppSmMsgHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BleAppSmMsgHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpSecurityRsp
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppTaskHandler
</UL>

<P><STRONG><a name="[0]"></a>BleAppTaskHandler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ble_client_app.o(i.BleAppTaskHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BleAppTaskHandler &rArr; BleAppMsgHandler &rArr; BleAppFindInfo &rArr; BleAppShowAttrInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppGattMsgHandler
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleCmMsgHandler
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppSmMsgHandler
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppMsgHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_client_app.o(i.BleAppInit)
</UL>
<P><STRONG><a name="[211]"></a>BleCmMsgHandler</STRONG> (Thumb, 510 bytes, Stack size 32 bytes, ble_client_app.o(i.BleCmMsgHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BleCmMsgHandler &rArr; BleAppSetAdvtisingPara
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpSetDefaultConfig
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpInit
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSetScanRspData
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSendMessageAfter
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattInit
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapSetAdvData
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapDisconnectReq
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapConnUpdateResponse
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapConnParaRequestRsp
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppSetAdvtisingPara
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAppTaskHandler
</UL>

<P><STRONG><a name="[43]"></a>Boot_PreInitWarm_patch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sys_init_patch.o(i.Boot_PreInitWarm_patch))
<BR><BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_DbgUart_ParamInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_init_patch.o(i.SysInit_EntryPoint)
</UL>
<P><STRONG><a name="[30b]"></a>SysInit_UartInit</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, sys_init_patch.o(i.SysInit_UartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SysInit_UartInit &rArr; MwFim_FileRead &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_CheckWarmBoot
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileRead
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Uart_ConfigGet
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_DriverInit_patch
</UL>

<P><STRONG><a name="[42]"></a>__Test_ForSwPatch</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sys_init_patch.o(i.__Test_ForSwPatch))
<BR>[Address Reference Count : 1]<UL><LI> sys_init_patch.o(i.SysInit_EntryPoint)
</UL>
<P><STRONG><a name="[322]"></a>diag_internal_wait</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, diag_task_patch.o(i.diag_internal_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = diag_internal_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tick_PerMilliSec
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tick_MilliSecMax
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tick_Diff
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseDownloadCommand
</UL>

<P><STRONG><a name="[393]"></a>auto_connect_add_queue</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, controller_wifi_patch.o(i.auto_connect_add_queue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = auto_connect_add_queue
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_auto_connect_list
</UL>

<P><STRONG><a name="[392]"></a>wifi_sta_get_ac_idx</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, controller_wifi_patch.o(i.wifi_sta_get_ac_idx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wifi_sta_get_ac_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_sta_join_patch
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_auto_connect_list
</UL>

<P><STRONG><a name="[c9]"></a>wifi_sta_get_scan_idx_patch</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, controller_wifi_patch.o(i.wifi_sta_get_scan_idx_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wifi_sta_get_scan_idx_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> controller_wifi_patch.o(i.wifi_ctrl_patch_init)
</UL>
<P><STRONG><a name="[314]"></a>MwFim_FileDataDefaultFill</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, mw_fim.o(i.MwFim_FileDataDefaultFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = MwFim_FileDataDefaultFill &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWriteDo
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_Init
</UL>

<P><STRONG><a name="[317]"></a>MwFim_FileTableSearch</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, mw_fim.o(i.MwFim_FileTableSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MwFim_FileTableSearch
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileRead
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileDelete
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWriteDefault
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWriteDo
</UL>

<P><STRONG><a name="[315]"></a>MwFim_FileWriteDo</STRONG> (Thumb, 212 bytes, Stack size 80 bytes, mw_fim.o(i.MwFim_FileWriteDo))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_AddrProgram
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupSwap
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileTableSearch
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWrite
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWriteDefault
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileDataDefaultFill
</UL>

<P><STRONG><a name="[31b]"></a>MwFim_FreeOffsetVerify</STRONG> (Thumb, 90 bytes, Stack size 48 bytes, mw_fim.o(i.MwFim_FreeOffsetVerify))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MwFim_FreeOffsetVerify &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_AddrRead
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupBlockParser
</UL>

<P><STRONG><a name="[31c]"></a>MwFim_GroupBlockParser</STRONG> (Thumb, 358 bytes, Stack size 72 bytes, mw_fim.o(i.MwFim_GroupBlockParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MwFim_GroupBlockParser &rArr; MwFim_FreeOffsetVerify &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_AddrRead
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupHeaderVerify
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FreeOffsetVerify
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_Init
</UL>

<P><STRONG><a name="[31f]"></a>MwFim_GroupHeaderCheck</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, mw_fim.o(i.MwFim_GroupHeaderCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MwFim_GroupHeaderCheck &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_AddrRead
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupHeaderVerify
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_Init
</UL>

<P><STRONG><a name="[31e]"></a>MwFim_GroupHeaderVerify</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, mw_fim.o(i.MwFim_GroupHeaderVerify))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MwFim_GroupHeaderVerify
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupSwap
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupHeaderCheck
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupBlockParser
</UL>

<P><STRONG><a name="[321]"></a>MwFim_GroupSizeCheck</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, mw_fim.o(i.MwFim_GroupSizeCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MwFim_GroupSizeCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_Init
</UL>

<P><STRONG><a name="[320]"></a>MwFim_GroupStatusRemap</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, mw_fim.o(i.MwFim_GroupStatusRemap))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MwFim_GroupStatusRemap &rArr; Hal_Flash_AddrProgram
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_AddrProgram
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_Init
</UL>

<P><STRONG><a name="[318]"></a>MwFim_GroupSwap</STRONG> (Thumb, 470 bytes, Stack size 168 bytes, mw_fim.o(i.MwFim_GroupSwap))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_AddrRead
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_AddrProgram
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_GroupHeaderVerify
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileDelete
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWriteDo
</UL>

<P><STRONG><a name="[16]"></a>LeAppFreePeerGattDb</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ble_cmd_app.o(i.LeAppFreePeerGattDb))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeAppFreePeerGattDb
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePop
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueueCount
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppHandleCmDisconnectCompleteInd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app.o(i.LeCmdAppFuncAssign)
</UL>
<P><STRONG><a name="[15]"></a>LeAppGetPeerByHdl</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ble_cmd_app.o(i.LeAppGetPeerByHdl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeAppGetPeerByHdl
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSmpTaskHandler
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppHandleCmDisconnectCompleteInd
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppHandleCmConnUpdateCompleteInd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app.o(i.LeCmdAppFuncAssign)
</UL>
<P><STRONG><a name="[24c]"></a>LeAppGetPeerFree</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ble_cmd_app.o(i.LeAppGetPeerFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LeAppGetPeerFree
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppHandleCmConnectCompleteInd
</UL>

<P><STRONG><a name="[24d]"></a>LeAppHandleCmConnUpdateCompleteInd</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, ble_cmd_app.o(i.LeAppHandleCmConnUpdateCompleteInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LeAppHandleCmConnUpdateCompleteInd &rArr; LeAppGetPeerByHdl
</UL>
<BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppGetPeerByHdl
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
</UL>

<P><STRONG><a name="[24e]"></a>LeAppHandleCmConnectCompleteInd</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, ble_cmd_app.o(i.LeAppHandleCmConnectCompleteInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LeAppHandleCmConnectCompleteInd &rArr; LeAppGetPeerFree
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapDisconnectReq
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpGetBondIdFromAddr
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppGetPeerFree
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
</UL>

<P><STRONG><a name="[250]"></a>LeAppHandleCmDisconnectCompleteInd</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, ble_cmd_app.o(i.LeAppHandleCmDisconnectCompleteInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LeAppHandleCmDisconnectCompleteInd &rArr; LeAppFreePeerGattDb
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppGetPeerByHdl
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppFreePeerGattDb
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
</UL>

<P><STRONG><a name="[251]"></a>LeAppHandleCmExitAdvtiseCfm</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ble_cmd_app.o(i.LeAppHandleCmExitAdvtiseCfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeAppHandleCmExitAdvtiseCfm &rArr; LeHtcUtilSendCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilSendCmdRsp
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
</UL>

<P><STRONG><a name="[26b]"></a>LeCmdAppCmTaskHandler</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, ble_cmd_app.o(i.LeCmdAppCmTaskHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LeCmdAppCmTaskHandler &rArr; LeAppHandleCmDisconnectCompleteInd &rArr; LeAppFreePeerGattDb
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpSetDefaultConfig
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpInit
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSetScanRspData
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattInit
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapSetAdvData
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapConnUpdateResponse
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapConnParaRequestRsp
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilSendCmdRsp
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskOtherHandler
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppHandleCmExitAdvtiseCfm
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppHandleCmDisconnectCompleteInd
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppHandleCmConnectCompleteInd
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppHandleCmConnUpdateCompleteInd
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppGetPeerByHdl
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppTaskHandler
</UL>

<P><STRONG><a name="[26c]"></a>LeCmdAppCmTaskOtherHandler</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, ble_cmd_app.o(i.LeCmdAppCmTaskOtherHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeCmdAppCmTaskOtherHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
</UL>

<P><STRONG><a name="[288]"></a>LeCmdAppPrivateDataInit</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, ble_cmd_app.o(i.LeCmdAppPrivateDataInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LeCmdAppPrivateDataInit &rArr; LeCmdAppGattFuncAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSet
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGattFuncAssign
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppDbFuncAssign
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmdFuncAssign
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppFuncAssign
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppInit
</UL>

<P><STRONG><a name="[296]"></a>LeCmdAppSmpTaskHandler</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, ble_cmd_app.o(i.LeCmdAppSmpTaskHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LeCmdAppSmpTaskHandler &rArr; LeAppGetPeerByHdl
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpSecurityRsp
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpUserConfirmRsp
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpSecurityReq
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpGetBondIdFromAddr
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAppGetPeerByHdl
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppTaskHandler
</UL>

<P><STRONG><a name="[18]"></a>LeCmdAppTaskHandler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, ble_cmd_app.o(i.LeCmdAppTaskHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LeCmdAppTaskHandler &rArr; LeCmdAppGattTaskHandler &rArr; LeCmdAppHandleGattFindAllCharDescCfm &rArr; LeCmdAppBuildPeerGattTable
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGattTaskHandler
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSmpTaskHandler
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCmTaskHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app.o(i.LeCmdAppInit)
</UL>
<P><STRONG><a name="[28e]"></a>LeAppGetAtCmd</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, ble_cmd_app_cmd.o(i.LeAppGetAtCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LeAppGetAtCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessAtCmd
</UL>

<P><STRONG><a name="[258]"></a>LeCmdAppBuildAddrStr</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, ble_cmd_app_cmd.o(i.LeCmdAppBuildAddrStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LeCmdAppBuildAddrStr &rArr; LeHtcUtilOctetNumToHexStr
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilOctetNumToHexStr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvParam
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAddr
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppShowStateConnected
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendBleDisconnRsp
</UL>

<P><STRONG><a name="[25f]"></a>LeCmdAppBuildUuidStr</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, ble_cmd_app_cmd.o(i.LeCmdAppBuildUuidStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LeCmdAppBuildUuidStr &rArr; LeHtcUtilOctetNumToHexStr
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwapBuf
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilOctetNumToHexStr
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrv
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsChar
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendBleGattcPrimSrvRsp
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendBleGattcInclSrvRsp
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendBleGattcDescInfoRsp
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendBleGattcCharInfoRsp
</UL>

<P><STRONG><a name="[261]"></a>LeCmdAppCheckConnIdx</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, ble_cmd_app_cmd.o(i.LeCmdAppCheckConnIdx))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LeCmdAppCheckConnIdx &rArr; LeHtcUtilDecStrToNum
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsNtfy
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsInd
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcPrimSrv
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcInclSrv
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharRead
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcChar
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleDataLen
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleConnParam
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleCfgMtu
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[264]"></a>LeCmdAppCheckInitRole</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ble_cmd_app_cmd.o(i.LeCmdAppCheckInitRole))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeCmdAppCheckInitRole
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrvStop
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrvStart
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrv
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSetAttr
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsNtfy
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsInd
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsChar
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcPrimSrv
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcInclSrv
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharRead
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcChar
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[265]"></a>LeCmdAppCheckOurCharIdx</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, ble_cmd_app_cmd.o(i.LeCmdAppCheckOurCharIdx))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LeCmdAppCheckOurCharIdx &rArr; LeHtcUtilDecStrToNum
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSetAttr
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsNtfy
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsInd
</UL>

<P><STRONG><a name="[266]"></a>LeCmdAppCheckOurSrvIdx</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, ble_cmd_app_cmd.o(i.LeCmdAppCheckOurSrvIdx))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LeCmdAppCheckOurSrvIdx &rArr; LeHtcUtilDecStrToNum
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrvStop
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrvStart
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSetAttr
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsNtfy
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsInd
</UL>

<P><STRONG><a name="[267]"></a>LeCmdAppCheckPeerCharIdx</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ble_cmd_app_cmd.o(i.LeCmdAppCheckPeerCharIdx))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LeCmdAppCheckPeerCharIdx &rArr; LeHtcUtilDecStrToNum
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharRead
</UL>

<P><STRONG><a name="[268]"></a>LeCmdAppCheckPeerDescIdx</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ble_cmd_app_cmd.o(i.LeCmdAppCheckPeerDescIdx))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LeCmdAppCheckPeerDescIdx &rArr; LeHtcUtilDecStrToNum
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharRead
</UL>

<P><STRONG><a name="[2f0]"></a>LeCmdAppCheckPeerIsBusy</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ble_cmd_app_cmd.o(i.LeCmdAppCheckPeerIsBusy))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcPrimSrv
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcInclSrv
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharRead
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcChar
</UL>

<P><STRONG><a name="[269]"></a>LeCmdAppCheckPeerSrvIdx</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ble_cmd_app_cmd.o(i.LeCmdAppCheckPeerSrvIdx))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LeCmdAppCheckPeerSrvIdx &rArr; LeHtcUtilDecStrToNum
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcInclSrv
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharRead
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcChar
</UL>

<P><STRONG><a name="[13]"></a>LeCmdAppClearSendFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_cmd_app_cmd.o(i.LeCmdAppClearSendFlag))
<BR><BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_unlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
</UL>
<P><STRONG><a name="[270]"></a>LeCmdAppFindAttrByUuid</STRONG> (Thumb, 154 bytes, Stack size 56 bytes, ble_cmd_app_cmd.o(i.LeCmdAppFindAttrByUuid))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LeCmdAppFindAttrByUuid
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCmp
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleName
</UL>

<P><STRONG><a name="[27c]"></a>LeCmdAppGetAddrFromStr</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, ble_cmd_app_cmd.o(i.LeCmdAppGetAddrFromStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LeCmdAppGetAddrFromStr &rArr; LeHtcUtilStringToHexNum
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwapInPlace
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilStringToHexNum
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvParam
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAddr
</UL>

<P><STRONG><a name="[280]"></a>LeCmdAppHandleOccupyUart</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, ble_cmd_app_cmd.o(i.LeCmdAppHandleOccupyUart))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = LeCmdAppHandleOccupyUart &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattWriteNoRsp
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattWriteLongCharVal
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattWriteCharVal
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCharValNotify
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCharValIndicate
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattChangeAttrVal
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseLeCmdTestCommand
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessCliCmd
</UL>

<P><STRONG><a name="[289]"></a>LeCmdAppOccupyUartStart</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ble_cmd_app_cmd.o(i.LeCmdAppOccupyUartStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LeCmdAppOccupyUartStart &rArr; data_process_lock
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_process_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSetAttr
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsNtfy
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsInd
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
</UL>

<P><STRONG><a name="[a]"></a>LeCmdAppSendAtCmdAck</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, ble_cmd_app_cmd.o(i.LeCmdAppSendAtCmdAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilCmdToUper
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleOccupyUart
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleName
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleInit
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrvStop
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrvStart
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrv
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSetAttr
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsNtfy
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsInd
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsChar
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcPrimSrv
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcInclSrv
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharRead
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcChar
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleDebugSwitch
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleDataLen
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleConnParam
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleChangeController
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleCfgMtu
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvStart
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvParam
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAddr
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
</UL>
<P><STRONG><a name="[9]"></a>LeCmdAppSendAtCmdRsp</STRONG> (Thumb, 36 bytes, Stack size 280 bytes, ble_cmd_app_cmd.o(i.LeCmdAppSendAtCmdRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleName
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleInit
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrv
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsChar
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleConnParam
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleCfgMtu
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvParam
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAddr
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppShowStateConnected
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendBleGattcPrimSrvRsp
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendBleGattcNoPrimSrvRsp
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendBleGattcInclSrvRsp
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendBleGattcDescInfoRsp
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendBleGattcCharReadRsp
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendBleGattcCharInfoRsp
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendBleDisconnRsp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
</UL>
<P><STRONG><a name="[b]"></a>LeCmdAppSendBleDisconnRsp</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, ble_cmd_app_cmd.o(i.LeCmdAppSendBleDisconnRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = LeCmdAppSendBleDisconnRsp &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildAddrStr
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
</UL>
<P><STRONG><a name="[10]"></a>LeCmdAppSendBleGattcCharInfoRsp</STRONG> (Thumb, 44 bytes, Stack size 64 bytes, ble_cmd_app_cmd.o(i.LeCmdAppSendBleGattcCharInfoRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = LeCmdAppSendBleGattcCharInfoRsp &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildUuidStr
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
</UL>
<P><STRONG><a name="[12]"></a>LeCmdAppSendBleGattcCharReadRsp</STRONG> (Thumb, 142 bytes, Stack size 288 bytes, ble_cmd_app_cmd.o(i.LeCmdAppSendBleGattcCharReadRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = LeCmdAppSendBleGattcCharReadRsp &rArr; LeCmdAppSendToUart
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilOctetNumToHexStr
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendToUart
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
</UL>
<P><STRONG><a name="[11]"></a>LeCmdAppSendBleGattcDescInfoRsp</STRONG> (Thumb, 44 bytes, Stack size 64 bytes, ble_cmd_app_cmd.o(i.LeCmdAppSendBleGattcDescInfoRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = LeCmdAppSendBleGattcDescInfoRsp &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildUuidStr
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
</UL>
<P><STRONG><a name="[f]"></a>LeCmdAppSendBleGattcInclSrvRsp</STRONG> (Thumb, 80 bytes, Stack size 112 bytes, ble_cmd_app_cmd.o(i.LeCmdAppSendBleGattcInclSrvRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = LeCmdAppSendBleGattcInclSrvRsp &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildUuidStr
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
</UL>
<P><STRONG><a name="[e]"></a>LeCmdAppSendBleGattcNoPrimSrvRsp</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ble_cmd_app_cmd.o(i.LeCmdAppSendBleGattcNoPrimSrvRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LeCmdAppSendBleGattcNoPrimSrvRsp &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
</UL>
<P><STRONG><a name="[d]"></a>LeCmdAppSendBleGattcPrimSrvRsp</STRONG> (Thumb, 40 bytes, Stack size 64 bytes, ble_cmd_app_cmd.o(i.LeCmdAppSendBleGattcPrimSrvRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = LeCmdAppSendBleGattcPrimSrvRsp &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildUuidStr
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
</UL>
<P><STRONG><a name="[295]"></a>LeCmdAppSendToUart</STRONG> (Thumb, 36 bytes, Stack size 280 bytes, ble_cmd_app_cmd.o(i.LeCmdAppSendToUart))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = LeCmdAppSendToUart
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSetAttr
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsNtfy
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsInd
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendBleGattcCharReadRsp
</UL>

<P><STRONG><a name="[c]"></a>LeCmdAppShowStateConnected</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, ble_cmd_app_cmd.o(i.LeCmdAppShowStateConnected))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = LeCmdAppShowStateConnected &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildAddrStr
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app_cmd.o(i.LeCmdAppCmdFuncAssign)
</UL>
<P><STRONG><a name="[292]"></a>LeHostPerformCmd</STRONG> (Thumb, 882 bytes, Stack size 112 bytes, ble_cmd_app_cmd.o(i.LeHostPerformCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = LeHostPerformCmd &rArr; LeHostRunAtCmdBleGattsChar &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSetScanRspData
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapSetAdvData
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapDisconnectReq
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapAdvertisingEnable
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckInitRole
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckConnIdx
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilStringToHexNum
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleName
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleInit
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrvStop
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrvStart
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSrv
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSetAttr
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsNtfy
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsInd
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsChar
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcPrimSrv
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcInclSrv
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharRead
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcChar
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleDebugSwitch
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleDataLen
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleConnParam
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleChangeController
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleCfgMtu
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvStart
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvParam
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAddr
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok_r
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessCliCmd
</UL>

<P><STRONG><a name="[2d5]"></a>LeHostRunAtCmdBleAddr</STRONG> (Thumb, 168 bytes, Stack size 56 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = LeHostRunAtCmdBleAddr &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGetAddrFromStr
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildAddrStr
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilStrToDecNum
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapGetBdAddr
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2d7]"></a>LeHostRunAtCmdBleAdvParam</STRONG> (Thumb, 460 bytes, Stack size 72 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleAdvParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = LeHostRunAtCmdBleAdvParam &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGetAddrFromStr
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildAddrStr
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2d8]"></a>LeHostRunAtCmdBleAdvStart</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleAdvStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = LeHostRunAtCmdBleAdvStart &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapSetAdvParameter
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapAdvertisingEnable
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapSetRandAddr
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapClearWhiteList
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapAddToWhiteList
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsEqualVal
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2db]"></a>LeHostRunAtCmdBleCfgMtu</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleCfgMtu))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = LeHostRunAtCmdBleCfgMtu &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattExchangeMtuReq
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckConnIdx
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2d3]"></a>LeHostRunAtCmdBleChangeController</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleChangeController))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = LeHostRunAtCmdBleChangeController &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2d9]"></a>LeHostRunAtCmdBleConnParam</STRONG> (Thumb, 286 bytes, Stack size 40 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleConnParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = LeHostRunAtCmdBleConnParam &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckConnIdx
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapConnUpdateReq
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2da]"></a>LeHostRunAtCmdBleDataLen</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleDataLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = LeHostRunAtCmdBleDataLen &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapSetDataChannelPduLen
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckConnIdx
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2e8]"></a>LeHostRunAtCmdBleDebugSwitch</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleDebugSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = LeHostRunAtCmdBleDebugSwitch &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwapBuf
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilStringToHexNum
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2e5]"></a>LeHostRunAtCmdBleGattcChar</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleGattcChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = LeHostRunAtCmdBleGattcChar &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattFindAllCharacteristic
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerSrvIdx
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerIsBusy
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckInitRole
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckConnIdx
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2e6]"></a>LeHostRunAtCmdBleGattcCharRead</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleGattcCharRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = LeHostRunAtCmdBleGattcCharRead &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattReadLongCharVal
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerSrvIdx
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerIsBusy
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerDescIdx
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerCharIdx
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckInitRole
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckConnIdx
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2e7]"></a>LeHostRunAtCmdBleGattcCharWrite</STRONG> (Thumb, 296 bytes, Stack size 48 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleGattcCharWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LeHostRunAtCmdBleGattcCharWrite &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattWriteCharVal
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerSrvIdx
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerIsBusy
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerDescIdx
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerCharIdx
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckInitRole
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckConnIdx
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendToUart
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppOccupyUartStart
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2e4]"></a>LeHostRunAtCmdBleGattcInclSrv</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleGattcInclSrv))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = LeHostRunAtCmdBleGattcInclSrv &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattFindIncludedService
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerSrvIdx
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerIsBusy
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckInitRole
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckConnIdx
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2e3]"></a>LeHostRunAtCmdBleGattcPrimSrv</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleGattcPrimSrv))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = LeHostRunAtCmdBleGattcPrimSrv &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattFindAllCharDescriptor
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerIsBusy
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckInitRole
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckConnIdx
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2df]"></a>LeHostRunAtCmdBleGattsChar</STRONG> (Thumb, 228 bytes, Stack size 96 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleGattsChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = LeHostRunAtCmdBleGattsChar &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckInitRole
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildUuidStr
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2e1]"></a>LeHostRunAtCmdBleGattsInd</STRONG> (Thumb, 292 bytes, Stack size 48 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleGattsInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LeHostRunAtCmdBleGattsInd &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCharValIndicate
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckOurSrvIdx
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckOurCharIdx
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckInitRole
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckConnIdx
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendToUart
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppOccupyUartStart
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2e0]"></a>LeHostRunAtCmdBleGattsNtfy</STRONG> (Thumb, 290 bytes, Stack size 48 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleGattsNtfy))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LeHostRunAtCmdBleGattsNtfy &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattCharValNotify
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckOurSrvIdx
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckOurCharIdx
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckInitRole
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckConnIdx
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendToUart
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppOccupyUartStart
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2e2]"></a>LeHostRunAtCmdBleGattsSetAttr</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleGattsSetAttr))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = LeHostRunAtCmdBleGattsSetAttr &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattChangeAttrVal
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckOurSrvIdx
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckOurCharIdx
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckInitRole
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilDecStrToNum
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendToUart
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppOccupyUartStart
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2de]"></a>LeHostRunAtCmdBleGattsSrv</STRONG> (Thumb, 136 bytes, Stack size 72 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleGattsSrv))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = LeHostRunAtCmdBleGattsSrv &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckInitRole
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildUuidStr
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2dc]"></a>LeHostRunAtCmdBleGattsSrvStart</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleGattsSrvStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = LeHostRunAtCmdBleGattsSrvStart &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckOurSrvIdx
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckInitRole
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2dd]"></a>LeHostRunAtCmdBleGattsSrvStop</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleGattsSrvStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = LeHostRunAtCmdBleGattsSrvStop &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckOurSrvIdx
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckInitRole
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2d4]"></a>LeHostRunAtCmdBleInit</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = LeHostRunAtCmdBleInit &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppInit
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHtcUtilStrToDecNum
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[2d6]"></a>LeHostRunAtCmdBleName</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, ble_cmd_app_cmd.o(i.LeHostRunAtCmdBleName))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = LeHostRunAtCmdBleName &rArr; LeCmdAppSendAtCmdAck &rArr; LeCmdAppSendAtCmdRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattChangeAttrVal
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrLen
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppFindAttrByUuid
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdRsp
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostPerformCmd
</UL>

<P><STRONG><a name="[28d]"></a>LeHtcUtilCmdToLower</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ble_cmd_app_cmd.o(i.LeHtcUtilCmdToLower))
<BR><BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessAtCmd
</UL>

<P><STRONG><a name="[28f]"></a>LeHtcUtilCmdToUper</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ble_cmd_app_cmd.o(i.LeHtcUtilCmdToUper))
<BR><BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppProcessAtCmd
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppSendAtCmdAck
</UL>

<P><STRONG><a name="[263]"></a>LeHtcUtilDecStrToNum</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, ble_cmd_app_cmd.o(i.LeHtcUtilDecStrToNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LeHtcUtilDecStrToNum
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerSrvIdx
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerDescIdx
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckPeerCharIdx
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckOurSrvIdx
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckOurCharIdx
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppCheckConnIdx
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsSetAttr
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsNtfy
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattsInd
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleGattcCharWrite
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleDataLen
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleConnParam
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleChangeController
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleCfgMtu
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostRunAtCmdBleAdvParam
</UL>

<P><STRONG><a name="[2a8]"></a>LeGattDbBuildAttr</STRONG> (Thumb, 456 bytes, Stack size 72 bytes, ble_cmd_app_db.o(i.LeGattDbBuildAttr))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LeGattDbBuildAttr &rArr; LeGattDbCheckAttr &rArr; LeGattDbClear
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeUtilAlignment
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbCheckPermit
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbCheckAttr
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildServiceDb
</UL>

<P><STRONG><a name="[2ab]"></a>LeGattDbBuildHeader</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, ble_cmd_app_db.o(i.LeGattDbBuildHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LeGattDbBuildHeader &rArr; LeGattDbCheckItem &rArr; LeGattDbClear
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeReadFromFlash
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbClear
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbCheckItem
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildServiceDb
</UL>

<P><STRONG><a name="[2aa]"></a>LeGattDbCheckAttr</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, ble_cmd_app_db.o(i.LeGattDbCheckAttr))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LeGattDbCheckAttr &rArr; LeGattDbClear
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbClear
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbCheckAttrIsValid
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildAttr
</UL>

<P><STRONG><a name="[2b1]"></a>LeGattDbCheckAttrIsValid</STRONG> (Thumb, 168 bytes, Stack size 12 bytes, ble_cmd_app_db.o(i.LeGattDbCheckAttrIsValid))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LeGattDbCheckAttrIsValid
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbCheckAttr
</UL>

<P><STRONG><a name="[2ad]"></a>LeGattDbCheckItem</STRONG> (Thumb, 278 bytes, Stack size 64 bytes, ble_cmd_app_db.o(i.LeGattDbCheckItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LeGattDbCheckItem &rArr; LeGattDbClear
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeUtilAlignment
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbClear
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildHeader
</UL>

<P><STRONG><a name="[2a9]"></a>LeGattDbCheckPermit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ble_cmd_app_db.o(i.LeGattDbCheckPermit))
<BR><BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildAttr
</UL>

<P><STRONG><a name="[2ae]"></a>LeGattDbClear</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ble_cmd_app_db.o(i.LeGattDbClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LeGattDbClear
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildServiceDb
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbRegServiceDb
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbCheckItem
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbCheckAttr
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildHeader
</UL>

<P><STRONG><a name="[2af]"></a>LeGattDbFindIncludeService</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, ble_cmd_app_db.o(i.LeGattDbFindIncludeService))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LeGattDbFindIncludeService
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OctetsToDec16
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildServiceDb
</UL>

<P><STRONG><a name="[2b0]"></a>LeGattDbRegServiceDb</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, ble_cmd_app_db.o(i.LeGattDbRegServiceDb))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LeGattDbRegServiceDb &rArr; LeGattDbClear
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattRegisterService
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbClear
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildServiceDb
</UL>

<P><STRONG><a name="[2ac]"></a>LeReadFromFlash</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ble_cmd_app_db.o(i.LeReadFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LeReadFromFlash &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Flash_AddrRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildHeader
</UL>

<P><STRONG><a name="[14]"></a>LeUtilAlignment</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ble_cmd_app_db.o(i.LeUtilAlignment))
<BR><BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbCheckItem
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildAttr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app_db.o(i.LeCmdAppDbFuncAssign)
</UL>
<P><STRONG><a name="[1]"></a>LeAttHandleOtherOp_Patch</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, ble_att_common_patch.o(i.LeAttHandleOtherOp_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeAttHandleOtherOp_Patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_att_common_patch.o(i.LeAttCommonPatch_Init)
</UL>
<P><STRONG><a name="[4]"></a>LeCmAddPeerDev_Impl</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, ble_cm_conn_patch.o(i.LeCmAddPeerDev_Impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeCmAddPeerDev_Impl
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePush
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSet
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHciErrToHostErr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cm_conn_patch.o(i.LeCmConnPatch_Init)
</UL>
<P><STRONG><a name="[5]"></a>LeCmDeletePeerDev_Impl</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ble_cm_conn_patch.o(i.LeCmDeletePeerDev_Impl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeCmDeletePeerDev_Impl
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueueDelete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cm_conn_patch.o(i.LeCmConnPatch_Init)
</UL>
<P><STRONG><a name="[2]"></a>LeCmGetPeerCount_Impl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_cm_conn_patch.o(i.LeCmGetPeerCount_Impl))
<BR><BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueueCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cm_conn_patch.o(i.LeCmConnPatch_Init)
</UL>
<P><STRONG><a name="[3]"></a>LeCmPeerDevExist_Impl</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_cm_conn_patch.o(i.LeCmPeerDevExist_Impl))
<BR><BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LePeerDevExist
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cm_conn_patch.o(i.LeCmConnPatch_Init)
</UL>
<P><STRONG><a name="[8]"></a>LeCmHandleConnectionUpdateComplete_Patch</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, ble_cm_handler_patch.o(i.LeCmHandleConnectionUpdateComplete_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LeCmHandleConnectionUpdateComplete_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSendMessage
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHciErrToHostErr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cm_handler_patch.o(i.LeCmHandlerPatch_Init)
</UL>
<P><STRONG><a name="[256]"></a>LeCmHandleLeReadPhyRsp</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, ble_cm_handler_patch.o(i.LeCmHandleLeReadPhyRsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LeCmHandleLeReadPhyRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSendMessage
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHciErrToHostErr
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmHnadleHciExceptionCmdRsp_Patch
</UL>

<P><STRONG><a name="[6]"></a>LeCmHnadleHciExceptionCmdRsp_Patch</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, ble_cm_handler_patch.o(i.LeCmHnadleHciExceptionCmdRsp_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LeCmHnadleHciExceptionCmdRsp_Patch &rArr; LeCmHandleLeReadPhyRsp
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmHandleLeReadPhyRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cm_handler_patch.o(i.LeCmHandlerPatch_Init)
</UL>
<P><STRONG><a name="[7]"></a>LeCmHnadleHciExceptionEventInd_Patch</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, ble_cm_handler_patch.o(i.LeCmHnadleHciExceptionEventInd_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LeCmHnadleHciExceptionEventInd_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSendMessage
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHciErrToHostErr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cm_handler_patch.o(i.LeCmHandlerPatch_Init)
</UL>
<P><STRONG><a name="[1a]"></a>LeGapConnUpdateRequest_Patch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_gap_if_patch.o(i.LeGapConnUpdateRequest_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeGapConnUpdateRequest_Patch &rArr; LeGapConnUpdateReq
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGapConnUpdateReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gap_if_patch.o(i.LeGapIfPatch_Init)
</UL>
<P><STRONG><a name="[1b]"></a>LeGattHandleErrorRsp_Patch</STRONG> (Thumb, 340 bytes, Stack size 32 bytes, ble_gatt_client_patch.o(i.LeGattHandleErrorRsp_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LeGattHandleErrorRsp_Patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_client_patch.o(i.LeGattClientPatch_Init)
</UL>
<P><STRONG><a name="[1c]"></a>LeGattFindStartService_Patch</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ble_gatt_common_patch.o(i.LeGattFindStartService_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LeGattFindStartService_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePeekAny
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_common_patch.o(i.LeGattCommonPatch_Init)
</UL>
<P><STRONG><a name="[20]"></a>LeGattAccessReadRsp_Patch</STRONG> (Thumb, 464 bytes, Stack size 40 bytes, ble_gatt_patch.o(i.LeGattAccessReadRsp_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LeGattAccessReadRsp_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttSendErrorRsp
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttReadRsp
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttReadByTypeRsp
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttReadBlobRsp
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dec16ToOctets
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufToOctets
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_patch.o(i.LeGattPatch_Init)
</UL>
<P><STRONG><a name="[1f]"></a>LeGattAccessWriteRsp_Patch</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, ble_gatt_patch.o(i.LeGattAccessWriteRsp_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LeGattAccessWriteRsp_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueueBroken
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttWriteRsp
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttSendErrorRsp
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttPrepareWriteRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_patch.o(i.LeGattPatch_Init)
</UL>
<P><STRONG><a name="[2a4]"></a>LeGattBuildSvcTbl</STRONG> (Thumb, 388 bytes, Stack size 56 bytes, ble_gatt_patch.o(i.LeGattBuildSvcTbl), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeUtilAlign
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattRegService
</UL>

<P><STRONG><a name="[21]"></a>LeGattModifyAttrVal_Patch</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, ble_gatt_patch.o(i.LeGattModifyAttrVal_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeGattModifyAttrVal_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_patch.o(i.LeGattPatch_Init)
</UL>
<P><STRONG><a name="[1e]"></a>LeGattPrepareWriteCharValReliable_Patch</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, ble_gatt_patch.o(i.LeGattPrepareWriteCharValReliable_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LeGattPrepareWriteCharValReliable_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttPrepareWriteReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_patch.o(i.LeGattPatch_Init)
</UL>
<P><STRONG><a name="[1d]"></a>LeGattWriteLongCharVal_Patch</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, ble_gatt_patch.o(i.LeGattWriteLongCharVal_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LeGattWriteLongCharVal_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttPrepareWriteReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_patch.o(i.LeGattPatch_Init)
</UL>
<P><STRONG><a name="[26]"></a>LeGattProcedureFindAllCharDescriptor_Patch</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, ble_gatt_procedure_patch.o(i.LeGattProcedureFindAllCharDescriptor_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LeGattProcedureFindAllCharDescriptor_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttFindInfoReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init)
</UL>
<P><STRONG><a name="[22]"></a>LeGattProcedureFindAllPrimaryService_Patch</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, ble_gatt_procedure_patch.o(i.LeGattProcedureFindAllPrimaryService_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LeGattProcedureFindAllPrimaryService_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttReadByGroupTypeReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init)
</UL>
<P><STRONG><a name="[25]"></a>LeGattProcedureFindCharacteristic_Patch</STRONG> (Thumb, 242 bytes, Stack size 56 bytes, ble_gatt_procedure_patch.o(i.LeGattProcedureFindCharacteristic_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LeGattProcedureFindCharacteristic_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCmp
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttReadByTypeReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init)
</UL>
<P><STRONG><a name="[24]"></a>LeGattProcedureFindIncludedService_Patch</STRONG> (Thumb, 426 bytes, Stack size 56 bytes, ble_gatt_procedure_patch.o(i.LeGattProcedureFindIncludedService_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LeGattProcedureFindIncludedService_Patch &rArr; LeGattSendIncludeServiceInfoInd
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttReadReq
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttReadByTypeReq
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattSendIncludeServiceInfoInd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init)
</UL>
<P><STRONG><a name="[23]"></a>LeGattProcedureFindPrimaryServiceByUuid_Patch</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, ble_gatt_procedure_patch.o(i.LeGattProcedureFindPrimaryServiceByUuid_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LeGattProcedureFindPrimaryServiceByUuid_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttFindByTypeValReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init)
</UL>
<P><STRONG><a name="[28]"></a>LeGattProcedurePrepareWriteCharValReliable_Patch</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, ble_gatt_procedure_patch.o(i.LeGattProcedurePrepareWriteCharValReliable_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LeGattProcedurePrepareWriteCharValReliable_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCmp
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttPrepareWriteReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init)
</UL>
<P><STRONG><a name="[27]"></a>LeGattProcedureReadCharValByUuid_Patch</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, ble_gatt_procedure_patch.o(i.LeGattProcedureReadCharValByUuid_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LeGattProcedureReadCharValByUuid_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttReadByTypeReq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_procedure_patch.o(i.LeGattProcedurePatch_Init)
</UL>
<P><STRONG><a name="[2b9]"></a>LeGattSendIncludeServiceInfoInd</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, ble_gatt_procedure_patch.o(i.LeGattSendIncludeServiceInfoInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LeGattSendIncludeServiceInfoInd
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattProcedureFindIncludedService_Patch
</UL>

<P><STRONG><a name="[29]"></a>LeGattBuildReadMultiReq_Patch</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, ble_gatt_server_patch.o(i.LeGattBuildReadMultiReq_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LeGattBuildReadMultiReq_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttSendErrorRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_server_patch.o(i.LeGattServerPatchInit)
</UL>
<P><STRONG><a name="[30]"></a>LeGattCheckPrepareData_Patch</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ble_gatt_server_patch.o(i.LeGattCheckPrepareData_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LeGattCheckPrepareData_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePop
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueueBroken
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttSendErrorRsp
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttExecuteWriteRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_server_patch.o(i.LeGattServerPatchInit)
</UL>
<P><STRONG><a name="[2a]"></a>LeGattCheckReadByTypeAction_Patch</STRONG> (Thumb, 588 bytes, Stack size 56 bytes, ble_gatt_server_patch.o(i.LeGattCheckReadByTypeAction_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LeGattCheckReadByTypeAction_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePeekAny
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttSendErrorRsp
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttReadByTypeRsp
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dec16ToOctets
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BufToOctets
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_server_patch.o(i.LeGattServerPatchInit)
</UL>
<P><STRONG><a name="[2f]"></a>LeGattHandlePrepareWriteReq_Patch</STRONG> (Thumb, 234 bytes, Stack size 56 bytes, ble_gatt_server_patch.o(i.LeGattHandlePrepareWriteReq_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LeGattHandlePrepareWriteReq_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttSendErrorRsp
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttPrepareWriteRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_server_patch.o(i.LeGattServerPatchInit)
</UL>
<P><STRONG><a name="[2d]"></a>LeGattHandleReadBlobReq_Patch</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, ble_gatt_server_patch.o(i.LeGattHandleReadBlobReq_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LeGattHandleReadBlobReq_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttSendErrorRsp
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttReadBlobRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_server_patch.o(i.LeGattServerPatchInit)
</UL>
<P><STRONG><a name="[2b]"></a>LeGattHandleReadByTypeReq_Patch</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, ble_gatt_server_patch.o(i.LeGattHandleReadByTypeReq_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LeGattHandleReadByTypeReq_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_server_patch.o(i.LeGattServerPatchInit)
</UL>
<P><STRONG><a name="[2c]"></a>LeGattHandleReadReq_Patch</STRONG> (Thumb, 238 bytes, Stack size 56 bytes, ble_gatt_server_patch.o(i.LeGattHandleReadReq_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LeGattHandleReadReq_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttSendErrorRsp
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttReadRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_server_patch.o(i.LeGattServerPatchInit)
</UL>
<P><STRONG><a name="[2e]"></a>LeGattHandleWriteReq_Patch</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, ble_gatt_server_patch.o(i.LeGattHandleWriteReq_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LeGattHandleWriteReq_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttWriteRsp
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeAttSendErrorRsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_gatt_server_patch.o(i.LeGattServerPatchInit)
</UL>
<P><STRONG><a name="[31]"></a>LeHciLeSetEventMask_Patch</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ble_hci_cmd_handler_patch.o(i.LeHciLeSetEventMask_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LeHciLeSetEventMask_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_hci_cmd_handler_patch.o(i.LeHciCmdHandler_Init)
</UL>
<P><STRONG><a name="[33]"></a>LeHostPreInit_Patch</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_rtos_task_patch.o(i.LeHostPreInit_Patch))
<BR>[Address Reference Count : 1]<UL><LI> ble_rtos_task_patch.o(i.LeRtosTaskPatch_Init)
</UL>
<P><STRONG><a name="[34]"></a>LeSmpConfigInit_Patch</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, ble_smp_common_patch.o(i.LeSmpConfigInit_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = LeSmpConfigInit_Patch &rArr; LeSmpNvmStoreInit &rArr; LeNvmStoreWrite &rArr; LeHostStoreWrite &rArr; LeNvmStoreWriteToMwFim &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostEnterPanic
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeSmpNvmStoreInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_smp_common_patch.o(i.LeSmpCommonPatch_Init)
</UL>
<P><STRONG><a name="[36]"></a>LeSmpGetPublicKey_Patch</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ble_smp_secure_conn_patch.o(i.LeSmpGetPublicKey_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeSmpGetPublicKey_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init)
</UL>
<P><STRONG><a name="[3b]"></a>LeSmpHandlePairingPublicKey_Patch</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, ble_smp_secure_conn_patch.o(i.LeSmpHandlePairingPublicKey_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeSmpHandlePairingPublicKey_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init)
</UL>
<P><STRONG><a name="[39]"></a>LeSmpHandleScPairRandom_Patch</STRONG> (Thumb, 496 bytes, Stack size 88 bytes, ble_smp_secure_conn_patch.o(i.LeSmpHandleScPairRandom_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LeSmpHandleScPairRandom_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSet
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init)
</UL>
<P><STRONG><a name="[37]"></a>LeSmpScConfirmExecute_Patch</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, ble_smp_secure_conn_patch.o(i.LeSmpScConfirmExecute_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LeSmpScConfirmExecute_Patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init)
</UL>
<P><STRONG><a name="[35]"></a>LeSmpScEnsureKeysGenerated_Patch</STRONG> (Thumb, 86 bytes, Stack size 104 bytes, ble_smp_secure_conn_patch.o(i.LeSmpScEnsureKeysGenerated_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = LeSmpScEnsureKeysGenerated_Patch &rArr; LeNvmStoreWrite &rArr; LeHostStoreWrite &rArr; LeNvmStoreWriteToMwFim &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreWrite
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreRead
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init)
</UL>
<P><STRONG><a name="[38]"></a>LeSmpScGenNumcmp_Patch</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ble_smp_secure_conn_patch.o(i.LeSmpScGenNumcmp_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LeSmpScGenNumcmp_Patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init)
</UL>
<P><STRONG><a name="[3a]"></a>LeSmpScPublicKeyExecute_Patch</STRONG> (Thumb, 204 bytes, Stack size 96 bytes, ble_smp_secure_conn_patch.o(i.LeSmpScPublicKeyExecute_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LeSmpScPublicKeyExecute_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_smp_secure_conn_patch.o(i.LeSmpSecureConnPatch_Init)
</UL>
<P><STRONG><a name="[3d]"></a>LeSmpRemoveBondInfo_Patch</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, ble_smp_store_patch.o(i.LeSmpRemoveBondInfo_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = LeSmpRemoveBondInfo_Patch &rArr; LeNvmStoreWrite &rArr; LeHostStoreWrite &rArr; LeNvmStoreWriteToMwFim &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_smp_store_patch.o(i.LeSmpStorePatch_Init)
</UL>
<P><STRONG><a name="[3c]"></a>LeSmpUpdateBondinfo_Patch</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, ble_smp_store_patch.o(i.LeSmpUpdateBondinfo_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = LeSmpUpdateBondinfo_Patch &rArr; LeNvmStoreWrite &rArr; LeHostStoreWrite &rArr; LeNvmStoreWriteToMwFim &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_smp_store_patch.o(i.LeSmpStorePatch_Init)
</UL>
<P><STRONG><a name="[3e]"></a>LeSmpUtilEncrypt_Patch</STRONG> (Thumb, 74 bytes, Stack size 72 bytes, ble_smp_util_patch.o(i.LeSmpUtilEncrypt_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LeSmpUtilEncrypt_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwapBuf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_smp_util_patch.o(i.LeSmpUtilPatch_Init)
</UL>
<P><STRONG><a name="[3f]"></a>LeSmpUtilGenDhkey_Patch</STRONG> (Thumb, 150 bytes, Stack size 120 bytes, ble_smp_util_patch.o(i.LeSmpUtilGenDhkey_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LeSmpUtilGenDhkey_Patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecdh_shared_secret
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_valid_public_key
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_smp_util_patch.o(i.LeSmpUtilPatch_Init)
</UL>
<P><STRONG><a name="[40]"></a>LeSmpUtilGetErIr_Patch</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, ble_smp_util_patch.o(i.LeSmpUtilGetErIr_Patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = LeSmpUtilGetErIr_Patch &rArr; LeNvmStoreWrite &rArr; LeHostStoreWrite &rArr; LeNvmStoreWriteToMwFim &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreWrite
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeNvmStoreRead
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_smp_util_patch.o(i.LeSmpUtilPatch_Init)
</UL>
<P><STRONG><a name="[3ce]"></a>ccmp_aad_nonce_patch_v1</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, ccmp_patch.o(i.ccmp_aad_nonce_patch_v1))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ccmp_aad_nonce_patch_v1
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccmp_encrypt_impl_v1
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccmp_decrypt_impl_v1
</UL>

<P><STRONG><a name="[41e]"></a>RotR1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tkip_patch.o(i.RotR1))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_mixing_phase2
</UL>

<P><STRONG><a name="[3f3]"></a>WPA_GET_LE32</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tkip_patch.o(i.WPA_GET_LE32))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_decrypt_patch
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;michael_mic
</UL>

<P><STRONG><a name="[41f]"></a>WPA_PUT_LE16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tkip_patch.o(i.WPA_PUT_LE16))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_mixing_phase2
</UL>

<P><STRONG><a name="[3f4]"></a>WPA_PUT_LE32</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tkip_patch.o(i.WPA_PUT_LE32))
<BR><BR>[Called By]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;michael_mic
</UL>

<P><STRONG><a name="[41d]"></a>_S_</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tkip_patch.o(i._S_))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_mixing_phase2
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_mixing_phase1
</UL>

<P><STRONG><a name="[3f2]"></a>michael_mic</STRONG> (Thumb, 354 bytes, Stack size 32 bytes, tkip_patch.o(i.michael_mic))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = michael_mic
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WPA_PUT_LE32
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WPA_GET_LE32
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_mic_check_patch
</UL>

<P><STRONG><a name="[41c]"></a>michael_mic_hdr</STRONG> (Thumb, 136 bytes, Stack size 12 bytes, tkip_patch.o(i.michael_mic_hdr))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = michael_mic_hdr
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_mic_check_patch
</UL>

<P><STRONG><a name="[418]"></a>tkip_mixing_phase1</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, tkip_patch.o(i.tkip_mixing_phase1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tkip_mixing_phase1
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_S_
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_decrypt_patch
</UL>

<P><STRONG><a name="[419]"></a>tkip_mixing_phase2</STRONG> (Thumb, 282 bytes, Stack size 48 bytes, tkip_patch.o(i.tkip_mixing_phase2))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tkip_mixing_phase2
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_S_
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WPA_PUT_LE16
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RotR1
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tkip_decrypt_patch
</UL>

<P><STRONG><a name="[223]"></a>Cmd_TokenParse</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, at_cmd_sys_patch.o(i.Cmd_TokenParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Cmd_TokenParse
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_dbg_uart_ctrl
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_internal_uart_config_parse
</UL>

<P><STRONG><a name="[34c]"></a>_at_cmd_sys_internal_uart_config_output</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_internal_uart_config_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _at_cmd_sys_internal_uart_config_output
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_uartdef
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_uartcur
</UL>

<P><STRONG><a name="[348]"></a>_at_cmd_sys_internal_uart_config_parse</STRONG> (Thumb, 192 bytes, Stack size 88 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_internal_uart_config_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _at_cmd_sys_internal_uart_config_parse &rArr; Cmd_TokenParse
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_TokenParse
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_uartdef
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_uartcur
</UL>

<P><STRONG><a name="[347]"></a>_at_cmd_sys_internal_wait</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, at_cmd_sys_patch.o(i._at_cmd_sys_internal_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _at_cmd_sys_internal_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tick_PerMilliSec
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tick_MilliSecMax
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Tick_Diff
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_rst
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_restore
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_download
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_uartdef
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_sys_uartcur
</UL>

<P><STRONG><a name="[357]"></a>at_resolve_dns</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, at_cmd_tcpip_patch.o(i.at_resolve_dns))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = at_resolve_dns
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_gethostbyname
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_udp_client
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;at_create_tcp_client
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_at_cmd_tcpip_cipdomain
</UL>

<P><STRONG><a name="[7a]"></a>ip_reass_chain_frag_into_datagram_and_validate_patch</STRONG> (Thumb, 408 bytes, Stack size 40 bytes, ip4_frag_patch.o(i.ip_reass_chain_frag_into_datagram_and_validate_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ip_reass_chain_frag_into_datagram_and_validate_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_loop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ip4_frag_patch.o(i.lwip_load_interface_ip4_frag_patch)
</UL>
<P><STRONG><a name="[7c]"></a>ip_ready_callback_patch</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, lwip_helper_patch.o(i.ip_ready_callback_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ip_ready_callback_patch &rArr; wifi_event_loop_send
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip6addr_ntoa_r
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_ntoa_r
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_event_loop_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lwip_helper_patch.o(i.lwip_load_interface_lwip_helper_patch)
</UL>
<P><STRONG><a name="[228]"></a>Hal_Aux_Pinmux</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, hal_auxadc_cmd.o(i.Hal_Aux_Pinmux))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Hal_Aux_Pinmux
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Aux_CmdParse
</UL>

<P><STRONG><a name="[249]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_wdt_patch.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Wdt_Init_patch
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Wdt_InitForInt_patch
</UL>

<P><STRONG><a name="[24b]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_wdt_patch.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Wdt_Init_patch
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Wdt_InitForInt_patch
</UL>

<P><STRONG><a name="[24a]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hal_wdt_patch.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Wdt_Init_patch
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hal_Wdt_InitForInt_patch
</UL>

<P><STRONG><a name="[3d9]"></a>debug_auto_connect</STRONG> (Thumb, 216 bytes, Stack size 488 bytes, wpa_cli_patch.o(i.debug_auto_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = debug_auto_connect &rArr; get_auto_connect_info
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_mode
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_info
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_ap_num
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_auto_connect_ap_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wpa_cli_conn_mode
</UL>

<P><STRONG><a name="[17]"></a>LeCmdAppBuildGattTable</STRONG> (Thumb, 310 bytes, Stack size 40 bytes, ble_cmd_app_gatt.o(i.LeCmdAppBuildGattTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = LeCmdAppBuildGattTable &rArr; LeGattDbBuildServiceDb &rArr; LeGattDbBuildAttr &rArr; LeGattDbCheckAttr &rArr; LeGattDbClear
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbGetServiceId
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattDbBuildServiceDb
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGetChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_cmd_app_gatt.o(i.LeCmdAppGattFuncAssign)
</UL>
<P><STRONG><a name="[25e]"></a>LeCmdAppBuildPeerGattTable</STRONG> (Thumb, 430 bytes, Stack size 48 bytes, ble_cmd_app_gatt.o(i.LeCmdAppBuildPeerGattTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LeCmdAppBuildPeerGattTable
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSet
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppHandleGattFindAllCharDescCfm
</UL>

<P><STRONG><a name="[25d]"></a>LeCmdAppGetChar</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, ble_cmd_app_gatt.o(i.LeCmdAppGetChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LeCmdAppGetChar
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCmp
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildGattTable
</UL>

<P><STRONG><a name="[275]"></a>LeCmdAppHandleGattCharDescInfoInd</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, ble_cmd_app_gatt.o(i.LeCmdAppHandleGattCharDescInfoInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeCmdAppHandleGattCharDescInfoInd
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePush
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGattTaskHandler
</UL>

<P><STRONG><a name="[279]"></a>LeCmdAppHandleGattCharInfoInd</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, ble_cmd_app_gatt.o(i.LeCmdAppHandleGattCharInfoInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LeCmdAppHandleGattCharInfoInd
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGattTaskHandler
</UL>

<P><STRONG><a name="[27a]"></a>LeCmdAppHandleGattCharValInd</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, ble_cmd_app_gatt.o(i.LeCmdAppHandleGattCharValInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeCmdAppHandleGattCharValInd
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGattTaskHandler
</UL>

<P><STRONG><a name="[276]"></a>LeCmdAppHandleGattFindAllCharDescCfm</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, ble_cmd_app_gatt.o(i.LeCmdAppHandleGattFindAllCharDescCfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LeCmdAppHandleGattFindAllCharDescCfm &rArr; LeCmdAppBuildPeerGattTable
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePush
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueuePop
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeQueueCount
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattFindAllPrimaryService
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppBuildPeerGattTable
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGattTaskHandler
</UL>

<P><STRONG><a name="[274]"></a>LeCmdAppHandleGattFindAllPrimaryServiceCfm</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, ble_cmd_app_gatt.o(i.LeCmdAppHandleGattFindAllPrimaryServiceCfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeCmdAppHandleGattFindAllPrimaryServiceCfm
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeGattFindIncludedService
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGattTaskHandler
</UL>

<P><STRONG><a name="[278]"></a>LeCmdAppHandleGattInclServiceInfoCfm</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, ble_cmd_app_gatt.o(i.LeCmdAppHandleGattInclServiceInfoCfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeCmdAppHandleGattInclServiceInfoCfm
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGattTaskHandler
</UL>

<P><STRONG><a name="[277]"></a>LeCmdAppHandleGattInclServiceInfoInd</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ble_cmd_app_gatt.o(i.LeCmdAppHandleGattInclServiceInfoInd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LeCmdAppHandleGattInclServiceInfoInd
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGattTaskHandler
</UL>

<P><STRONG><a name="[27b]"></a>LeCmdAppHandleGattReadLongCharValCfm</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ble_cmd_app_gatt.o(i.LeCmdAppHandleGattReadLongCharValCfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LeCmdAppHandleGattReadLongCharValCfm
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostCmdApp
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeCmdAppGattTaskHandler
</UL>

<P><STRONG><a name="[2f4]"></a>LeNvmStoreReadFromMwFim</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, ble_nvm_store_patch.o(i.LeNvmStoreReadFromMwFim))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = LeNvmStoreReadFromMwFim &rArr; MwFim_FileRead &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OctetsToDec16
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostStoreRead
</UL>

<P><STRONG><a name="[2f6]"></a>LeNvmStoreWriteToMwFim</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, ble_nvm_store_patch.o(i.LeNvmStoreWriteToMwFim))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = LeNvmStoreWriteToMwFim &rArr; MwFim_FileWrite &rArr; MwFim_FileWriteDo &rArr; MwFim_GroupSwap &rArr; Hal_Flash_AddrRead
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PanicUnlessMalloc
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeMem
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemSet
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemCopy
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileRead
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MwFim_FileWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeHostStoreWrite
</UL>

<P><STRONG><a name="[438]"></a>wifi_convert_auth_mode</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wifi_api.o(i.wifi_convert_auth_mode))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_scan_get_ap_records
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_scan_get_ap_list
</UL>

<P><STRONG><a name="[cd]"></a>wifi_event_sta_connected_handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wifi_event_handler.o(i.wifi_event_sta_connected_handler))
<BR>[Address Reference Count : 1]<UL><LI> wifi_event_handler.o(i.wifi_install_default_event_handlers)
</UL>
<P><STRONG><a name="[ce]"></a>wifi_event_sta_disconnected_handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wifi_event_handler.o(i.wifi_event_sta_disconnected_handler))
<BR>[Address Reference Count : 1]<UL><LI> wifi_event_handler.o(i.wifi_install_default_event_handlers)
</UL>
<P><STRONG><a name="[c3]"></a>sntp_dns_found</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sntp_client.o(i.sntp_dns_found))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sntp_dns_found &rArr; sntp_send_request
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_send_request
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_retry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sntp_client.o(i.sntp_request)
</UL>
<P><STRONG><a name="[c0]"></a>sntp_recv</STRONG> (Thumb, 306 bytes, Stack size 40 bytes, sntp_client.o(i.sntp_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sntp_recv &rArr; ctime &rArr; asctime
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_untimeout
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_debug
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctime
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_retry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sntp_client.o(i.sntp_init)
</UL>
<P><STRONG><a name="[c2]"></a>sntp_request</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, sntp_client.o(i.sntp_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sntp_request &rArr; sntp_send_request
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip6addr_ntoa
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4addr_ntoa
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_gethostbyname
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_debug
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_send_request
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_init
</UL>
<BR>[Address Reference Count : 4]<UL><LI> sntp_client.o(i.sntp_recv)
<LI> sntp_client.o(i.sntp_retry)
<LI> sntp_client.o(i.sntp_send_request)
<LI> sntp_client.o(i.sntp_stop)
</UL>
<P><STRONG><a name="[c1]"></a>sntp_retry</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, sntp_client.o(i.sntp_retry))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sntp_retry
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_debug
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_recv
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_dns_found
</UL>
<BR>[Address Reference Count : 4]<UL><LI> sntp_client.o(i.sntp_recv)
<LI> sntp_client.o(i.sntp_request)
<LI> sntp_client.o(i.sntp_send_request)
<LI> sntp_client.o(i.sntp_stop)
</UL>
<P><STRONG><a name="[40a]"></a>sntp_send_request</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, sntp_client.o(i.sntp_send_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sntp_send_request
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout_debug
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_request
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sntp_dns_found
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
